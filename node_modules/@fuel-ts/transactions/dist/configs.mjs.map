{"version":3,"sources":["../src/configs.ts"],"sourcesContent":["/** Maximum contract size, in bytes. */\nexport const CONTRACT_MAX_SIZE = 16 * 1024;\n\n/** Maximum number of witnesses. */\nexport const MAX_WITNESSES = 16;\n\n/**\n * Gas Price factor this is used to calculate\n * This is used to calculate the gas fee in Native Coins.\n * Ex.: transactionFee = Math.ceil(<gasUsed> / MAX_GAS_PER_TX);\n */\n\n/** Maximum length of script, in instructions. */\nexport const MAX_SCRIPT_LENGTH = 1024 * 1024 * 1024;\n\n/** Maximum length of script data, in bytes. */\nexport const MAX_SCRIPT_DATA_LENGTH = 1024 * 1024 * 1024;\n\n/** Maximum number of static contracts. */\nexport const MAX_STATIC_CONTRACTS = 255;\n\n/** Maximum length of predicate, in instructions. */\nexport const MAX_PREDICATE_LENGTH = 1024 * 1024;\n\n/** Maximum length of predicate data, in bytes. */\nexport const MAX_PREDICATE_DATA_LENGTH = 1024 * 1024;\n\n// Revert with this value for a failing call to `std::revert::require`.\nexport const FAILED_REQUIRE_SIGNAL = '0xffffffffffff0000';\n\n// Revert with this value for a failing call to `std::asset::transfer_to_address`.\nexport const FAILED_TRANSFER_TO_ADDRESS_SIGNAL = '0xffffffffffff0001';\n\n// Revert with this value for a failing call to `std::assert::assert_eq`.\nexport const FAILED_ASSERT_EQ_SIGNAL = '0xffffffffffff0003';\n\n// Revert with this value for a failing call to `std::assert::assert`.\nexport const FAILED_ASSERT_SIGNAL = '0xffffffffffff0004';\n\n// Revert with this value for a failing call to `std::assert::assert_ne`.\nexport const FAILED_ASSERT_NE_SIGNAL = '0xffffffffffff0005';\n\nexport const FAILED_UNKNOWN_SIGNAL = '0x0';\n\nexport const PANIC_REASONS = [\n  'UnknownPanicReason',\n  'Revert',\n  'OutOfGas',\n  'TransactionValidity',\n  'MemoryOverflow',\n  'ArithmeticOverflow',\n  'ContractNotFound',\n  'MemoryOwnership',\n  'NotEnoughBalance',\n  'ExpectedInternalContext',\n  'AssetIdNotFound',\n  'InputNotFound',\n  'OutputNotFound',\n  'WitnessNotFound',\n  'TransactionMaturity',\n  'InvalidMetadataIdentifier',\n  'MalformedCallStructure',\n  'ReservedRegisterNotWritable',\n  'InvalidFlags',\n  'InvalidImmediateValue',\n  'ExpectedCoinInput',\n  'EcalError',\n  'MemoryWriteOverlap',\n  'ContractNotInInputs',\n  'InternalBalanceOverflow',\n  'ContractMaxSize',\n  'ExpectedUnallocatedStack',\n  'MaxStaticContractsReached',\n  'TransferAmountCannotBeZero',\n  'ExpectedOutputVariable',\n  'ExpectedParentInternalContext',\n  'PredicateReturnedNonOne',\n  'ContractIdAlreadyDeployed',\n  'ContractMismatch',\n  'MessageDataTooLong',\n  'ArithmeticError',\n  'ContractInstructionNotAllowed',\n  'TransferZeroCoins',\n  'InvalidInstruction',\n  'MemoryNotExecutable',\n  'PolicyIsNotSet',\n  'PolicyNotFound',\n  'TooManyReceipts',\n  'BalanceOverflow',\n  'InvalidBlockHeight',\n  'TooManySlots',\n  'ExpectedNestedCaller',\n  'MemoryGrowthOverlap',\n  'UninitalizedMemoryAccess',\n  'OverridingConsensusParameters',\n  'UnknownStateTransactionBytecodeRoot',\n  'OverridingStateTransactionBytecode',\n  'BytecodeAlreadyUploaded',\n  'ThePartIsNotSequentiallyConnected',\n  'BlobIdAlreadyUploaded',\n  'BlobNotFound',\n  'GasCostNotDefined',\n];\n\nexport const PANIC_DOC_URL = 'https://docs.rs/fuel-asm/latest/fuel_asm/enum.PanicReason.html';\n"],"mappings":";AACO,IAAM,oBAAoB,KAAK;AAG/B,IAAM,gBAAgB;AAStB,IAAM,oBAAoB,OAAO,OAAO;AAGxC,IAAM,yBAAyB,OAAO,OAAO;AAG7C,IAAM,uBAAuB;AAG7B,IAAM,uBAAuB,OAAO;AAGpC,IAAM,4BAA4B,OAAO;AAGzC,IAAM,wBAAwB;AAG9B,IAAM,oCAAoC;AAG1C,IAAM,0BAA0B;AAGhC,IAAM,uBAAuB;AAG7B,IAAM,0BAA0B;AAEhC,IAAM,wBAAwB;AAE9B,IAAM,gBAAggBAAgB;","names":[]}