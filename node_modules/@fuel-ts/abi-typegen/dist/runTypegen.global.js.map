{"version":3,"sources":["../../../node_modules/.pnpm/balanced-match@1.0.2/node_modules/balanced-match/index.js","../../../node_modules/.pnpm/brace-expansion@2.0.1/node_modules/brace-expansion/index.js","../../../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/utils.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/exception.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/helpers/block-helper-missing.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/helpers/each.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/helpers/helper-missing.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/helpers/if.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/helpers/log.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/helpers/lookup.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/helpers/with.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/helpers.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/decorators/inline.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/decorators.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/logger.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/internal/create-new-lookup-object.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/internal/proto-access.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/base.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/safe-string.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/internal/wrapHelper.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/runtime.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/no-conflict.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars.runtime.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/ast.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/parser.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/visitor.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/whitespace-control.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/helpers.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/base.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/compiler.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64-vlq.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/util.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/array-set.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/mapping-list.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-generator.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/binary-search.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/quick-sort.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-consumer.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-node.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/source-map.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/code-gen.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/javascript-compiler.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/handlebars/compiler/printer.js","../../../node_modules/.pnpm/handlebars@4.7.8/node_modules/handlebars/lib/index.js","../../versions/src/lib/getBuiltinVersions.ts","../../versions/src/lib/semver.ts","../../versions/src/lib/checkFuelCoreVersionCompatibility.ts","../../versions/src/index.ts","../../errors/src/error-codes.ts","../../errors/src/fuel-error.ts","../src/runTypegen.ts","../../../node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/index.ts","../../../node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/assert-valid-pattern.ts","../../../node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/brace-expressions.ts","../../../node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/unescape.ts","../../../node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/ast.ts","../../../node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/escape.ts","../../../node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/glob.ts","../../../node_modules/.pnpm/lru-cache@10.4.3/node_modules/lru-cache/src/index.ts","../../../node_modules/.pnpm/path-scurry@1.11.1/node_modules/path-scurry/src/index.ts","../../../node_modules/.pnpm/minipass@7.1.2/node_modules/minipass/src/index.ts","../../../node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/pattern.ts","../../../node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/ignore.ts","../../../node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/processor.ts","../../../node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/walker.ts","../../../node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/has-magic.ts","../../../node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/index.ts","../../../node_modules/.pnpm/mkdirp@3.0.1/node_modules/mkdirp/src/mkdirp-manual.ts","../../../node_modules/.pnpm/mkdirp@3.0.1/node_modules/mkdirp/src/opts-arg.ts","../../../node_modules/.pnpm/mkdirp@3.0.1/node_modules/mkdirp/src/mkdirp-native.ts","../../../node_modules/.pnpm/mkdirp@3.0.1/node_modules/mkdirp/src/find-made.ts","../../../node_modules/.pnpm/mkdirp@3.0.1/node_modules/mkdirp/src/path-arg.ts","../../../node_modules/.pnpm/mkdirp@3.0.1/node_modules/mkdirp/src/use-native.ts","../../../node_modules/.pnpm/mkdirp@3.0.1/node_modules/mkdirp/src/index.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/opt-arg.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/path-arg.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/platform.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/fs.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/rimraf-posix.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/readdir-or-error.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/ignore-enoent.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/rimraf-windows.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/fix-eperm.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/retry-busy.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/rimraf-move-remove.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/default-tmp.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/rimraf-manual.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/rimraf-native.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/use-native.ts","../../../node_modules/.pnpm/rimraf@5.0.10/node_modules/rimraf/src/index.ts","../../math/src/bn.ts","../../math/src/configs.ts","../../math/src/decimal.ts","../../math/src/functional.ts","../../math/src/math.ts","../../../node_modules/.pnpm/fflate@0.8.2/node_modules/fflate/esm/index.mjs","../../utils/src/utils/capitalizeString.ts","../../utils/src/utils/chunkAndPadBytes.ts","../../utils/src/utils/arrayify.ts","../../utils/src/utils/concat.ts","../../utils/src/utils/hexlify.ts","../../utils/src/utils/normalizeString.ts","../../utils/src/utils/date-time.ts","../../utils/src/utils/sleep.ts","../../utils/src/utils/defaultSnapshots/chainConfig.json","../../utils/src/utils/defaultSnapshots/metadata.json","../../utils/src/utils/defaultSnapshots/stateConfig.json","../../utils/src/utils/defaultSnapshotConfigs.ts","../../utils/src/utils/isDefined.ts","../../utils/src/utils/base58.ts","../../utils/src/utils/dataSlice.ts","../../utils/src/utils/toUtf8Bytes.ts","../../utils/src/utils/toUtf8String.ts","../../utils/src/utils/bytecode.ts","../../utils/src/index.ts","../src/abi/types/AType.ts","../src/abi/types/EmptyType.ts","../src/abi/types/OptionType.ts","../src/utils/findType.ts","../src/utils/getFunctionInputs.ts","../src/utils/parseTypeArguments.ts","../src/utils/getTypeDeclaration.ts","../src/abi/functions/Function.ts","../src/utils/makeFunction.ts","../src/utils/parseFunctions.ts","../src/abi/types/ArrayType.ts","../src/abi/types/StrType.ts","../src/abi/types/B256Type.ts","../src/abi/types/B512Type.ts","../src/abi/types/BoolType.ts","../src/abi/types/BytesType.ts","../src/utils/extractStructName.ts","../src/abi/types/ResultType.ts","../src/abi/types/EnumType.ts","../src/abi/types/EvmAddressType.ts","../src/abi/types/GenericType.ts","../src/abi/types/U8Type.ts","../src/abi/types/U64Type.ts","../src/abi/types/RawUntypedPtr.ts","../src/abi/types/RawUntypedSlice.ts","../src/abi/types/StdStringType.ts","../src/abi/types/StrSliceType.ts","../src/abi/types/StructType.ts","../src/abi/types/TupleType.ts","../src/abi/types/U16Type.ts","../src/abi/types/U256Type.ts","../src/abi/types/U32Type.ts","../src/abi/types/VectorType.ts","../src/utils/supportedTypes.ts","../src/utils/makeType.ts","../src/utils/shouldSkipAbiType.ts","../src/utils/parseTypes.ts","../src/utils/transpile-abi.ts","../src/abi/configurable/Configurable.ts","../src/abi/Abi.ts","../src/types/enums/ProgramTypeEnum.ts","../src/utils/assembleContracts.ts","../src/templates/renderHbsTemplate.ts","../src/templates/common/common.ts","../src/templates/common/index.ts","../src/templates/contract/factory.ts","../src/templates/utils/formatEnums.ts","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_isPlaceholder.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_curry1.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_curry2.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_isArray.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_isTransformer.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_dispatchable.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_xfBase.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_arrayFromIterator.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_includesWith.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_functionName.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_has.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_objectIs.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_isArguments.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/keys.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/type.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_equals.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/equals.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_indexOf.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_includes.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_identity.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/identity.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_Set.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/internal/_xuniqBy.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/uniqBy.js","../../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/uniq.js","../src/templates/utils/formatImports.ts","../src/templates/utils/formatStructs.ts","../src/templates/contract/main.ts","../src/utils/assemblePredicates.ts","../src/templates/predicate/main.ts","../src/utils/assembleScripts.ts","../src/templates/script/main.ts","../src/utils/validateBinFile.ts","../src/AbiTypeGen.ts","../src/utils/collectBinFilePaths.ts","../src/utils/collectStorageSlotsFilePaths.ts"],"sourcesContent":["'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","const escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nconst badChars = /[&<>\"'`=]/g,\n  possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nexport function extend(obj /* , ...source */) {\n  for (let i = 1; i < arguments.length; i++) {\n    for (let key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nexport let toString = Object.prototype.toString;\n\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nlet isFunction = function(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  isFunction = function(value) {\n    return (\n      typeof value === 'function' &&\n      toString.call(value) === '[object Function]'\n    );\n  };\n}\nexport { isFunction };\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nexport const isArray =\n  Array.isArray ||\n  function(value) {\n    return value && typeof value === 'object'\n      ? toString.call(value) === '[object Array]'\n      : false;\n  };\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexport function indexOf(array, value) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nexport function isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function createFrame(object) {\n  let frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nexport function blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nexport function appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n","const errorProps = [\n  'description',\n  'fileName',\n  'lineNumber',\n  'endLineNumber',\n  'message',\n  'name',\n  'number',\n  'stack'\n];\n\nfunction Exception(message, node) {\n  let loc = node && node.loc,\n    line,\n    endLineNumber,\n    column,\n    endColumn;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  let tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (let idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexport default Exception;\n","import { appendContextPath, createFrame, isArray } from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('blockHelperMissing', function(context, options) {\n    let inverse = options.inverse,\n      fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        let data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.name\n        );\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isArray,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('each', function(context, options) {\n    if (!options) {\n      throw new Exception('Must pass iterator to #each');\n    }\n\n    let fn = options.fn,\n      inverse = options.inverse,\n      i = 0,\n      ret = '',\n      data,\n      contextPath;\n\n    if (options.data && options.ids) {\n      contextPath =\n        appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret =\n        ret +\n        fn(context[field], {\n          data: data,\n          blockParams: blockParams(\n            [context[field], field],\n            [contextPath + field, null]\n          )\n        });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (let j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (typeof Symbol === 'function' && context[Symbol.iterator]) {\n        const newContext = [];\n        const iterator = context[Symbol.iterator]();\n        for (let it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (let j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        let priorKey;\n\n        Object.keys(context).forEach(key => {\n          // We're running the iterations one step out of sync so we can detect\n          // the last iteration without have to scan the object twice and create\n          // an itermediate keys array.\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1);\n          }\n          priorKey = key;\n          i++;\n        });\n        if (priorKey !== undefined) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n}\n","import Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('helperMissing', function(/* [args, ]options */) {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new Exception(\n        'Missing helper: \"' + arguments[arguments.length - 1].name + '\"'\n      );\n    }\n  });\n}\n","import { isEmpty, isFunction } from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('if', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#if requires exactly one argument');\n    }\n    if (isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if ((!options.hash.includeZero && !conditional) || isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('log', function(/* message, options */) {\n    let args = [undefined],\n      options = arguments[arguments.length - 1];\n    for (let i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    let level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log(...args);\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('lookup', function(obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isEmpty,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('with', function(context, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#with requires exactly one argument');\n    }\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    let fn = options.fn;\n\n    if (!isEmpty(context)) {\n      let data = options.data;\n      if (options.data && options.ids) {\n        data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.ids[0]\n        );\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n}\n","import registerBlockHelperMissing from './helpers/block-helper-missing';\nimport registerEach from './helpers/each';\nimport registerHelperMissing from './helpers/helper-missing';\nimport registerIf from './helpers/if';\nimport registerLog from './helpers/log';\nimport registerLookup from './helpers/lookup';\nimport registerWith from './helpers/with';\n\nexport function registerDefaultHelpers(instance) {\n  registerBlockHelperMissing(instance);\n  registerEach(instance);\n  registerHelperMissing(instance);\n  registerIf(instance);\n  registerLog(instance);\n  registerLookup(instance);\n  registerWith(instance);\n}\n\nexport function moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n","import { extend } from '../utils';\n\nexport default function(instance) {\n  instance.registerDecorator('inline', function(fn, props, container, options) {\n    let ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function(context, options) {\n        // Create a new partials stack frame prior to exec.\n        let original = container.partials;\n        container.partials = extend({}, original, props.partials);\n        let ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n}\n","import registerInline from './decorators/inline';\n\nexport function registerDefaultDecorators(instance) {\n  registerInline(instance);\n}\n","import { indexOf } from './utils';\n\nlet logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function(level) {\n    if (typeof level === 'string') {\n      let levelMap = indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function(level, ...message) {\n    level = logger.lookupLevel(level);\n\n    if (\n      typeof console !== 'undefined' &&\n      logger.lookupLevel(logger.level) <= level\n    ) {\n      let method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n      console[method](...message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexport default logger;\n","import { extend } from '../utils';\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\nexport function createNewLookupObject(...sources) {\n  return extend(Object.create(null), ...sources);\n}\n","import { createNewLookupObject } from './create-new-lookup-object';\nimport logger from '../logger';\n\nconst loggedProperties = Object.create(null);\n\nexport function createProtoAccessControl(runtimeOptions) {\n  let defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  let defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: createNewLookupObject(\n        defaultPropertyWhiteList,\n        runtimeOptions.allowedProtoProperties\n      ),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: createNewLookupObject(\n        defaultMethodWhiteList,\n        runtimeOptions.allowedProtoMethods\n      ),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nexport function resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log(\n      'error',\n      `Handlebars: Access has been denied to resolve the property \"${propertyName}\" because it is not an \"own property\" of its parent.\\n` +\n        `You can add a runtime option to disable the check or this warning:\\n` +\n        `See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`\n    );\n  }\n}\n\nexport function resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(propertyName => {\n    delete loggedProperties[propertyName];\n  });\n}\n","import { createFrame, extend, toString } from './utils';\nimport Exception from './exception';\nimport { registerDefaultHelpers } from './helpers';\nimport { registerDefaultDecorators } from './decorators';\nimport logger from './logger';\nimport { resetLoggedProperties } from './internal/proto-access';\n\nexport const VERSION = '4.7.8';\nexport const COMPILER_REVISION = 8;\nexport const LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple helpers');\n      }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(\n          `Attempting to register a partial called \"${name}\" as undefined`\n        );\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple decorators');\n      }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses() {\n    resetLoggedProperties();\n  }\n};\n\nexport let log = logger.log;\n\nexport { createFrame, logger };\n","// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n  return '' + this.string;\n};\n\nexport default SafeString;\n","export function wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  let wrapper = function(/* dynamic arguments */) {\n    const options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n","import * as Utils from './utils';\nimport Exception from './exception';\nimport {\n  COMPILER_REVISION,\n  createFrame,\n  LAST_COMPATIBLE_COMPILER_REVISION,\n  REVISION_CHANGES\n} from './base';\nimport { moveHelperToHooks } from './helpers';\nimport { wrapHelper } from './internal/wrapHelper';\nimport {\n  createProtoAccessControl,\n  resultIsAllowed\n} from './internal/proto-access';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = (compilerInfo && compilerInfo[0]) || 1,\n    currentRevision = COMPILER_REVISION;\n\n  if (\n    compilerRevision >= LAST_COMPATIBLE_COMPILER_REVISION &&\n    compilerRevision <= COMPILER_REVISION\n  ) {\n    return;\n  }\n\n  if (compilerRevision < LAST_COMPATIBLE_COMPILER_REVISION) {\n    const runtimeVersions = REVISION_CHANGES[currentRevision],\n      compilerVersions = REVISION_CHANGES[compilerRevision];\n    throw new Exception(\n      'Template was precompiled with an older version of Handlebars than the current runtime. ' +\n        'Please update your precompiler to a newer version (' +\n        runtimeVersions +\n        ') or downgrade your runtime to an older version (' +\n        compilerVersions +\n        ').'\n    );\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new Exception(\n      'Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n        'Please update your runtime to a newer version (' +\n        compilerInfo[1] +\n        ').'\n    );\n  }\n}\n\nexport function template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  const templateWasPrecompiledWithCompilerV7 =\n    templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    let extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    let result = env.VM.invokePartial.call(\n      this,\n      partial,\n      context,\n      extendedOptions\n    );\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(\n        partial,\n        templateSpec.compilerOptions,\n        env\n      );\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception(\n        'The partial ' +\n          options.name +\n          ' could not be compiled when running in runtime-only mode'\n      );\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function(parent, propertyName) {\n      let result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        let result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n        fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(\n          this,\n          i,\n          fn,\n          data,\n          declaredBlockParams,\n          blockParams,\n          depths\n        );\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function(param, common) {\n      let obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n      blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths =\n          context != options.depths[0]\n            ? [context].concat(options.depths)\n            : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return (\n        '' +\n        templateSpec.main(\n          container,\n          context,\n          container.helpers,\n          container.partials,\n          data,\n          blockParams,\n          depths\n        )\n      );\n    }\n\n    main = executeDecorators(\n      templateSpec.main,\n      main,\n      container,\n      options.depths || [],\n      data,\n      blockParams\n    );\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      let mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(\n          options.partials,\n          env.partials\n        );\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend(\n          {},\n          env.decorators,\n          options.decorators\n        );\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = createProtoAccessControl(options);\n\n      let keepHelperInHelpers =\n        options.allowCallsToHelperMissing ||\n        templateWasPrecompiledWithCompilerV7;\n      moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(\n      container,\n      i,\n      templateSpec[i],\n      data,\n      0,\n      blockParams,\n      depths\n    );\n  };\n  return ret;\n}\n\nexport function wrapProgram(\n  container,\n  i,\n  fn,\n  data,\n  declaredBlockParams,\n  blockParams,\n  depths\n) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (\n      depths &&\n      context != depths[0] &&\n      !(context === container.nullContext && depths[0] === null)\n    ) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(\n      container,\n      context,\n      container.helpers,\n      container.partials,\n      options.data || data,\n      blockParams && [options.blockParams].concat(blockParams),\n      currentDepths\n    );\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(\n      context,\n      options = {}\n    ) {\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(\n      prog,\n      props,\n      container,\n      depths && depths[0],\n      data,\n      blockParams,\n      depths\n    );\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(helperName => {\n    let helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  const lookupProperty = container.lookupProperty;\n  return wrapHelper(helper, options => {\n    return Utils.extend({ lookupProperty }, options);\n  });\n}\n","/* global globalThis */\nexport default function(Handlebars) {\n  /* istanbul ignore next */\n  // https://mathiasbynens.be/notes/globalthis\n  (function() {\n    if (typeof globalThis === 'object') return;\n    Object.prototype.__defineGetter__('__magic__', function() {\n      return this;\n    });\n    __magic__.globalThis = __magic__; // eslint-disable-line no-undef\n    delete Object.prototype.__magic__;\n  })();\n\n  const $Handlebars = globalThis.Handlebars;\n\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (globalThis.Handlebars === Handlebars) {\n      globalThis.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n}\n","import * as base from './handlebars/base';\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\nimport SafeString from './handlebars/safe-string';\nimport Exception from './handlebars/exception';\nimport * as Utils from './handlebars/utils';\nimport * as runtime from './handlebars/runtime';\n\nimport noConflict from './handlebars/no-conflict';\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  let hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = SafeString;\n  hb.Exception = Exception;\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function(spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst['default'] = inst;\n\nexport default inst;\n","let AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function(node) {\n      return (\n        node.type === 'SubExpression' ||\n        ((node.type === 'MustacheStatement' ||\n          node.type === 'BlockStatement') &&\n          !!((node.params && node.params.length) || node.hash))\n      );\n    },\n\n    scopedId: function(path) {\n      return /^\\.|this\\b/.test(path.original);\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function(path) {\n      return (\n        path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth\n      );\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexport default AST;\n","// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\nvar handlebars = (function(){\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"partialBlock\":12,\"content\":13,\"COMMENT\":14,\"CONTENT\":15,\"openRawBlock\":16,\"rawBlock_repetition0\":17,\"END_RAW_BLOCK\":18,\"OPEN_RAW_BLOCK\":19,\"helperName\":20,\"openRawBlock_repetition0\":21,\"openRawBlock_option0\":22,\"CLOSE_RAW_BLOCK\":23,\"openBlock\":24,\"block_option0\":25,\"closeBlock\":26,\"openInverse\":27,\"block_option1\":28,\"OPEN_BLOCK\":29,\"openBlock_repetition0\":30,\"openBlock_option0\":31,\"openBlock_option1\":32,\"CLOSE\":33,\"OPEN_INVERSE\":34,\"openInverse_repetition0\":35,\"openInverse_option0\":36,\"openInverse_option1\":37,\"openInverseChain\":38,\"OPEN_INVERSE_CHAIN\":39,\"openInverseChain_repetition0\":40,\"openInverseChain_option0\":41,\"openInverseChain_option1\":42,\"inverseAndProgram\":43,\"INVERSE\":44,\"inverseChain\":45,\"inverseChain_option0\":46,\"OPEN_ENDBLOCK\":47,\"OPEN\":48,\"mustache_repetition0\":49,\"mustache_option0\":50,\"OPEN_UNESCAPED\":51,\"mustache_repetition1\":52,\"mustache_option1\":53,\"CLOSE_UNESCAPED\":54,\"OPEN_PARTIAL\":55,\"partialName\":56,\"partial_repetition0\":57,\"partial_option0\":58,\"openPartialBlock\":59,\"OPEN_PARTIAL_BLOCK\":60,\"openPartialBlock_repetition0\":61,\"openPartialBlock_option0\":62,\"param\":63,\"sexpr\":64,\"OPEN_SEXPR\":65,\"sexpr_repetition0\":66,\"sexpr_option0\":67,\"CLOSE_SEXPR\":68,\"hash\":69,\"hash_repetition_plus0\":70,\"hashSegment\":71,\"ID\":72,\"EQUALS\":73,\"blockParams\":74,\"OPEN_BLOCK_PARAMS\":75,\"blockParams_repetition_plus0\":76,\"CLOSE_BLOCK_PARAMS\":77,\"path\":78,\"dataName\":79,\"STRING\":80,\"NUMBER\":81,\"BOOLEAN\":82,\"UNDEFINED\":83,\"NULL\":84,\"DATA\":85,\"pathSegments\":86,\"SEP\":87,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",14:\"COMMENT\",15:\"CONTENT\",18:\"END_RAW_BLOCK\",19:\"OPEN_RAW_BLOCK\",23:\"CLOSE_RAW_BLOCK\",29:\"OPEN_BLOCK\",33:\"CLOSE\",34:\"OPEN_INVERSE\",39:\"OPEN_INVERSE_CHAIN\",44:\"INVERSE\",47:\"OPEN_ENDBLOCK\",48:\"OPEN\",51:\"OPEN_UNESCAPED\",54:\"CLOSE_UNESCAPED\",55:\"OPEN_PARTIAL\",60:\"OPEN_PARTIAL_BLOCK\",65:\"OPEN_SEXPR\",68:\"CLOSE_SEXPR\",72:\"ID\",73:\"EQUALS\",75:\"OPEN_BLOCK_PARAMS\",77:\"CLOSE_BLOCK_PARAMS\",80:\"STRING\",81:\"NUMBER\",82:\"BOOLEAN\",83:\"UNDEFINED\",84:\"NULL\",85:\"DATA\",87:\"SEP\"},\nproductions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$\n) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return $$[$0-1]; \nbreak;\ncase 2:this.$ = yy.prepareProgram($$[$0]);\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = $$[$0];\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0];\nbreak;\ncase 7:this.$ = $$[$0];\nbreak;\ncase 8:this.$ = $$[$0];\nbreak;\ncase 9:\n    this.$ = {\n      type: 'CommentStatement',\n      value: yy.stripComment($$[$0]),\n      strip: yy.stripFlags($$[$0], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 10:\n    this.$ = {\n      type: 'ContentStatement',\n      original: $$[$0],\n      value: $$[$0],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 11:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 12:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1] };\nbreak;\ncase 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\nbreak;\ncase 14:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\nbreak;\ncase 15:this.$ = { open: $$[$0-5], path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 16:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 17:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 18:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\nbreak;\ncase 19:\n    var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n        program = yy.prepareProgram([inverse], $$[$0-1].loc);\n    program.chained = true;\n\n    this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n  \nbreak;\ncase 20:this.$ = $$[$0];\nbreak;\ncase 21:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\nbreak;\ncase 22:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 23:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 24:\n    this.$ = {\n      type: 'PartialStatement',\n      name: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      indent: '',\n      strip: yy.stripFlags($$[$0-4], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 25:this.$ = yy.preparePartialBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 26:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1], strip: yy.stripFlags($$[$0-4], $$[$0]) };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0];\nbreak;\ncase 29:\n    this.$ = {\n      type: 'SubExpression',\n      path: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 30:this.$ = {type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 31:this.$ = {type: 'HashPair', key: yy.id($$[$0-2]), value: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 32:this.$ = yy.id($$[$0-1]);\nbreak;\ncase 33:this.$ = $$[$0];\nbreak;\ncase 34:this.$ = $$[$0];\nbreak;\ncase 35:this.$ = {type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 36:this.$ = {type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$)};\nbreak;\ncase 37:this.$ = {type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$)};\nbreak;\ncase 38:this.$ = {type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$)};\nbreak;\ncase 39:this.$ = {type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$)};\nbreak;\ncase 40:this.$ = $$[$0];\nbreak;\ncase 41:this.$ = $$[$0];\nbreak;\ncase 42:this.$ = yy.preparePath(true, $$[$0], this._$);\nbreak;\ncase 43:this.$ = yy.preparePath(false, $$[$0], this._$);\nbreak;\ncase 44: $$[$0-2].push({part: yy.id($$[$0]), original: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \nbreak;\ncase 45:this.$ = [{part: yy.id($$[$0]), original: $$[$0]}];\nbreak;\ncase 46:this.$ = [];\nbreak;\ncase 47:$$[$0-1].push($$[$0]);\nbreak;\ncase 48:this.$ = [];\nbreak;\ncase 49:$$[$0-1].push($$[$0]);\nbreak;\ncase 50:this.$ = [];\nbreak;\ncase 51:$$[$0-1].push($$[$0]);\nbreak;\ncase 58:this.$ = [];\nbreak;\ncase 59:$$[$0-1].push($$[$0]);\nbreak;\ncase 64:this.$ = [];\nbreak;\ncase 65:$$[$0-1].push($$[$0]);\nbreak;\ncase 70:this.$ = [];\nbreak;\ncase 71:$$[$0-1].push($$[$0]);\nbreak;\ncase 78:this.$ = [];\nbreak;\ncase 79:$$[$0-1].push($$[$0]);\nbreak;\ncase 82:this.$ = [];\nbreak;\ncase 83:$$[$0-1].push($$[$0]);\nbreak;\ncase 86:this.$ = [];\nbreak;\ncase 87:$$[$0-1].push($$[$0]);\nbreak;\ncase 90:this.$ = [];\nbreak;\ncase 91:$$[$0-1].push($$[$0]);\nbreak;\ncase 94:this.$ = [];\nbreak;\ncase 95:$$[$0-1].push($$[$0]);\nbreak;\ncase 98:this.$ = [$$[$0]];\nbreak;\ncase 99:$$[$0-1].push($$[$0]);\nbreak;\ncase 100:this.$ = [$$[$0]];\nbreak;\ncase 101:$$[$0-1].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],\ndefaultActions: {4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},\nparseError: function parseError (str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex () {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState () {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules () {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin (condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n) {\n\n\nfunction strip(start, end) {\n  return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n}\n\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:\n                                   if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"mu\");\n                                   } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"emu\");\n                                   } else {\n                                     this.begin(\"mu\");\n                                   }\n                                   if(yy_.yytext) return 15;\n                                 \nbreak;\ncase 1:return 15;\nbreak;\ncase 2:\n                                   this.popState();\n                                   return 15;\n                                 \nbreak;\ncase 3:this.begin('raw'); return 15;\nbreak;\ncase 4:\n                                  this.popState();\n                                  // Should be using `this.topState()` below, but it currently\n                                  // returns the second top instead of the first top. Opened an\n                                  // issue about it at https://github.com/zaach/jison/issues/291\n                                  if (this.conditionStack[this.conditionStack.length-1] === 'raw') {\n                                    return 15;\n                                  } else {\n                                    strip(5, 9);\n                                    return 'END_RAW_BLOCK';\n                                  }\n                                 \nbreak;\ncase 5: return 15; \nbreak;\ncase 6:\n  this.popState();\n  return 14;\n\nbreak;\ncase 7:return 65;\nbreak;\ncase 8:return 68;\nbreak;\ncase 9: return 19; \nbreak;\ncase 10:\n                                  this.popState();\n                                  this.begin('raw');\n                                  return 23;\n                                 \nbreak;\ncase 11:return 55;\nbreak;\ncase 12:return 60;\nbreak;\ncase 13:return 29;\nbreak;\ncase 14:return 47;\nbreak;\ncase 15:this.popState(); return 44;\nbreak;\ncase 16:this.popState(); return 44;\nbreak;\ncase 17:return 34;\nbreak;\ncase 18:return 39;\nbreak;\ncase 19:return 51;\nbreak;\ncase 20:return 48;\nbreak;\ncase 21:\n  this.unput(yy_.yytext);\n  this.popState();\n  this.begin('com');\n\nbreak;\ncase 22:\n  this.popState();\n  return 14;\n\nbreak;\ncase 23:return 48;\nbreak;\ncase 24:return 73;\nbreak;\ncase 25:return 72;\nbreak;\ncase 26:return 72;\nbreak;\ncase 27:return 87;\nbreak;\ncase 28:// ignore whitespace\nbreak;\ncase 29:this.popState(); return 54;\nbreak;\ncase 30:this.popState(); return 33;\nbreak;\ncase 31:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 80;\nbreak;\ncase 32:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 80;\nbreak;\ncase 33:return 85;\nbreak;\ncase 34:return 82;\nbreak;\ncase 35:return 82;\nbreak;\ncase 36:return 83;\nbreak;\ncase 37:return 84;\nbreak;\ncase 38:return 81;\nbreak;\ncase 39:return 75;\nbreak;\ncase 40:return 77;\nbreak;\ncase 41:return 72;\nbreak;\ncase 42:yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g,'$1'); return 72;\nbreak;\ncase 43:return 'INVALID';\nbreak;\ncase 44:return 5;\nbreak;\n}\n};\nlexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{(?=[^/]))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#>)/,/^(?:\\{\\{(~)?#\\*?)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?\\*?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:undefined(?=([~}\\s)])))/,/^(?:null(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[(\\\\\\]|[^\\]])*\\])/,/^(?:.)/,/^(?:$)/];\nlexer.conditions = {\"mu\":{\"rules\":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[6],\"inclusive\":false},\"raw\":{\"rules\":[3,4,5],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,44],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();export default handlebars;\n","import Exception from '../exception';\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function(node, name) {\n    let value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new Exception(\n          'Unexpected node type \"' +\n            value.type +\n            '\" found when accepting ' +\n            name +\n            ' on ' +\n            node.type\n        );\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new Exception(node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function(array) {\n    for (let i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new Exception('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    let ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function(/* content */) {},\n  CommentStatement: function(/* comment */) {},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function(/* path */) {},\n\n  StringLiteral: function(/* string */) {},\n  NumberLiteral: function(/* number */) {},\n  BooleanLiteral: function(/* bool */) {},\n  UndefinedLiteral: function(/* literal */) {},\n  NullLiteral: function(/* literal */) {},\n\n  Hash: function(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexport default Visitor;\n","import Visitor from './visitor';\n\nfunction WhitespaceControl(options = {}) {\n  this.options = options;\n}\nWhitespaceControl.prototype = new Visitor();\n\nWhitespaceControl.prototype.Program = function(program) {\n  const doStandalone = !this.options.ignoreStandalone;\n\n  let isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  let body = program.body;\n  for (let i = 0, l = body.length; i < l; i++) {\n    let current = body[i],\n      strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    let _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n      _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n      openStandalone = strip.openStandalone && _isPrevWhitespace,\n      closeStandalone = strip.closeStandalone && _isNextWhitespace,\n      inlineStandalone =\n        strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function(\n  block\n) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  let program = block.program || block.inverse,\n    inverse = block.program && block.inverse,\n    firstInverse = inverse,\n    lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  let strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    let inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (\n      !this.options.ignoreStandalone &&\n      isPrevWhitespace(program.body) &&\n      isNextWhitespace(firstInverse.body)\n    ) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function(\n  mustache\n) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function(\n  node\n) {\n  /* istanbul ignore next */\n  let strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  let prev = body[i - 1],\n    sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(\n      prev.original\n    );\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  let next = body[i + 1],\n    sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(\n      next.original\n    );\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  let current = body[i == null ? 0 : i + 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.rightStripped)\n  ) {\n    return;\n  }\n\n  let original = current.value;\n  current.value = current.value.replace(\n    multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/,\n    ''\n  );\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  let current = body[i == null ? body.length - 1 : i - 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.leftStripped)\n  ) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  let original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexport default WhitespaceControl;\n","import Exception from '../exception';\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    let errorNode = { loc: open.path.loc };\n\n    throw new Exception(\n      open.path.original + \" doesn't match \" + close,\n      errorNode\n    );\n  }\n}\n\nexport function SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nexport function id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nexport function stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nexport function stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nexport function preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  let original = data ? '@' : '',\n    dig = [],\n    depth = 0;\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    let part = parts[i].part,\n      // If we have [] syntax then we do not treat path references as operators,\n      // i.e. foo.[this] resolves to approximately context.foo['this']\n      isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new Exception('Invalid path: ' + original, { loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data,\n    depth,\n    parts: dig,\n    original,\n    loc\n  };\n}\n\nexport function prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  let escapeFlag = open.charAt(3) || open.charAt(2),\n    escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  let decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path,\n    params,\n    hash,\n    escaped,\n    strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  let program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nexport function prepareBlock(\n  openBlock,\n  program,\n  inverseAndProgram,\n  close,\n  inverted,\n  locInfo\n) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  let decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  let inverse, inverseStrip;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new Exception(\n        'Unexpected inverse block on decorator',\n        inverseAndProgram\n      );\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program,\n    inverse,\n    openStrip: openBlock.strip,\n    inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    const firstLoc = statements[0].loc,\n      lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nexport function preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n","import parser from './parser';\nimport WhitespaceControl from './whitespace-control';\nimport * as Helpers from './helpers';\nimport { extend } from '../utils';\n\nexport { parser };\n\nlet yy = {};\nextend(yy, Helpers);\n\nexport function parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  parser.yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function(locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  let ast = parser.parse(input);\n\n  return ast;\n}\n\nexport function parse(input, options) {\n  let ast = parseWithoutProcessing(input, options);\n  let strip = new WhitespaceControl(options);\n\n  return strip.accept(ast);\n}\n","/* eslint-disable new-cap */\n\nimport Exception from '../exception';\nimport { isArray, indexOf, extend } from '../utils';\nimport AST from './ast';\n\nconst slice = [].slice;\n\nexport function Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function(other) {\n    let len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      let opcode = this.opcodes[i],\n        otherOpcode = other.opcodes[i];\n      if (\n        opcode.opcode !== otherOpcode.opcode ||\n        !argEquals(opcode.args, otherOpcode.args)\n      ) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (let i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = extend(\n      Object.create(null),\n      {\n        helperMissing: true,\n        blockHelperMissing: true,\n        each: true,\n        if: true,\n        unless: true,\n        with: true,\n        log: true,\n        lookup: true\n      },\n      options.knownHelpers\n    );\n\n    return this.accept(program);\n  },\n\n  compileProgram: function(program) {\n    let childCompiler = new this.compiler(), // eslint-disable-line new-cap\n      result = childCompiler.compile(program, this.options),\n      guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new Exception('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    let ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    let body = program.body,\n      bodyLength = body.length;\n    for (let i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function(block) {\n    transformLiteralToPath(block);\n\n    let program = block.program,\n      inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    let type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock(decorator) {\n    let program = decorator.program && this.compileProgram(decorator.program);\n    let params = this.setupFullMustacheParams(decorator, program, undefined),\n      path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function(partial) {\n    this.usePartial = true;\n\n    let program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    let params = partial.params;\n    if (params.length > 1) {\n      throw new Exception(\n        'Unsupported number of partial arguments: ' + params.length,\n        partial\n      );\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    let partialName = partial.name.original,\n      isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    let indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function() {},\n\n  SubExpression: function(sexpr) {\n    transformLiteralToPath(sexpr);\n    let type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function(sexpr, program, inverse) {\n    let path = sexpr.path,\n      name = path.parts[0],\n      isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function(sexpr) {\n    let path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function(sexpr, program, inverse) {\n    let params = this.setupFullMustacheParams(sexpr, program, inverse),\n      path = sexpr.path,\n      name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new Exception(\n        'You specified knownHelpersOnly, but used the unknown helper ' + name,\n        sexpr\n      );\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode(\n        'invokeHelper',\n        params.length,\n        path.original,\n        AST.helpers.simpleId(path)\n      );\n    }\n  },\n\n  PathExpression: function(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    let name = path.parts[0],\n      scoped = AST.helpers.scopedId(path),\n      blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode(\n        'lookupOnContext',\n        path.parts,\n        path.falsy,\n        path.strict,\n        scoped\n      );\n    }\n  },\n\n  StringLiteral: function(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function(hash) {\n    let pairs = hash.pairs,\n      i = 0,\n      l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function(sexpr) {\n    let isSimple = AST.helpers.simpleId(sexpr.path);\n\n    let isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    let isHelper = !isBlockParam && AST.helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    let isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      let name = sexpr.path.parts[0],\n        options = this.options;\n      if (options.knownHelpers[name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function(params) {\n    for (let i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function(val) {\n    let value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        let blockParamIndex;\n        if (val.parts && !AST.helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          let blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value\n              .replace(/^this(?:\\.|$)/, '')\n              .replace(/^\\.\\//, '')\n              .replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function(sexpr, program, inverse, omitEmpty) {\n    let params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function(name) {\n    for (\n      let depth = 0, len = this.options.blockParams.length;\n      depth < len;\n      depth++\n    ) {\n      let blockParams = this.options.blockParams[depth],\n        param = blockParams && indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nexport function precompile(input, options, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' +\n        input\n    );\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let ast = env.parse(input, options),\n    environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nexport function compile(input, options = {}, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.compile. You passed ' +\n        input\n    );\n  }\n\n  options = extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let compiled;\n\n  function compileInput() {\n    let ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options),\n      templateSpec = new env.JavaScriptCompiler().compile(\n        environment,\n        options,\n        undefined,\n        true\n      );\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function(setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function(i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (isArray(a) && isArray(b) && a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    let literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/* global define, require */\nimport { isArray } from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we assume that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return { code: this.toString() };\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || { start: {} }) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(\n      loc.start.line,\n      loc.start.column,\n      this.srcFile,\n      chunk\n    );\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return (\n      '\"' +\n      (str + '')\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n        .replace(/\\u2029/g, '\\\\u2029') +\n      '\"'\n    );\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    Object.keys(obj).forEach(key => {\n      let value = castChunk(obj[key], this);\n      if (value !== 'undefined') {\n        pairs.push([this.quotedString(key), ':', value]);\n      }\n    });\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n","import { COMPILER_REVISION, REVISION_CHANGES } from '../base';\nimport Exception from '../exception';\nimport { isArray } from '../utils';\nimport CodeGen from './code-gen';\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function(name) {\n    return [\n      this.aliasable('container.lookup'),\n      '(depths, ',\n      JSON.stringify(name),\n      ')'\n    ];\n  },\n\n  compilerInfo: function() {\n    const revision = COMPILER_REVISION,\n      versions = REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths =\n      this.useDepths ||\n      environment.useDepths ||\n      environment.useDecorators ||\n      this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    let opcodes = environment.opcodes,\n      opcode,\n      firstLoc,\n      i,\n      l;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new Exception('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend([\n        'var decorators = container.decorators, ',\n        this.lookupPropertyFunctionVarDeclaration(),\n        ';\\n'\n      ]);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, [\n          'fn',\n          'props',\n          'container',\n          'depth0',\n          'data',\n          'blockParams',\n          'depths',\n          this.decorators.merge()\n        ]);\n      } else {\n        this.decorators.prepend(\n          'function(fn, props, container, depth0, data, blockParams, depths) {\\n'\n        );\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    let fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      let ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      let { programs, decorators } = this.context;\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new CodeGen(this.options.srcName);\n    this.decorators = new CodeGen(this.options.srcName);\n  },\n\n  createFunctionContext: function(asObject) {\n    let varDeclarations = '';\n\n    let locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    let aliasCount = 0;\n    Object.keys(this.aliases).forEach(alias => {\n      let node = this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    let params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    let source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap([\n        'function(',\n        params.join(','),\n        ') {\\n  ',\n        source,\n        '}'\n      ]);\n    }\n  },\n  mergeSource: function(varDeclarations) {\n    let isSimple = this.environment.isSimple,\n      appendOnly = !this.forceBuffer,\n      appendFirst,\n      sourceSeen,\n      bufferStart,\n      bufferEnd;\n    this.source.each(line => {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations +=\n        ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend(\n        'var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n')\n      );\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function() {\n    return `\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    `.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function(name) {\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    let blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    let current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource([\n      'if (!',\n      this.lastHelper,\n      ') { ',\n      current,\n      ' = ',\n      this.source.functionCall(blockHelperMissing, 'call', params),\n      '}'\n    ]);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function() {\n    if (this.isInline()) {\n      this.replaceStack(current => [' != null ? ', current, ' : \"\"']);\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      let local = this.popStack();\n      this.pushSource([\n        'if (',\n        local,\n        ' != null) { ',\n        this.appendToBuffer(local, undefined, true),\n        ' }'\n      ]);\n      if (this.environment.isSimple) {\n        this.pushSource([\n          'else { ',\n          this.appendToBuffer(\"''\", undefined, true),\n          ' }'\n        ]);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function() {\n    this.pushSource(\n      this.appendToBuffer([\n        this.aliasable('container.escapeExpression'),\n        '(',\n        this.popStack(),\n        ')'\n      ])\n    );\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function(parts, falsy, strict, scoped) {\n    let i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function(type, parts, i, falsy, strict) {\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(\n        strictLookup(this.options.strict && strict, this, parts, i, type)\n      );\n      return;\n    }\n\n    let len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(current => {\n        let lookup = this.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function() {\n    this.push([\n      this.aliasable('container.lambda'),\n      '(',\n      this.popStack(),\n      ', ',\n      this.contextName(0),\n      ')'\n    ]);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function() {\n    let hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator(paramSize, name) {\n    let foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n      options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push([\n      'fn = ',\n      this.decorators.functionCall(foundDecorator, '', [\n        'fn',\n        'props',\n        'container',\n        options\n      ]),\n      ' || fn;'\n    ]);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function(paramSize, name, isSimple) {\n    let nonHelper = this.popStack(),\n      helper = this.setupHelper(paramSize, name);\n\n    let possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    let functionLookupCode = [\n      '(',\n      this.itemsSeparatedBy(possibleFunctionCalls, '||'),\n      ')'\n    ];\n    let functionCall = this.source.functionCall(\n      functionLookupCode,\n      'call',\n      helper.callParams\n    );\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function(items, separator) {\n    let result = [];\n    result.push(items[0]);\n    for (let i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function(paramSize, name) {\n    let helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function(name, helperCall) {\n    this.useRegister('helper');\n\n    let nonHelper = this.popStack();\n\n    this.emptyHash();\n    let helper = this.setupHelper(0, name, helperCall);\n\n    let helperName = (this.lastHelper = this.nameLookup(\n      'helpers',\n      name,\n      'helper'\n    ));\n\n    let lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(\n        ' != null ? helper : ',\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    this.push([\n      '(',\n      lookup,\n      helper.paramsInit ? ['),(', helper.paramsInit] : [],\n      '),',\n      '(typeof helper === ',\n      this.aliasable('\"function\"'),\n      ' ? ',\n      this.source.functionCall('helper', 'call', helper.callParams),\n      ' : helper))'\n    ]);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function(isDynamic, name, indent) {\n    let params = [],\n      options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function(key) {\n    let value = this.popStack(),\n      context,\n      type,\n      id;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    let hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral(\n        'blockParams[' +\n          name[0] +\n          '].path[' +\n          name[1] +\n          ']' +\n          (child ? ' + ' + JSON.stringify('.' + child) : '')\n      );\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function(environment, options) {\n    let children = environment.children,\n      child,\n      compiler;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      let existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        let index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(\n          child,\n          options,\n          this.context,\n          !this.precompile\n        );\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function(child) {\n    for (let i = 0, len = this.context.environments.length; i < len; i++) {\n      let environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function(guid) {\n    let child = this.environment.children[guid],\n      programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function(source) {\n    if (this.pendingContent) {\n      this.source.push(\n        this.appendToBuffer(\n          this.source.quotedString(this.pendingContent),\n          this.pendingLocation\n        )\n      );\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function(callback) {\n    let prefix = ['('],\n      stack,\n      createdStack,\n      usedLiteral;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new Exception('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    let top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      let name = this.incrStack();\n\n      prefix = ['((', this.push(name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    let item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function() {\n    let inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (let i = 0, len = inlineStack.length; i < len; i++) {\n      let entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        let stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function(wrapped) {\n    let inline = this.isInline(),\n      item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new Exception('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function() {\n    let stack = this.isInline() ? this.inlineStack : this.compileStack,\n      item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function(name) {\n    let ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function(paramSize, name, blockHelper) {\n    let params = [],\n      paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    let foundHelper = this.nameLookup('helpers', name, 'helper'),\n      callContext = this.aliasable(\n        `${this.contextName(0)} != null ? ${this.contextName(\n          0\n        )} : (container.nullContext || {})`\n      );\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function(helper, paramSize, params) {\n    let options = {},\n      contexts = [],\n      types = [],\n      ids = [],\n      objectArgs = !params,\n      param;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    let inverse = this.popStack(),\n      program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    let i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function(helper, paramSize, params, useRegister) {\n    let options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function() {\n  const reservedWords = (\n    'break else new var' +\n    ' case finally return void' +\n    ' catch for switch while' +\n    ' continue function this with' +\n    ' default if throw' +\n    ' delete in try' +\n    ' do instanceof typeof' +\n    ' abstract enum int short' +\n    ' boolean export interface static' +\n    ' byte extends long super' +\n    ' char final native synchronized' +\n    ' class float package throws' +\n    ' const goto private transient' +\n    ' debugger implements protected volatile' +\n    ' double import public let yield await' +\n    ' null true false'\n  ).split(' ');\n\n  const compilerWords = (JavaScriptCompiler.RESERVED_WORDS = {});\n\n  for (let i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n  return (\n    !JavaScriptCompiler.RESERVED_WORDS[name] &&\n    /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name)\n  );\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, i, type) {\n  let stack = compiler.popStack(),\n    len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [\n      compiler.aliasable('container.strict'),\n      '(',\n      stack,\n      ', ',\n      compiler.quotedString(parts[i]),\n      ', ',\n      JSON.stringify(compiler.source.currentLocation),\n      ' )'\n    ];\n  } else {\n    return stack;\n  }\n}\n\nexport default JavaScriptCompiler;\n","import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n","/* eslint-disable new-cap */\nimport Visitor from './visitor';\n\nexport function print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nexport function PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new Visitor();\n\nPrintVisitor.prototype.pad = function(string) {\n  let out = '';\n\n  for (let i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function(program) {\n  let out = '',\n    body = program.body,\n    i,\n    l;\n\n  if (program.blockParams) {\n    let blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function(mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function(mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function(\n  block\n) {\n  let out = '';\n\n  out += this.pad(\n    (block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:'\n  );\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) {\n      this.padding--;\n    }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function(partial) {\n  let content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function(partial) {\n  let content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function(content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function(comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function(sexpr) {\n  let params = sexpr.params,\n    paramStrings = [],\n    hash;\n\n  for (let i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function(id) {\n  let path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function(string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function(number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function(bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function() {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function() {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function(hash) {\n  let pairs = hash.pairs,\n    joinedPairs = [];\n\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function(pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n","// USAGE:\n// var handlebars = require('handlebars');\n/* eslint-env node */\n/* eslint-disable no-var */\n\n// var local = handlebars.create();\n\nvar handlebars = require('../dist/cjs/handlebars')['default'];\n\nvar printer = require('../dist/cjs/handlebars/compiler/printer');\nhandlebars.PrintVisitor = printer.PrintVisitor;\nhandlebars.print = printer.print;\n\nmodule.exports = handlebars;\n\n// Publish a Node.js require() handler for .handlebars and .hbs files\nfunction extension(module, filename) {\n  var fs = require('fs');\n  var templateString = fs.readFileSync(filename, 'utf8');\n  module.exports = handlebars.compile(templateString);\n}\n/* istanbul ignore else */\nif (typeof require !== 'undefined' && require.extensions) {\n  require.extensions['.handlebars'] = extension;\n  require.extensions['.hbs'] = extension;\n}\n","import type { Versions } from './types';\n\nexport function getBuiltinVersions(): Versions {\n  return {\n    FORC: '0.66.5',\n    FUEL_CORE: '0.40.2',\n    FUELS: '0.98.0',\n  };\n}\n","function parseVersion(version: string): { major: number; minor: number; patch: number } {\n  const [major, minor, patch] = version.split('.').map((v) => parseInt(v, 10));\n  return { major, minor, patch };\n}\n\nfunction versionDiffs(\n  version1: string,\n  version2: string\n): { major: number; minor: number; patch: number; fullVersionDiff: number } {\n  const semver1 = parseVersion(version1);\n  const semver2 = parseVersion(version2);\n  const major = semver1.major - semver2.major;\n  const minor = semver1.minor - semver2.minor;\n  const patch = semver1.patch - semver2.patch;\n  return {\n    major,\n    minor,\n    patch,\n    fullVersionDiff: major || minor || patch,\n  };\n}\n\nexport function gt(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff > 0;\n}\n\nexport function eq(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff === 0;\n}\n\nexport function majorEq(version1: string, version2: string): boolean {\n  const { major } = versionDiffs(version1, version2);\n  return major === 0;\n}\n\nexport function minorEq(version1: string, version2: string): boolean {\n  const { minor } = versionDiffs(version1, version2);\n  return minor === 0;\n}\n\nexport function patchEq(version1: string, version2: string): boolean {\n  const { patch } = versionDiffs(version1, version2);\n  return patch === 0;\n}\n","import { getBuiltinVersions } from './getBuiltinVersions';\nimport { majorEq, minorEq, patchEq } from './semver';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  if (/^\\d+\\.\\d+\\.\\d+\\D+/m.test(networkVersion)) {\n    // eslint-disable-next-line no-console\n    console.warn(`You're running against an unreleased fuel-core version: ${networkVersion}. Things may work as expected, but it's not guaranteed. Please use a released version.      \nThis unreleased fuel-core build may include features and updates not yet supported by this version of the TS-SDK.`);\n  }\n\n  return {\n    supportedVersion,\n    isMajorSupported: majorEq(networkVersion, supportedVersion),\n    isMinorSupported: minorEq(networkVersion, supportedVersion),\n    isPatchSupported: patchEq(networkVersion, supportedVersion),\n  };\n}\n","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/internal/fuel-core/VERSION`\n    `FORC` — comes from `/internal/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/types';\nexport * from './lib/checkFuelCoreVersionCompatibility';\nexport * from './lib/semver';\n","/**\n * Represents the different error codes thrown by the SDK\n */\nexport enum ErrorCode {\n  // abi\n  NO_ABIS_FOUND = 'no-abis-found',\n  ABI_TYPES_AND_VALUES_MISMATCH = 'abi-types-and-values-mismatch',\n  ABI_MAIN_METHOD_MISSING = 'abi-main-method-missing',\n  INVALID_COMPONENT = 'invalid-component',\n  CONFIGURABLE_NOT_FOUND = 'configurable-not-found',\n  TYPE_NOT_FOUND = 'type-not-found',\n  LOG_TYPE_NOT_FOUND = 'log-type-not-found',\n  TYPE_NOT_SUPPORTED = 'type-not-supported',\n  INVALID_DECODE_VALUE = 'invalid-decode-value',\n  JSON_ABI_ERROR = 'json-abi-error',\n  TYPE_ID_NOT_FOUND = 'type-id-not-found',\n  BIN_FILE_NOT_FOUND = 'bin-file-not-found',\n  CODER_NOT_FOUND = 'coder-not-found',\n  INVALID_DATA = 'invalid-data',\n  FUNCTION_NOT_FOUND = 'function-not-found',\n  UNSUPPORTED_ENCODING_VERSION = 'unsupported-encoding-version',\n  TIMEOUT_EXCEEDED = 'timeout-exceeded',\n  CONFIG_FILE_NOT_FOUND = 'config-file-not-found',\n  CONFIG_FILE_ALREADY_EXISTS = 'config-file-already-exists',\n  WORKSPACE_NOT_DETECTED = 'workspace-not-detected',\n\n  // address\n  INVALID_ADDRESS = 'invalid-address',\n  INVALID_EVM_ADDRESS = 'invalid-evm-address',\n  INVALID_B256_ADDRESS = 'invalid-b256-address',\n\n  // provider\n  CHAIN_INFO_CACHE_EMPTY = 'chain-info-cache-empty',\n  NODE_INFO_CACHE_EMPTY = 'node-info-cache-empty',\n  MISSING_PROVIDER = 'missing-provider',\n  INVALID_PROVIDER = 'invalid-provider',\n  CONNECTION_REFUSED = 'connection-refused',\n  INVALID_URL = 'invalid-url',\n\n  // wallet\n  INVALID_PUBLIC_KEY = 'invalid-public-key',\n  WALLET_MANAGER_ERROR = 'wallet-manager-error',\n  HD_WALLET_ERROR = 'hd-wallet-error',\n  MISSING_CONNECTOR = 'missing-connector',\n\n  // errors\n  PARSE_FAILED = 'parse-failed',\n  ENCODE_ERROR = 'encode-error',\n  DECODE_ERROR = 'decode-error',\n  ENV_DEPENDENCY_MISSING = 'env-dependency-missing',\n  INVALID_TTL = 'invalid-ttl',\n  INVALID_INPUT_PARAMETERS = 'invalid-input-parameters',\n  NOT_IMPLEMENTED = 'not-implemented',\n  NOT_SUPPORTED = 'not-supported',\n  CONVERTING_FAILED = 'converting-error',\n  ELEMENT_NOT_FOUND = 'element-not-found',\n  MISSING_REQUIRED_PARAMETER = 'missing-required-parameter',\n  INVALID_REQUEST = 'invalid-request',\n  INVALID_TRANSFER_AMOUNT = 'invalid-transfer-amount',\n  NOT_ENOUGH_FUNDS = 'not-enough-funds',\n\n  // crypto\n  INVALID_CREDENTIALS = 'invalid-credentials',\n\n  /** @deprecated This error code is no longer used */\n  HASHER_LOCKED = 'hasher-locked',\n\n  // transaction\n  GAS_PRICE_TOO_LOW = 'gas-price-too-low',\n  GAS_LIMIT_TOO_LOW = 'gas-limit-too-low',\n  MAX_FEE_TOO_LOW = 'max-fee-too-low',\n  TRANSACTION_NOT_FOUND = 'transaction-not-found',\n  TRANSACTION_FAILED = 'transaction-failed',\n  INVALID_CONFIGURABLE_CONSTANTS = 'invalid-configurable-constants',\n  INVALID_TRANSACTION_INPUT = 'invalid-transaction-input',\n  INVALID_TRANSACTION_OUTPUT = 'invalid-transaction-output',\n  INVALID_TRANSACTION_STATUS = 'invalid-transaction-status',\n  UNSUPPORTED_TRANSACTION_TYPE = 'unsupported-transaction-type',\n  TRANSACTION_ERROR = 'transaction-error',\n  INVALID_POLICY_TYPE = 'invalid-policy-type',\n  DUPLICATED_POLICY = 'duplicated-policy',\n  TRANSACTION_SQUEEZED_OUT = 'transaction-squeezed-out',\n  CONTRACT_SIZE_EXCEEDS_LIMIT = 'contract-size-exceeds-limit',\n  INVALID_CHUNK_SIZE_MULTIPLIER = 'invalid-chunk-size-multiplier',\n  MAX_INPUTS_EXCEEDED = 'max-inputs-exceeded',\n  FUNDS_TOO_LOW = 'funds-too-low',\n  MAX_OUTPUTS_EXCEEDED = 'max-outputs-exceeded',\n  MAX_COINS_REACHED = 'max-coins-reached',\n  ASSET_BURN_DETECTED = 'asset-burn-detected',\n\n  // receipt\n  INVALID_RECEIPT_TYPE = 'invalid-receipt-type',\n\n  // mnemonic\n  INVALID_WORD_LIST = 'invalid-word-list',\n  INVALID_MNEMONIC = 'invalid-mnemonic',\n  INVALID_ENTROPY = 'invalid-entropy',\n  INVALID_SEED = 'invalid-seed',\n  INVALID_CHECKSUM = 'invalid-checksum',\n\n  // wallet / account\n  INVALID_PASSWORD = 'invalid-password',\n  ACCOUNT_REQUIRED = 'account-required',\n  UNLOCKED_WALLET_REQUIRED = 'unlocked-wallet-required',\n\n  // chain\n  ERROR_BUILDING_BLOCK_EXPLORER_URL = 'error-building-block-explorer-url',\n\n  // docs\n  VITEPRESS_PLUGIN_ERROR = 'vitepress-plugin-error',\n\n  // script\n  SCRIPT_REVERTED = 'script-reverted',\n  SCRIPT_RETURN_INVALID_TYPE = 'script-return-invalid-type',\n\n  // graphql\n  STREAM_PARSING_ERROR = 'stream-parsing-error',\n\n  // launchNode\n  NODE_LAUNCH_FAILED = 'node-launch-failed',\n\n  // Unknown\n  UNKNOWN = 'unknown',\n}\n","import { versions } from '@fuel-ts/versions';\n\nimport { ErrorCode } from './error-codes';\n\nexport class FuelError extends Error {\n  static readonly CODES = ErrorCode;\n  readonly VERSIONS = versions;\n  readonly metadata: Record<string, unknown>;\n  readonly rawError: unknown;\n\n  static parse(e: unknown) {\n    const error = e as FuelError;\n\n    if (error.code === undefined) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        \"Failed to parse the error object. The required 'code' property is missing.\"\n      );\n    }\n\n    const enumValues = Object.values(ErrorCode);\n    const codeIsKnown = enumValues.includes(error.code);\n\n    if (!codeIsKnown) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Unknown error code: ${error.code}. Accepted codes: ${enumValues.join(', ')}.`\n      );\n    }\n\n    return new FuelError(error.code, error.message);\n  }\n\n  code: ErrorCode;\n\n  constructor(\n    code: ErrorCode,\n    message: string,\n    metadata: Record<string, unknown> = {},\n    rawError: unknown = null\n  ) {\n    super(message);\n    this.code = code;\n    this.name = 'FuelError';\n    this.metadata = metadata;\n    this.rawError = rawError;\n  }\n\n  toObject() {\n    const { code, name, message, metadata, VERSIONS, rawError } = this;\n    return { code, name, message, metadata, VERSIONS, rawError };\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { versions as builtinVersions, type BinaryVersions } from '@fuel-ts/versions';\nimport { readFileSync, writeFileSync } from 'fs';\nimport { globSync } from 'glob';\nimport { mkdirp } from 'mkdirp';\nimport { basename } from 'path';\nimport { rimrafSync } from 'rimraf';\n\nimport { AbiTypeGen } from './AbiTypeGen';\nimport type { ProgramTypeEnum } from './types/enums/ProgramTypeEnum';\nimport type { IFile } from './types/interfaces/IFile';\nimport { collectBinFilepaths } from './utils/collectBinFilePaths';\nimport { collectStorageSlotsFilepaths } from './utils/collectStorageSlotsFilePaths';\n\nexport interface IGenerateFilesParams {\n  cwd: string;\n  filepaths?: string[];\n  inputs?: string[];\n  output: string;\n  silent?: boolean;\n  programType: ProgramTypeEnum;\n  versions?: BinaryVersions;\n}\n\nexport function runTypegen(params: IGenerateFilesParams) {\n  const { cwd, inputs, output, silent, programType, filepaths: inputFilepaths } = params;\n  const versions: BinaryVersions = { FUELS: builtinVersions.FUELS, ...params.versions };\n\n  const cwdBasename = basename(cwd);\n\n  function log(...args: unknown[]) {\n    if (!silent) {\n      // eslint-disable-next-line no-console\n      console.log(args.join(' '));\n    }\n  }\n\n  /*\n    Assembling files array and expanding globals if needed\n  */\n  let filepaths: string[] = [];\n\n  if (!inputFilepaths?.length && inputs?.length) {\n    filepaths = inputs.flatMap((i) => globSync(i, { cwd }));\n  } else if (inputFilepaths?.length) {\n    filepaths = inputFilepaths;\n  } else {\n    throw new FuelError(\n      ErrorCode.MISSING_REQUIRED_PARAMETER,\n      `At least one parameter should be supplied: 'input' or 'filepaths'.`\n    );\n  }\n\n  /*\n    Assembling file paths x contents\n  */\n  const abiFiles = filepaths.map((filepath) => {\n    const contents = readFileSync(filepath, 'utf-8');\n    const abi: IFile = {\n      path: filepath,\n      contents,\n    };\n\n    return abi;\n  });\n\n  if (!abiFiles.length) {\n    throw new FuelError(ErrorCode.NO_ABIS_FOUND, `no ABI found at '${inputs}'`);\n  }\n\n  const binFiles = collectBinFilepaths({ filepaths, programType });\n\n  const storageSlotsFiles = collectStorageSlotsFilepaths({ filepaths, programType });\n\n  /*\n    Starting the engine\n  */\n  const abiTypeGen = new AbiTypeGen({\n    outputDir: output,\n    abiFiles,\n    binFiles,\n    storageSlotsFiles,\n    programType,\n    versions,\n  });\n\n  /*\n    Generating files\n  */\n  log('Generating files..\\n');\n\n  mkdirp.sync(`${output}`);\n\n  abiTypeGen.files.forEach((file) => {\n    rimrafSync(file.path);\n    writeFileSync(file.path, file.contents);\n    const trimPathRegex = new RegExp(`^.+${cwdBasename}/`, 'm');\n    log(` - ${file.path.replace(trimPathRegex, '')}`);\n  });\n\n  log('\\nDone.⚡');\n}\n","import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      // just collapse multiple ** portions into one\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (matched) {\n          globParts[i] = []\n          globParts[j] = matched\n          break\n        }\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice(pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    if (fastTest && typeof re === 'object') {\n      // Avoids overriding in frozen environments\n      Reflect.defineProperty(re, 'test', { value: fastTest })\n    }\n    return re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n","const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n","// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n","import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n","// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  get options() {\n    return this.#options\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n","import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n","import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { fileURLToPath } from 'node:url'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n\n  /**\n   * Do not match any children of any matches. For example, the pattern\n   * `**\\/foo` would match `a/foo`, but not `a/foo/b/foo` in this mode.\n   *\n   * This is especially useful for cases like \"find all `node_modules`\n   * folders, but not the ones in `node_modules`\".\n   *\n   * In order to support this, the `Ignore` implementation must support an\n   * `add(pattern: string)` method. If using the default `Ignore` class, then\n   * this is fine, but if this is set to `false`, and a custom `Ignore` is\n   * provided that does not have an `add()` method, then it will throw an\n   * error.\n   *\n   * **Caveat** It *only* ignores matches that would be a descendant of a\n   * previous match, and only if that descendant is matched *after* the\n   * ancestor is encountered. Since the file system walk happens in\n   * indeterminate order, it's possible that a match will already be added\n   * before its ancestor, if multiple or braced patterns are used.\n   *\n   * For example:\n   *\n   * ```ts\n   * const results = await glob([\n   *   // likely to match first, since it's just a stat\n   *   'a/b/c/d/e/f',\n   *\n   *   // this pattern is more complicated! It must to various readdir()\n   *   // calls and test the results against a regular expression, and that\n   *   // is certainly going to take a little bit longer.\n   *   //\n   *   // So, later on, it encounters a match at 'a/b/c/d/e', but it's too\n   *   // late to ignore a/b/c/d/e/f, because it's already been emitted.\n   *   'a/[bdf]/?/[a-z]/*',\n   * ], { includeChildMatches: false })\n   * ```\n   *\n   * It's best to only set this to `false` if you can be reasonably sure that\n   * no components of the pattern will potentially match one another's file\n   * system descendants, or if the occasional included child entry will not\n   * cause problems.\n   *\n   * @default true\n   */\n  includeChildMatches?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse ? string\n  : Opts extends GlobOptionsWithFileTypesUnset ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? true\n  : Opts extends GlobOptionsWithFileTypesFalse ? false\n  : Opts extends GlobOptionsWithFileTypesUnset ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n  includeChildMatches: boolean\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n    this.includeChildMatches = opts.includeChildMatches !== false\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as { allowWindowsEscape?: boolean }).allowWindowsEscape ===\n        false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32' ? PathScurryWin32\n        : opts.platform === 'darwin' ? PathScurryDarwin\n        : opts.platform ? PathScurryPosix\n        : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []],\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n","/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   *\n   * - `evict`: The item was evicted because it is the least recently used,\n   *   and the cache is full.\n   * - `set`: A new value was set, overwriting the old value being disposed.\n   * - `delete`: The item was explicitly deleted, either by calling\n   *   {@link LRUCache#delete}, {@link LRUCache#clear}, or\n   *   {@link LRUCache#set} with an undefined value.\n   * - `expire`: The item was removed due to exceeding its TTL.\n   * - `fetch`: A {@link OptionsBase#fetchMethod} operation returned\n   *   `undefined` or was aborted, causing the item to be deleted.\n   */\n  export type DisposeReason =\n    | 'evict'\n    | 'set'\n    | 'delete'\n    | 'expire'\n    | 'fetch'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Occasionally, it may be useful to track the internal behavior of the\n   * cache, particularly for logging, debugging, or for behavior within the\n   * `fetchMethod`. To do this, you can pass a `status` object to the\n   * {@link LRUCache#fetch}, {@link LRUCache#get}, {@link LRUCache#set},\n   * {@link LRUCache#memo}, and {@link LRUCache#has} methods.\n   *\n   * The `status` option should be a plain JavaScript object. The following\n   * fields will be set on it appropriately, depending on the situation.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no {@link OptionsBase.fetchMethod}, so\n     *   {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  export interface MemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.memoMethod} as\n     * the {@link MemoizerOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface MemoOptionsWithContext<K, V, FC>\n    extends MemoOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface MemoOptionsNoContext<K, V>\n    extends MemoOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.memoMethod} function.\n   */\n  export interface MemoizerOptions<K, V, FC = unknown> {\n    options: MemoizerMemoOptions<K, V, FC>\n    /**\n     * Object provided in the {@link MemoOptions.context} option to\n     * {@link LRUCache#memo}\n     */\n    context: FC\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#memo}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link MemoOptions.forceRefresh}, and\n   * {@link MemoerOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.memoMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the memoMethod is called.\n   */\n  export interface MemoizerMemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n    > {\n    status?: Status<V>\n    size?: Size\n    start?: Milliseconds\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * the type signature for the {@link OptionsBase.memoMethod} option.\n   */\n  export type Memoizer<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: MemoizerOptions<K, V, FC>\n  ) => V\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   *\n   * All options are also available on the {@link LRUCache} instance, making\n   * it safe to pass an LRUCache instance as the options argumemnt to\n   * make another empty cache of the same type.\n   *\n   * Some options are marked as read-only, because changing them after\n   * instantiation is not safe. Changing any of the other options will of\n   * course only have an effect on subsequent method calls.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     *\n     * **It is strongly recommended to set a `max` to prevent unbounded growth\n     * of the cache.**\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed by\n     * default, and MAY live in the cache, contributing to its LRU max, long\n     * after they have expired, unless {@link OptionsBase.ttlAutopurge} is\n     * set.\n     *\n     * If set to `0` (the default value), then that means \"do not track\n     * TTL\", not \"expire immediately\".\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * This is not primarily a TTL cache, and does not make strong TTL\n     * guarantees. There is no pre-emptive pruning of expired items, but you\n     * _may_ set a TTL on the cache, and it will treat expired items as missing\n     * when they are fetched, and delete them.\n     *\n     * Optional, but must be a non-negative integer in ms if specified.\n     *\n     * This may be overridden by passing an options object to `cache.set()`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if ttl tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * If ttl tracking is enabled, and `max` and `maxSize` are not set,\n     * and `ttlAutopurge` is not set, then a warning will be emitted\n     * cautioning about the potential for unbounded memory consumption.\n     * (The TypeScript definitions will also discourage this.)\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     *\n     * Note that this may *significantly* degrade performance, especially if\n     * the cache is storing a large number of items. It is almost always best\n     * to just leave the stale items in the cache, and let them fall out as new\n     * items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * Use with caution!\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever it is retrieved from cache with\n     * {@link LRUCache#get}, causing it to not expire. (It can still fall out\n     * of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever its presence in the cache is\n     * checked with {@link LRUCache#has}, causing it to not expire. (It can\n     * still fall out of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     *\n     * By default, if you set `ttl`, stale items will only be deleted from the\n     * cache when you `get(key)`. That is, it's not preemptively pruning items,\n     * unless {@link OptionsBase.ttlAutopurge} is set.\n     *\n     * If you set `allowStale:true`, it'll return the stale value *as well as*\n     * deleting it. If you don't set this, then it'll return `undefined` when\n     * you try to get a stale entry.\n     *\n     * Note that when a stale entry is fetched, _even if it is returned due to\n     * `allowStale` being set_, it is removed from the cache immediately. You\n     * can suppress this behavior by setting\n     * {@link OptionsBase.noDeleteOnStaleGet}, either in the constructor, or in\n     * the options provided to {@link LRUCache#get}.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     * The `cache.has()` method will always return `false` for stale items.\n     *\n     * Only relevant if a ttl is set.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the\n     * cache, as `dispose(value, key, reason)`.\n     *\n     * This can be handy if you want to close file descriptors or do\n     * other cleanup tasks when items are no longer stored in the cache.\n     *\n     * **NOTE**: It is called _before_ the item has been fully removed\n     * from the cache, so if you want to put it right back in, you need\n     * to wait until the next tick. If you try to add it back in during\n     * the `dispose()` function call, it will break things in subtle and\n     * weird ways.\n     *\n     * Unlike several other options, this may _not_ be overridden by\n     * passing an option to `set()`, for performance reasons.\n     *\n     * The `reason` will be one of the following strings, corresponding\n     * to the reason for the item's deletion:\n     *\n     * - `evict` Item was evicted to make space for a new addition\n     * - `set` Item was overwritten by a new value\n     * - `expire` Item expired its TTL\n     * - `fetch` Item was deleted due to a failed or aborted fetch, or a\n     *   fetchMethod returning `undefined.\n     * - `delete` Item was removed by explicit `cache.delete(key)`,\n     *   `cache.clear()`, or `cache.set(key, undefined)`.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     *\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     *\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     *\n     * Only relevant if `dispose` or `disposeAfter` are set.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when setting a new\n     * value for an existing key (ie, when updating a value rather than\n     * inserting a new value).  Note that the TTL value is _always_ set (if\n     * provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     *\n     * May be passed as an option to {@link LRUCache#set}.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * Set to a positive integer to track the sizes of items added to the\n     * cache, and automatically evict items in order to stay below this size.\n     * Note that this may result in fewer than `max` items being stored.\n     *\n     * Attempting to add an item to the cache whose calculated size is greater\n     * that this amount will be a no-op. The item will not be cached, and no\n     * other items will be evicted.\n     *\n     * Optional, must be a positive integer if provided.\n     *\n     * Sets `maxEntrySize` to the same value, unless a different value is\n     * provided for `maxEntrySize`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if size tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod} or {@link OptionsBase.memoMethod}, then\n     * it will not be stored in the cache.\n     *\n     * Attempting to add an item whose calculated size is greater than\n     * this amount will not cache the item or evict any old items, but\n     * WILL delete an existing value if one is already present.\n     *\n     * Optional, must be a positive integer if provided. Defaults to\n     * the value of `maxSize` if provided.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * Requires {@link OptionsBase.maxSize} to be set.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     *\n     * ```ts\n     * fetchMethod(key, staleValue, { signal, options, context })\n     * ```\n     *\n     * If `fetchMethod` is not provided, then `cache.fetch(key)` is equivalent\n     * to `Promise.resolve(cache.get(key))`.\n     *\n     * If at any time, `signal.aborted` is set to `true`, or if the\n     * `signal.onabort` method is called, or if it emits an `'abort'` event\n     * which you can listen to with `addEventListener`, then that means that\n     * the fetch should be abandoned. This may be passed along to async\n     * functions aware of AbortController/AbortSignal behavior.\n     *\n     * The `fetchMethod` should **only** return `undefined` or a Promise\n     * resolving to `undefined` if the AbortController signaled an `abort`\n     * event. In all other cases, it should return or resolve to a value\n     * suitable for adding to the cache.\n     *\n     * The `options` object is a union of the options that may be provided to\n     * `set()` and `get()`. If they are modified, then that will result in\n     * modifying the settings to `cache.set()` when the value is resolved, and\n     * in the case of\n     * {@link OptionsBase.noDeleteOnFetchRejection} and\n     * {@link OptionsBase.allowStaleOnFetchRejection}, the handling of\n     * `fetchMethod` failures.\n     *\n     * For example, a DNS cache may update the TTL based on the value returned\n     * from a remote DNS server by changing `options.ttl` in the `fetchMethod`.\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#memo}\n     */\n    memoMethod?: Memoizer<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     *\n     * When using time-expiring entries with `ttl`, by default stale\n     * items will be removed from the cache when the key is accessed\n     * with `cache.get()`.\n     *\n     * Setting this option will cause stale items to remain in the cache, until\n     * they are explicitly deleted with `cache.delete(key)`, or retrieved with\n     * `noDeleteOnStaleGet` set to `false`.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     *\n     * Only relevant if a ttl is used.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the {@link LRUCache#fetch}\n     * fails, not any other times.\n     *\n     * If a `fetchMethod` fails, and there is no stale value available, the\n     * `fetch()` will resolve to `undefined`. Ie, all `fetchMethod` errors are\n     * suppressed.\n     *\n     * Implies `noDeleteOnFetchRejection`.\n     *\n     * This may be set in calls to `fetch()`, or defaulted on the constructor,\n     * or overridden by modifying the options object in the `fetchMethod`.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches\n     * an `'abort'` event, whether user-triggered, or due to internal cache\n     * behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls\n     * are not immediately resolved or rejected when they are aborted, and\n     * instead take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * For example:\n     *\n     * ```ts\n     * const c = new LRUCache({\n     *   ttl: 100,\n     *   ignoreFetchAbort: true,\n     *   allowStaleOnFetchAbort: true,\n     *   fetchMethod: async (key, oldValue, { signal }) => {\n     *     // note: do NOT pass the signal to fetch()!\n     *     // let's say this fetch can take a long time.\n     *     const res = await fetch(`https://slow-backend-server/${key}`)\n     *     return await res.json()\n     *   },\n     * })\n     *\n     * // this will return the stale value after 100ms, while still\n     * // updating in the background for next time.\n     * const val = await c.fetch('key', { signal: AbortSignal.timeout(100) })\n     * ```\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown>\n  implements Map<K, V>\n{\n  // options that cannot be changed without disaster\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n  readonly #memoMethod?: LRUCache.Memoizer<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  get memoMethod(): LRUCache.Memoizer<K, V, FC> | undefined {\n    return this.#memoMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      memoMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      memoMethod !== undefined &&\n      typeof memoMethod !== 'function'\n    ) {\n      throw new TypeError('memoMethod must be a function if defined')\n    }\n    this.#memoMethod = memoMethod\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the number of ms left in the item's TTL. If item is not in cache,\n   * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.#delete(this.#keyList[index] as K, 'expire')\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string\n   * description of an object. Called by the built-in method\n   * `Object.prototype.toString`.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from most\n   * recently used to least recently used.\n   *\n   * `fn` is called as `fn(value, key, cache)`.\n   *\n   * If `thisp` is provided, function will be called in the `this`-context of\n   * the provided object, or the cache if no `thisp` object is provided.\n   *\n   * Does not update age or recenty of use, or iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.#delete(this.#keyList[i] as K, 'expire')\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Returns `undefined` if the key is not present.\n   *\n   * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n   * serialization, the `start` value is always the current timestamp, and the\n   * `ttl` is a calculated remaining time to live (negative if expired).\n   *\n   * Always returns stale values, if their info is found in the cache, so be\n   * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n   * if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to {@link LRLUCache#load}.\n   *\n   * The `start` fields are calculated relative to a portable `Date.now()`\n   * timestamp, even if `performance.now()` is available.\n   *\n   * Stale entries are always included in the `dump`, even if\n   * {@link LRUCache.OptionsBase.allowStale} is false.\n   *\n   * Note: this returns an actual array, not a generator, so it can be more\n   * easily passed around.\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   *\n   * The shape of the resulting cache may be different if the same options are\n   * not used in both caches.\n   *\n   * The `start` fields are assumed to be calculated relative to a portable\n   * `Date.now()` timestamp, even if `performance.now()` is available.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   *\n   * Fields on the {@link LRUCache.SetOptions} options param will override\n   * their corresponding values in the constructor options for the scope\n   * of this single `set()` operation.\n   *\n   * If `start` is provided, then that will set the effective start\n   * time for the TTL calculation. Note that this must be a previous\n   * value of `performance.now()` if supported, or a previous value of\n   * `Date.now()` if not.\n   *\n   * Options object may also include `size`, which will prevent\n   * calling the `sizeCalculation` function and just use the specified\n   * number if it is a positive integer, and `noDisposeOnSet` which\n   * will prevent calling a `dispose` function in the case of\n   * overwrites.\n   *\n   * If the `size` (or return value of `sizeCalculation`) for a given\n   * entry is greater than `maxEntrySize`, then the item will not be\n   * added to the cache.\n   *\n   * Will update the recency of the entry.\n   *\n   * If the value is `undefined`, then this is an alias for\n   * `cache.delete(key)`. `undefined` is never stored in the cache.\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.#delete(k, 'set')\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Check if a key is in the cache, without updating the recency of\n   * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n   * to `true` in either the options or the constructor.\n   *\n   * Will return `false` if the item is stale, even though it is technically in\n   * the cache. The difference can be determined (if it matters) by using a\n   * `status` argument, and inspecting the `has` field.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.#delete(k, 'fetch')\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.#delete(k, 'fetch')\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If the value is in the cache and not stale, then the returned\n   * Promise resolves to the value.\n   *\n   * If not in the cache, or beyond its TTL staleness, then\n   * `fetchMethod(key, staleValue, { options, signal, context })` is\n   * called, and the value returned will be added to the cache once\n   * resolved.\n   *\n   * If called with `allowStale`, and an asynchronous fetch is\n   * currently in progress to reload a stale value, then the former\n   * stale value will be returned.\n   *\n   * If called with `forceRefresh`, then the cached item will be\n   * re-fetched, even if it is not stale. However, if `allowStale` is also\n   * set, then the old value will still be returned. This is useful\n   * in cases where you want to force a reload of a cached value. If\n   * a background fetch is already in progress, then `forceRefresh`\n   * has no effect.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   *\n   * If {@link LRUCache.OptionsBase.fetchMethod} is not specified, then this is\n   * effectively an alias for `Promise.resolve(cache.get(key))`.\n   *\n   * When the fetch method resolves to a value, if the fetch has not\n   * been aborted due to deletion, eviction, or being overwritten,\n   * then it is added to the cache using the options provided.\n   *\n   * If the key is evicted or deleted before the `fetchMethod`\n   * resolves, then the AbortSignal passed to the `fetchMethod` will\n   * receive an `abort` event, and the promise returned by `fetch()`\n   * will reject with the reason for the abort.\n   *\n   * If a `signal` is passed to the `fetch()` call, then aborting the\n   * signal will abort the fetch and cause the `fetch()` promise to\n   * reject with the reason provided.\n   *\n   * **Setting `context`**\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the {@link LRUCache} constructor, then all\n   * calls to `cache.fetch()` _must_ provide a `context` option. If\n   * set to `undefined` or `void`, then calls to fetch _must not_\n   * provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that\n   * might be relevant in the course of fetching the data. It is only\n   * relevant for the course of a single `fetch()` operation, and\n   * discarded afterwards.\n   *\n   * **Note: `fetch()` calls are inflight-unique**\n   *\n   * If you call `fetch()` multiple times with the same key value,\n   * then every call after the first will resolve on the same\n   * promise<sup>1</sup>,\n   * _even if they have different settings that would otherwise change\n   * the behavior of the fetch_, such as `noDeleteOnFetchRejection`\n   * or `ignoreFetchAbort`.\n   *\n   * In most cases, this is not a problem (in fact, only fetching\n   * something once is what you probably want, if you're caching in\n   * the first place). If you are changing the fetch() options\n   * dramatically between runs, there's a good chance that you might\n   * be trying to fit divergent semantics into a single object, and\n   * would be better off with multiple cache instances.\n   *\n   * **1**: Ie, they're not the \"same Promise\", but they resolve at\n   * the same time, because they're both waiting on the same\n   * underlying fetchMethod response.\n   */\n\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * In some cases, `cache.fetch()` may resolve to `undefined`, either because\n   * a {@link LRUCache.OptionsBase#fetchMethod} was not provided (turning\n   * `cache.fetch(k)` into just an async wrapper around `cache.get(k)`) or\n   * because `ignoreFetchAbort` was specified (either to the constructor or\n   * in the {@link LRUCache.FetchOptions}). Also, the\n   * {@link OptionsBase.fetchMethod} may return `undefined` or `void`, making\n   * the test even more complicated.\n   *\n   * Because inferring the cases where `undefined` might be returned are so\n   * cumbersome, but testing for `undefined` can also be annoying, this method\n   * can be used, which will reject if `this.fetch()` resolves to undefined.\n   */\n  forceFetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<V>\n  // this overload not allowed if context is required\n  forceFetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<V>\n  async forceFetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<V> {\n    const v = await this.fetch(\n      k,\n      fetchOptions as unknown extends FC\n        ? LRUCache.FetchOptions<K, V, FC>\n        : FC extends undefined | void\n        ? LRUCache.FetchOptionsNoContext<K, V>\n        : LRUCache.FetchOptionsWithContext<K, V, FC>\n    )\n    if (v === undefined) throw new Error('fetch() returned undefined')\n    return v\n  }\n\n  /**\n   * If the key is found in the cache, then this is equivalent to\n   * {@link LRUCache#get}. If not, in the cache, then calculate the value using\n   * the {@link LRUCache.OptionsBase.memoMethod}, and add it to the cache.\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the LRUCache constructor, then all calls to `cache.memo()`\n   * _must_ provide a `context` option. If set to `undefined` or `void`, then\n   * calls to memo _must not_ provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that might be\n   * relevant in the course of fetching the data. It is only relevant for the\n   * course of a single `memo()` operation, and discarded afterwards.\n   */\n  memo(\n    k: K,\n    memoOptions: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : LRUCache.MemoOptionsWithContext<K, V, FC>\n  ): V\n  // this overload not allowed if context is required\n  memo(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    memoOptions?: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : never\n  ): V\n  memo(k: K, memoOptions: LRUCache.MemoOptions<K, V, FC> = {}) {\n    const memoMethod = this.#memoMethod\n    if (!memoMethod) {\n      throw new Error('no memoMethod provided to constructor')\n    }\n    const { context, forceRefresh, ...options } = memoOptions\n    const v = this.get(k, options)\n    if (!forceRefresh && v !== undefined) return v\n    const vv = memoMethod(k, v, {\n      options,\n      context,\n    } as LRUCache.MemoizerOptions<K, V, FC>)\n    this.set(k, vv, options)\n    return vv\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.#delete(k, 'expire')\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   *\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    return this.#delete(k, 'delete')\n  }\n\n  #delete(k: K, reason: LRUCache.DisposeReason) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.#clear(reason)\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, reason)\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, reason])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    return this.#clear('delete')\n  }\n  #clear(reason: LRUCache.DisposeReason) {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, reason)\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, reason])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n","import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'node:path'\n\nimport { fileURLToPath } from 'node:url'\n\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nimport * as actualFS from 'node:fs'\n\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\n\nimport { lstat, readdir, readlink, realpath } from 'node:fs/promises'\n\nimport { Minipass } from 'minipass'\nimport type { Dirent, Stats } from 'node:fs'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true },\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n  : {\n      ...defaultFS,\n      ...fsOption,\n      promises: {\n        ...defaultFS.promises,\n        ...(fsOption.promises || {}),\n      },\n    }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile() ? IFREG\n  : s.isDirectory() ? IFDIR\n  : s.isSymbolicLink() ? IFLNK\n  : s.isCharacterDevice() ? IFCHR\n  : s.isBlockDevice() ? IFBLK\n  : s.isSocket() ? IFSOCK\n  : s.isFIFO() ? IFIFO\n  : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * boolean indicating that this path is the current working directory\n   * of the PathScurry collection that contains it.\n   */\n  isCWD: boolean = false\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['parentPath'] refers to the path of the\n   * directory that was passed to readdir. For root entries, it's the path\n   * to the entry itself.\n   */\n  get parentPath(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n   * this property refers to the *parent* path, not the path object itself.\n   */\n  get path(): string {\n    return this.parentPath\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase =\n      rootPath ?\n        this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name =\n      this.nocase ? normalizeNocase(pathPart) : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath =\n      this.#fullpath ? this.#fullpath + s + pathPart : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.isCWD) return ''\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.isCWD) return ''\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return (\n      this.isUnknown() ? 'Unknown'\n      : this.isDirectory() ? 'Directory'\n      : this.isFile() ? 'File'\n      : this.isSymbolicLink() ? 'SymbolicLink'\n      : this.isFIFO() ? 'FIFO'\n      : this.isCharacterDevice() ? 'CharacterDevice'\n      : this.isBlockDevice() ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket() ? 'Socket'\n      : 'Unknown'\n    )\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase ?\n        this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = (await this.parent.realpath())?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.realpathSync()?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      const c = children[p]\n      if (c) c.#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name =\n        this.nocase ? normalizeNocase(e.name) : normalize(e.name)\n      if (name !== pchild!.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild!, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children,\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[],\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false,\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res),\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean,\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n    oldCwd.isCWD = false\n    this.isCWD = true\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this,\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {},\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor',\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd,\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void,\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next(),\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {},\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false,\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r,\n                    ),\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true),\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32' ? PathScurryWin32\n  : process.platform === 'darwin' ? PathScurryDarwin\n  : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n","const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'node:events'\nimport Stream from 'node:stream'\nimport { StringDecoder } from 'node:string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> =\n    | ObjectModeOptions\n    | (T extends string\n        ? EncodingOptions\n        : T extends Buffer\n        ? BufferOptions\n        : SharedOptions)\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args:\n      | [Minipass.ObjectModeOptions]\n      | (RType extends Buffer\n          ? [] | [Minipass.Options<RType>]\n          : [Minipass.Options<RType>])\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): this {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data as RType) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n","// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[],\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform,\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0 ?\n        this.isAbsolute() ?\n          this.#globList[0] + this.#globList.slice(1).join('/')\n        : this.#globList.join('/')\n      : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform,\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined ?\n        this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined ?\n        this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined ?\n        this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return (\n        typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ) ?\n        p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n","// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n  add?: (ignore: string) => void\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n  platform: NodeJS.Platform\n  mmopts: MinimatchOptions\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts,\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    this.platform = platform\n    this.mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n    for (const ign of ignored) this.add(ign)\n  }\n\n  add(ign: string) {\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    const mm = new Minimatch(ign, this.mmopts)\n    for (let i = 0; i < mm.set.length; i++) {\n      const parsed = mm.set[i]\n      const globParts = mm.globParts[i]\n      /* c8 ignore start */\n      if (!parsed || !globParts) {\n        throw new Error('invalid pattern object')\n      }\n      // strip off leading ./ portions\n      // https://github.com/isaacs/node-glob/issues/570\n      while (parsed[0] === '.' && globParts[0] === '.') {\n        parsed.shift()\n        globParts.shift()\n      }\n      /* c8 ignore stop */\n      const p = new Pattern(parsed, globParts, 0, this.platform)\n      const m = new Minimatch(p.globString(), this.mmopts)\n      const children = globParts[globParts.length - 1] === '**'\n      const absolute = p.isAbsolute()\n      if (absolute) this.absolute.push(m)\n      else this.relative.push(m)\n      if (children) {\n        if (absolute) this.absoluteChildren.push(m)\n        else this.relativeChildren.push(m)\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n","// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache =\n      hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined ?\n            this.opts.root\n          : root,\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n","/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n  includeChildMatches?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Path\n  : O extends GWOFileTypesFalse ? string\n  : O extends GWOFileTypesUnset ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Set<Path>\n  : O extends GWOFileTypesFalse ? Set<string>\n  : O extends GWOFileTypesUnset ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> = Minipass<\n  Result<O>,\n  Result<O>\n>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts,\n): IgnoreLike =>\n  typeof ignore === 'string' ? new Ignore([ignore], opts)\n  : Array.isArray(ignore) ? new Ignore(ignore, opts)\n  : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n  includeChildMatches: boolean\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    this.includeChildMatches = opts.includeChildMatches !== false\n    if (opts.ignore || !this.includeChildMatches) {\n      this.#ignore = makeIgnore(opts.ignore ?? [], opts)\n      if (\n        !this.includeChildMatches &&\n        typeof this.#ignore.add !== 'function'\n      ) {\n        const m = 'cannot ignore child matches, ignore lacks add() method.'\n        throw new Error(m)\n      }\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return (\n        e &&\n          (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n          (!ifDir || e.canReaddir()) &&\n          (!this.opts.nodir || !e.isDirectory()) &&\n          (!this.opts.nodir ||\n            !this.opts.follow ||\n            !e.isSymbolicLink() ||\n            !e.realpathCached()?.isDirectory()) &&\n          !this.#ignored(e)\n      ) ?\n        e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    // we know we have an ignore if this is false, but TS doesn't\n    if (!this.includeChildMatches && this.#ignore?.add) {\n      const ign = `${e.relativePosix()}/**`\n      this.#ignore.add(ign)\n    }\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n          '.' + this.#sep\n        : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true,\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb),\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  matches = new Set<Result<O>>()\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Set<Result<O>>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Set<Result<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  results: Minipass<Result<O>, Result<O>>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass<Result<O>, Result<O>>({\n      signal: this.signal,\n      objectMode: true,\n    })\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n","import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {},\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n","import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n","import { dirname } from 'path'\nimport { MkdirpOptions, optsArg } from './opts-arg.js'\n\nexport const mkdirpManualSync = (\n  path: string,\n  options?: MkdirpOptions,\n  made?: string | undefined | void\n): string | undefined | void => {\n  const parent = dirname(path)\n  const opts = { ...optsArg(options), recursive: false }\n\n  if (parent === path) {\n    try {\n      return opts.mkdirSync(path, opts)\n    } catch (er) {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      const fer = er as NodeJS.ErrnoException\n      if (fer && fer.code !== 'EISDIR') {\n        throw er\n      }\n      return\n    }\n  }\n\n  try {\n    opts.mkdirSync(path, opts)\n    return made || path\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    if (fer && fer.code === 'ENOENT') {\n      return mkdirpManualSync(path, opts, mkdirpManualSync(parent, opts, made))\n    }\n    if (fer && fer.code !== 'EEXIST' && fer && fer.code !== 'EROFS') {\n      throw er\n    }\n    try {\n      if (!opts.statSync(path).isDirectory()) throw er\n    } catch (_) {\n      throw er\n    }\n  }\n}\n\nexport const mkdirpManual = Object.assign(\n  async (\n    path: string,\n    options?: MkdirpOptions,\n    made?: string | undefined | void\n  ): Promise<string | undefined | void> => {\n    const opts = optsArg(options)\n    opts.recursive = false\n    const parent = dirname(path)\n    if (parent === path) {\n      return opts.mkdirAsync(path, opts).catch(er => {\n        // swallowed by recursive implementation on posix systems\n        // any other error is a failure\n        const fer = er as NodeJS.ErrnoException\n        if (fer && fer.code !== 'EISDIR') {\n          throw er\n        }\n      })\n    }\n\n    return opts.mkdirAsync(path, opts).then(\n      () => made || path,\n      async er => {\n        const fer = er as NodeJS.ErrnoException\n        if (fer && fer.code === 'ENOENT') {\n          return mkdirpManual(parent, opts).then(\n            (made?: string | undefined | void) => mkdirpManual(path, opts, made)\n          )\n        }\n        if (fer && fer.code !== 'EEXIST' && fer.code !== 'EROFS') {\n          throw er\n        }\n        return opts.statAsync(path).then(\n          st => {\n            if (st.isDirectory()) {\n              return made\n            } else {\n              throw er\n            }\n          },\n          () => {\n            throw er\n          }\n        )\n      }\n    )\n  },\n  { sync: mkdirpManualSync }\n)\n","import {\n  MakeDirectoryOptions,\n  mkdir,\n  mkdirSync,\n  stat,\n  Stats,\n  statSync,\n} from 'fs'\n\nexport interface FsProvider {\n  stat?: (\n    path: string,\n    callback: (err: NodeJS.ErrnoException | null, stats: Stats) => any\n  ) => any\n  mkdir?: (\n    path: string,\n    opts: MakeDirectoryOptions & { recursive?: boolean },\n    callback: (err: NodeJS.ErrnoException | null, made?: string) => any\n  ) => any\n  statSync?: (path: string) => Stats\n  mkdirSync?: (\n    path: string,\n    opts: MakeDirectoryOptions & { recursive?: boolean }\n  ) => string | undefined\n}\n\ninterface Options extends FsProvider {\n  mode?: number | string\n  fs?: FsProvider\n  mkdirAsync?: (\n    path: string,\n    opts: MakeDirectoryOptions & { recursive?: boolean }\n  ) => Promise<string | undefined>\n  statAsync?: (path: string) => Promise<Stats>\n}\n\nexport type MkdirpOptions = Options | number | string\n\nexport interface MkdirpOptionsResolved {\n  mode: number\n  fs: FsProvider\n  mkdirAsync: (\n    path: string,\n    opts: MakeDirectoryOptions & { recursive?: boolean }\n  ) => Promise<string | undefined>\n  statAsync: (path: string) => Promise<Stats>\n  stat: (\n    path: string,\n    callback: (err: NodeJS.ErrnoException | null, stats: Stats) => any\n  ) => any\n  mkdir: (\n    path: string,\n    opts: MakeDirectoryOptions & { recursive?: boolean },\n    callback: (err: NodeJS.ErrnoException | null, made?: string) => any\n  ) => any\n  statSync: (path: string) => Stats\n  mkdirSync: (\n    path: string,\n    opts: MakeDirectoryOptions & { recursive?: boolean }\n  ) => string | undefined\n  recursive?: boolean\n}\n\nexport const optsArg = (opts?: MkdirpOptions): MkdirpOptionsResolved => {\n  if (!opts) {\n    opts = { mode: 0o777 }\n  } else if (typeof opts === 'object') {\n    opts = { mode: 0o777, ...opts }\n  } else if (typeof opts === 'number') {\n    opts = { mode: opts }\n  } else if (typeof opts === 'string') {\n    opts = { mode: parseInt(opts, 8) }\n  } else {\n    throw new TypeError('invalid options argument')\n  }\n\n  const resolved = opts as MkdirpOptionsResolved\n  const optsFs = opts.fs || {}\n\n  opts.mkdir = opts.mkdir || optsFs.mkdir || mkdir\n\n  opts.mkdirAsync = opts.mkdirAsync\n    ? opts.mkdirAsync\n    : async (\n        path: string,\n        options: MakeDirectoryOptions & { recursive?: boolean }\n      ): Promise<string | undefined> => {\n        return new Promise<string | undefined>((res, rej) =>\n          resolved.mkdir(path, options, (er, made) =>\n            er ? rej(er) : res(made)\n          )\n        )\n      }\n\n  opts.stat = opts.stat || optsFs.stat || stat\n  opts.statAsync = opts.statAsync\n    ? opts.statAsync\n    : async (path: string) =>\n        new Promise((res, rej) =>\n          resolved.stat(path, (err, stats) => (err ? rej(err) : res(stats)))\n        )\n\n  opts.statSync = opts.statSync || optsFs.statSync || statSync\n  opts.mkdirSync = opts.mkdirSync || optsFs.mkdirSync || mkdirSync\n\n  return resolved\n}\n","import { dirname } from 'path'\nimport { findMade, findMadeSync } from './find-made.js'\nimport { mkdirpManual, mkdirpManualSync } from './mkdirp-manual.js'\nimport { MkdirpOptions, optsArg } from './opts-arg.js'\n\nexport const mkdirpNativeSync = (\n  path: string,\n  options?: MkdirpOptions\n): string | void | undefined => {\n  const opts = optsArg(options)\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path) {\n    return opts.mkdirSync(path, opts)\n  }\n\n  const made = findMadeSync(opts, path)\n  try {\n    opts.mkdirSync(path, opts)\n    return made\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    if (fer && fer.code === 'ENOENT') {\n      return mkdirpManualSync(path, opts)\n    } else {\n      throw er\n    }\n  }\n}\n\nexport const mkdirpNative = Object.assign(\n  async (\n    path: string,\n    options?: MkdirpOptions\n  ): Promise<string | void | undefined> => {\n    const opts = { ...optsArg(options), recursive: true }\n    const parent = dirname(path)\n    if (parent === path) {\n      return await opts.mkdirAsync(path, opts)\n    }\n\n    return findMade(opts, path).then((made?: string | undefined) =>\n      opts\n        .mkdirAsync(path, opts)\n        .then(m => made || m)\n        .catch(er => {\n          const fer = er as NodeJS.ErrnoException\n          if (fer && fer.code === 'ENOENT') {\n            return mkdirpManual(path, opts)\n          } else {\n            throw er\n          }\n        })\n    )\n  },\n  { sync: mkdirpNativeSync }\n)\n","import { dirname } from 'path'\nimport { MkdirpOptionsResolved } from './opts-arg.js'\n\nexport const findMade = async (\n  opts: MkdirpOptionsResolved,\n  parent: string,\n  path?: string\n): Promise<undefined | string> => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent) {\n    return\n  }\n\n  return opts.statAsync(parent).then(\n    st => (st.isDirectory() ? path : undefined), // will fail later\n    er => {\n      const fer = er as NodeJS.ErrnoException\n      return fer && fer.code === 'ENOENT'\n        ? findMade(opts, dirname(parent), parent)\n        : undefined\n    }\n  )\n}\n\nexport const findMadeSync = (\n  opts: MkdirpOptionsResolved,\n  parent: string,\n  path?: string\n): undefined | string => {\n  if (path === parent) {\n    return undefined\n  }\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    return fer && fer.code === 'ENOENT'\n      ? findMadeSync(opts, dirname(parent), parent)\n      : undefined\n  }\n}\n","const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\nimport { parse, resolve } from 'path'\nexport const pathArg = (path: string) => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(\n      new TypeError('path must be a string without null bytes'),\n      {\n        path,\n        code: 'ERR_INVALID_ARG_VALUE',\n      }\n    )\n  }\n\n  path = resolve(path)\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const { root } = parse(path)\n    if (badWinChars.test(path.substring(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\n","import { mkdir, mkdirSync } from 'fs'\nimport { MkdirpOptions, optsArg } from './opts-arg.js'\n\nconst version = process.env.__TESTING_MKDIRP_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\nconst hasNative = +versArr[0] > 10 || (+versArr[0] === 10 && +versArr[1] >= 12)\n\nexport const useNativeSync = !hasNative\n  ? () => false\n  : (opts?: MkdirpOptions) => optsArg(opts).mkdirSync === mkdirSync\n\nexport const useNative = Object.assign(\n  !hasNative\n    ? () => false\n    : (opts?: MkdirpOptions) => optsArg(opts).mkdir === mkdir,\n  {\n    sync: useNativeSync,\n  }\n)\n","import { mkdirpManual, mkdirpManualSync } from './mkdirp-manual.js'\nimport { mkdirpNative, mkdirpNativeSync } from './mkdirp-native.js'\nimport { MkdirpOptions, optsArg } from './opts-arg.js'\nimport { pathArg } from './path-arg.js'\nimport { useNative, useNativeSync } from './use-native.js'\n/* c8 ignore start */\nexport { mkdirpManual, mkdirpManualSync } from './mkdirp-manual.js'\nexport { mkdirpNative, mkdirpNativeSync } from './mkdirp-native.js'\nexport { useNative, useNativeSync } from './use-native.js'\n/* c8 ignore stop */\n\nexport const mkdirpSync = (path: string, opts?: MkdirpOptions) => {\n  path = pathArg(path)\n  const resolved = optsArg(opts)\n  return useNativeSync(resolved)\n    ? mkdirpNativeSync(path, resolved)\n    : mkdirpManualSync(path, resolved)\n}\n\nexport const sync = mkdirpSync\nexport const manual = mkdirpManual\nexport const manualSync = mkdirpManualSync\nexport const native = mkdirpNative\nexport const nativeSync = mkdirpNativeSync\nexport const mkdirp = Object.assign(\n  async (path: string, opts?: MkdirpOptions) => {\n    path = pathArg(path)\n    const resolved = optsArg(opts)\n    return useNative(resolved)\n      ? mkdirpNative(path, resolved)\n      : mkdirpManual(path, resolved)\n  },\n  {\n    mkdirpSync,\n    mkdirpNative,\n    mkdirpNativeSync,\n    mkdirpManual,\n    mkdirpManualSync,\n\n    sync: mkdirpSync,\n    native: mkdirpNative,\n    nativeSync: mkdirpNativeSync,\n    manual: mkdirpManual,\n    manualSync: mkdirpManualSync,\n    useNative,\n    useNativeSync,\n  }\n)\n","import { Dirent, Stats } from 'fs'\nimport { GlobOptions } from 'glob'\n\nconst typeOrUndef = (val: any, t: string) =>\n  typeof val === 'undefined' || typeof val === t\n\nexport const isRimrafOptions = (o: any): o is RimrafOptions =>\n  !!o &&\n  typeof o === 'object' &&\n  typeOrUndef(o.preserveRoot, 'boolean') &&\n  typeOrUndef(o.tmp, 'string') &&\n  typeOrUndef(o.maxRetries, 'number') &&\n  typeOrUndef(o.retryDelay, 'number') &&\n  typeOrUndef(o.backoff, 'number') &&\n  typeOrUndef(o.maxBackoff, 'number') &&\n  (typeOrUndef(o.glob, 'boolean') || (o.glob && typeof o.glob === 'object')) &&\n  typeOrUndef(o.filter, 'function')\n\nexport const assertRimrafOptions: (o: any) => void = (\n  o: any,\n): asserts o is RimrafOptions => {\n  if (!isRimrafOptions(o)) {\n    throw new Error('invalid rimraf options')\n  }\n}\n\nexport interface RimrafAsyncOptions {\n  preserveRoot?: boolean\n  tmp?: string\n  maxRetries?: number\n  retryDelay?: number\n  backoff?: number\n  maxBackoff?: number\n  signal?: AbortSignal\n  glob?: boolean | GlobOptions\n  filter?:\n    | ((path: string, ent: Dirent | Stats) => boolean)\n    | ((path: string, ent: Dirent | Stats) => Promise<boolean>)\n}\n\nexport interface RimrafSyncOptions extends RimrafAsyncOptions {\n  filter?: (path: string, ent: Dirent | Stats) => boolean\n}\n\nexport type RimrafOptions = RimrafSyncOptions | RimrafAsyncOptions\n\nconst optArgT = <T extends RimrafOptions>(\n  opt: T,\n):\n  | (T & {\n      glob: GlobOptions & { withFileTypes: false }\n    })\n  | (T & { glob: undefined }) => {\n  assertRimrafOptions(opt)\n  const { glob, ...options } = opt\n  if (!glob) {\n    return options as T & { glob: undefined }\n  }\n  const globOpt =\n    glob === true ?\n      opt.signal ?\n        { signal: opt.signal }\n      : {}\n    : opt.signal ?\n      {\n        signal: opt.signal,\n        ...glob,\n      }\n    : glob\n  return {\n    ...options,\n    glob: {\n      ...globOpt,\n      // always get absolute paths from glob, to ensure\n      // that we are referencing the correct thing.\n      absolute: true,\n      withFileTypes: false,\n    },\n  } as T & { glob: GlobOptions & { withFileTypes: false } }\n}\n\nexport const optArg = (opt: RimrafAsyncOptions = {}) => optArgT(opt)\nexport const optArgSync = (opt: RimrafSyncOptions = {}) => optArgT(opt)\n","import { parse, resolve } from 'path'\nimport { inspect } from 'util'\nimport { RimrafAsyncOptions } from './index.js'\nimport platform from './platform.js'\n\nconst pathArg = (path: string, opt: RimrafAsyncOptions = {}) => {\n  const type = typeof path\n  if (type !== 'string') {\n    const ctor = path && type === 'object' && path.constructor\n    const received =\n      ctor && ctor.name ? `an instance of ${ctor.name}`\n      : type === 'object' ? inspect(path)\n      : `type ${type} ${path}`\n    const msg =\n      'The \"path\" argument must be of type string. ' + `Received ${received}`\n    throw Object.assign(new TypeError(msg), {\n      path,\n      code: 'ERR_INVALID_ARG_TYPE',\n    })\n  }\n\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    const msg = 'path must be a string without null bytes'\n    throw Object.assign(new TypeError(msg), {\n      path,\n      code: 'ERR_INVALID_ARG_VALUE',\n    })\n  }\n\n  path = resolve(path)\n  const { root } = parse(path)\n\n  if (path === root && opt.preserveRoot !== false) {\n    const msg = 'refusing to remove root directory without preserveRoot:false'\n    throw Object.assign(new Error(msg), {\n      path,\n      code: 'ERR_PRESERVE_ROOT',\n    })\n  }\n\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const { root } = parse(path)\n    if (badWinChars.test(path.substring(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\n\nexport default pathArg\n","export default process.env.__TESTING_RIMRAF_PLATFORM__ || process.platform\n","// promisify ourselves, because older nodes don't have fs.promises\n\nimport fs, { Dirent } from 'fs'\n\n// sync ones just take the sync version from node\nexport {\n  chmodSync,\n  mkdirSync,\n  renameSync,\n  rmdirSync,\n  rmSync,\n  statSync,\n  lstatSync,\n  unlinkSync,\n} from 'fs'\n\nimport { readdirSync as rdSync } from 'fs'\nexport const readdirSync = (path: fs.PathLike): Dirent[] =>\n  rdSync(path, { withFileTypes: true })\n\n// unrolled for better inlining, this seems to get better performance\n// than something like:\n// const makeCb = (res, rej) => (er, ...d) => er ? rej(er) : res(...d)\n// which would be a bit cleaner.\n\nconst chmod = (path: fs.PathLike, mode: fs.Mode): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.chmod(path, mode, (er, ...d: any[]) => (er ? rej(er) : res(...d))),\n  )\n\nconst mkdir = (\n  path: fs.PathLike,\n  options?:\n    | fs.Mode\n    | (fs.MakeDirectoryOptions & { recursive?: boolean | null })\n    | undefined\n    | null,\n): Promise<string | undefined> =>\n  new Promise((res, rej) =>\n    fs.mkdir(path, options, (er, made) => (er ? rej(er) : res(made))),\n  )\n\nconst readdir = (path: fs.PathLike): Promise<Dirent[]> =>\n  new Promise<Dirent[]>((res, rej) =>\n    fs.readdir(path, { withFileTypes: true }, (er, data) =>\n      er ? rej(er) : res(data),\n    ),\n  )\n\nconst rename = (oldPath: fs.PathLike, newPath: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rename(oldPath, newPath, (er, ...d: any[]) =>\n      er ? rej(er) : res(...d),\n    ),\n  )\n\nconst rm = (path: fs.PathLike, options: fs.RmOptions): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rm(path, options, (er, ...d: any[]) => (er ? rej(er) : res(...d))),\n  )\n\nconst rmdir = (path: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rmdir(path, (er, ...d: any[]) => (er ? rej(er) : res(...d))),\n  )\n\nconst stat = (path: fs.PathLike): Promise<fs.Stats> =>\n  new Promise((res, rej) =>\n    fs.stat(path, (er, data) => (er ? rej(er) : res(data))),\n  )\n\nconst lstat = (path: fs.PathLike): Promise<fs.Stats> =>\n  new Promise((res, rej) =>\n    fs.lstat(path, (er, data) => (er ? rej(er) : res(data))),\n  )\n\nconst unlink = (path: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.unlink(path, (er, ...d: any[]) => (er ? rej(er) : res(...d))),\n  )\n\nexport const promises = {\n  chmod,\n  mkdir,\n  readdir,\n  rename,\n  rm,\n  rmdir,\n  stat,\n  lstat,\n  unlink,\n}\n","// the simple recursive removal, where unlink and rmdir are atomic\n// Note that this approach does NOT work on Windows!\n// We stat first and only unlink if the Dirent isn't a directory,\n// because sunos will let root unlink a directory, and some\n// SUPER weird breakage happens as a result.\n\nimport { lstatSync, promises, rmdirSync, unlinkSync } from './fs.js'\nconst { lstat, rmdir, unlink } = promises\n\nimport { parse, resolve } from 'path'\n\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\n\nimport { Dirent, Stats } from 'fs'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from './index.js'\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\n\nexport const rimrafPosix = async (path: string, opt: RimrafAsyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafPosixDir(path, opt, await lstat(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nexport const rimrafPosixSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafPosixDirSync(path, opt, lstatSync(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafPosixDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats,\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(unlink(path))\n    return true\n  }\n\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent => rimrafPosixDir(resolve(path, ent.name), opt, ent)),\n    )\n  ).reduce((a, b) => a && b, true)\n\n  if (!removedAll) {\n    return false\n  }\n\n  // we don't ever ACTUALLY try to unlink /, because that can never work\n  // but when preserveRoot is false, we could be operating on it.\n  // No need to check if preserveRoot is not false.\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n\n  if (opt.filter && !(await opt.filter(path, ent))) {\n    return false\n  }\n\n  await ignoreENOENT(rmdir(path))\n  return true\n}\n\nconst rimrafPosixDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats,\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => unlinkSync(path))\n    return true\n  }\n  let removedAll: boolean = true\n  for (const ent of entries) {\n    const p = resolve(path, ent.name)\n    removedAll = rimrafPosixDirSync(p, opt, ent) && removedAll\n  }\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n\n  if (!removedAll) {\n    return false\n  }\n\n  if (opt.filter && !opt.filter(path, ent)) {\n    return false\n  }\n\n  ignoreENOENTSync(() => rmdirSync(path))\n  return true\n}\n","// returns an array of entries if readdir() works,\n// or the error that readdir() raised if not.\nimport { promises, readdirSync } from './fs.js'\nconst { readdir } = promises\nexport const readdirOrError = (path: string) =>\n  readdir(path).catch(er => er as NodeJS.ErrnoException)\nexport const readdirOrErrorSync = (path: string) => {\n  try {\n    return readdirSync(path)\n  } catch (er) {\n    return er as NodeJS.ErrnoException\n  }\n}\n","export const ignoreENOENT = async (p: Promise<any>) =>\n  p.catch(er => {\n    if (er.code !== 'ENOENT') {\n      throw er\n    }\n  })\n\nexport const ignoreENOENTSync = (fn: () => any) => {\n  try {\n    return fn()\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code !== 'ENOENT') {\n      throw er\n    }\n  }\n}\n","// This is the same as rimrafPosix, with the following changes:\n//\n// 1. EBUSY, ENFILE, EMFILE trigger retries and/or exponential backoff\n// 2. All non-directories are removed first and then all directories are\n//    removed in a second sweep.\n// 3. If we hit ENOTEMPTY in the second sweep, fall back to move-remove on\n//    the that folder.\n//\n// Note: \"move then remove\" is 2-10 times slower, and just as unreliable.\n\nimport { Dirent, Stats } from 'fs'\nimport { parse, resolve } from 'path'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from './index.js'\nimport { fixEPERM, fixEPERMSync } from './fix-eperm.js'\nimport { lstatSync, promises, rmdirSync, unlinkSync } from './fs.js'\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\nimport { retryBusy, retryBusySync } from './retry-busy.js'\nimport { rimrafMoveRemove, rimrafMoveRemoveSync } from './rimraf-move-remove.js'\nconst { unlink, rmdir, lstat } = promises\n\nconst rimrafWindowsFile = retryBusy(fixEPERM(unlink))\nconst rimrafWindowsFileSync = retryBusySync(fixEPERMSync(unlinkSync))\nconst rimrafWindowsDirRetry = retryBusy(fixEPERM(rmdir))\nconst rimrafWindowsDirRetrySync = retryBusySync(fixEPERMSync(rmdirSync))\n\nconst rimrafWindowsDirMoveRemoveFallback = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n): Promise<boolean> => {\n  /* c8 ignore start */\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  /* c8 ignore stop */\n  // already filtered, remove from options so we don't call unnecessarily\n  const { filter, ...options } = opt\n  try {\n    return await rimrafWindowsDirRetry(path, options)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOTEMPTY') {\n      return await rimrafMoveRemove(path, options)\n    }\n    throw er\n  }\n}\n\nconst rimrafWindowsDirMoveRemoveFallbackSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  // already filtered, remove from options so we don't call unnecessarily\n  const { filter, ...options } = opt\n  try {\n    return rimrafWindowsDirRetrySync(path, options)\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    if (fer?.code === 'ENOTEMPTY') {\n      return rimrafMoveRemoveSync(path, options)\n    }\n    throw er\n  }\n}\n\nconst START = Symbol('start')\nconst CHILD = Symbol('child')\nconst FINISH = Symbol('finish')\n\nexport const rimrafWindows = async (path: string, opt: RimrafAsyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafWindowsDir(path, opt, await lstat(path), START)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nexport const rimrafWindowsSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafWindowsDirSync(path, opt, lstatSync(path), START)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafWindowsDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats,\n  state = START,\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    // is a file\n    await ignoreENOENT(rimrafWindowsFile(path, opt))\n    return true\n  }\n\n  const s = state === START ? CHILD : state\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent =>\n        rimrafWindowsDir(resolve(path, ent.name), opt, ent, s),\n      ),\n    )\n  ).reduce((a, b) => a && b, true)\n\n  if (state === START) {\n    return rimrafWindowsDir(path, opt, ent, FINISH)\n  } else if (state === FINISH) {\n    if (opt.preserveRoot === false && path === parse(path).root) {\n      return false\n    }\n    if (!removedAll) {\n      return false\n    }\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(rimrafWindowsDirMoveRemoveFallback(path, opt))\n  }\n  return true\n}\n\nconst rimrafWindowsDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats,\n  state = START,\n): boolean => {\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    // is a file\n    ignoreENOENTSync(() => rimrafWindowsFileSync(path, opt))\n    return true\n  }\n\n  let removedAll = true\n  for (const ent of entries) {\n    const s = state === START ? CHILD : state\n    const p = resolve(path, ent.name)\n    removedAll = rimrafWindowsDirSync(p, opt, ent, s) && removedAll\n  }\n\n  if (state === START) {\n    return rimrafWindowsDirSync(path, opt, ent, FINISH)\n  } else if (state === FINISH) {\n    if (opt.preserveRoot === false && path === parse(path).root) {\n      return false\n    }\n    if (!removedAll) {\n      return false\n    }\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => {\n      rimrafWindowsDirMoveRemoveFallbackSync(path, opt)\n    })\n  }\n  return true\n}\n","import { chmodSync, promises } from './fs.js'\nconst { chmod } = promises\n\nexport const fixEPERM =\n  (fn: (path: string) => Promise<any>) => async (path: string) => {\n    try {\n      return await fn(path)\n    } catch (er) {\n      const fer = er as NodeJS.ErrnoException\n      if (fer?.code === 'ENOENT') {\n        return\n      }\n      if (fer?.code === 'EPERM') {\n        try {\n          await chmod(path, 0o666)\n        } catch (er2) {\n          const fer2 = er2 as NodeJS.ErrnoException\n          if (fer2?.code === 'ENOENT') {\n            return\n          }\n          throw er\n        }\n        return await fn(path)\n      }\n      throw er\n    }\n  }\n\nexport const fixEPERMSync = (fn: (path: string) => any) => (path: string) => {\n  try {\n    return fn(path)\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    if (fer?.code === 'ENOENT') {\n      return\n    }\n    if (fer?.code === 'EPERM') {\n      try {\n        chmodSync(path, 0o666)\n      } catch (er2) {\n        const fer2 = er2 as NodeJS.ErrnoException\n        if (fer2?.code === 'ENOENT') {\n          return\n        }\n        throw er\n      }\n      return fn(path)\n    }\n    throw er\n  }\n}\n","// note: max backoff is the maximum that any *single* backoff will do\n\nimport { RimrafAsyncOptions, RimrafOptions } from './index.js'\n\nexport const MAXBACKOFF = 200\nexport const RATE = 1.2\nexport const MAXRETRIES = 10\nexport const codes = new Set(['EMFILE', 'ENFILE', 'EBUSY'])\n\nexport const retryBusy = (fn: (path: string) => Promise<any>) => {\n  const method = async (\n    path: string,\n    opt: RimrafAsyncOptions,\n    backoff = 1,\n    total = 0,\n  ) => {\n    const mbo = opt.maxBackoff || MAXBACKOFF\n    const rate = opt.backoff || RATE\n    const max = opt.maxRetries || MAXRETRIES\n    let retries = 0\n    while (true) {\n      try {\n        return await fn(path)\n      } catch (er) {\n        const fer = er as NodeJS.ErrnoException\n        if (fer?.path === path && fer?.code && codes.has(fer.code)) {\n          backoff = Math.ceil(backoff * rate)\n          total = backoff + total\n          if (total < mbo) {\n            return new Promise((res, rej) => {\n              setTimeout(() => {\n                method(path, opt, backoff, total).then(res, rej)\n              }, backoff)\n            })\n          }\n          if (retries < max) {\n            retries++\n            continue\n          }\n        }\n        throw er\n      }\n    }\n  }\n\n  return method\n}\n\n// just retries, no async so no backoff\nexport const retryBusySync = (fn: (path: string) => any) => {\n  const method = (path: string, opt: RimrafOptions) => {\n    const max = opt.maxRetries || MAXRETRIES\n    let retries = 0\n    while (true) {\n      try {\n        return fn(path)\n      } catch (er) {\n        const fer = er as NodeJS.ErrnoException\n        if (\n          fer?.path === path &&\n          fer?.code &&\n          codes.has(fer.code) &&\n          retries < max\n        ) {\n          retries++\n          continue\n        }\n        throw er\n      }\n    }\n  }\n  return method\n}\n","// https://youtu.be/uhRWMGBjlO8?t=537\n//\n// 1. readdir\n// 2. for each entry\n//   a. if a non-empty directory, recurse\n//   b. if an empty directory, move to random hidden file name in $TEMP\n//   c. unlink/rmdir $TEMP\n//\n// This works around the fact that unlink/rmdir is non-atomic and takes\n// a non-deterministic amount of time to complete.\n//\n// However, it is HELLA SLOW, like 2-10x slower than a naive recursive rm.\n\nimport { basename, parse, resolve } from 'path'\nimport { defaultTmp, defaultTmpSync } from './default-tmp.js'\n\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\n\nimport {\n  chmodSync,\n  lstatSync,\n  promises as fsPromises,\n  renameSync,\n  rmdirSync,\n  unlinkSync,\n} from './fs.js'\nconst { lstat, rename, unlink, rmdir, chmod } = fsPromises\n\nimport { Dirent, Stats } from 'fs'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from './index.js'\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\n\n// crypto.randomBytes is much slower, and Math.random() is enough here\nconst uniqueFilename = (path: string) => `.${basename(path)}.${Math.random()}`\n\nconst unlinkFixEPERM = async (path: string) =>\n  unlink(path).catch((er: Error & { code?: string }) => {\n    if (er.code === 'EPERM') {\n      return chmod(path, 0o666).then(\n        () => unlink(path),\n        er2 => {\n          if (er2.code === 'ENOENT') {\n            return\n          }\n          throw er\n        },\n      )\n    } else if (er.code === 'ENOENT') {\n      return\n    }\n    throw er\n  })\n\nconst unlinkFixEPERMSync = (path: string) => {\n  try {\n    unlinkSync(path)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'EPERM') {\n      try {\n        return chmodSync(path, 0o666)\n      } catch (er2) {\n        if ((er2 as NodeJS.ErrnoException)?.code === 'ENOENT') {\n          return\n        }\n        throw er\n      }\n    } else if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') {\n      return\n    }\n    throw er\n  }\n}\n\nexport const rimrafMoveRemove = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafMoveRemoveDir(path, opt, await lstat(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafMoveRemoveDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats,\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  if (!opt.tmp) {\n    return rimrafMoveRemoveDir(\n      path,\n      { ...opt, tmp: await defaultTmp(path) },\n      ent,\n    )\n  }\n  if (path === opt.tmp && parse(path).root !== path) {\n    throw new Error('cannot delete temp directory used for deletion')\n  }\n\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(tmpUnlink(path, opt.tmp, unlinkFixEPERM))\n    return true\n  }\n\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent =>\n        rimrafMoveRemoveDir(resolve(path, ent.name), opt, ent),\n      ),\n    )\n  ).reduce((a, b) => a && b, true)\n  if (!removedAll) {\n    return false\n  }\n\n  // we don't ever ACTUALLY try to unlink /, because that can never work\n  // but when preserveRoot is false, we could be operating on it.\n  // No need to check if preserveRoot is not false.\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n  if (opt.filter && !(await opt.filter(path, ent))) {\n    return false\n  }\n  await ignoreENOENT(tmpUnlink(path, opt.tmp, rmdir))\n  return true\n}\n\nconst tmpUnlink = async (\n  path: string,\n  tmp: string,\n  rm: (p: string) => Promise<any>,\n) => {\n  const tmpFile = resolve(tmp, uniqueFilename(path))\n  await rename(path, tmpFile)\n  return await rm(tmpFile)\n}\n\nexport const rimrafMoveRemoveSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafMoveRemoveDirSync(path, opt, lstatSync(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafMoveRemoveDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats,\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  if (!opt.tmp) {\n    return rimrafMoveRemoveDirSync(\n      path,\n      { ...opt, tmp: defaultTmpSync(path) },\n      ent,\n    )\n  }\n  const tmp: string = opt.tmp\n\n  if (path === opt.tmp && parse(path).root !== path) {\n    throw new Error('cannot delete temp directory used for deletion')\n  }\n\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => tmpUnlinkSync(path, tmp, unlinkFixEPERMSync))\n    return true\n  }\n\n  let removedAll = true\n  for (const ent of entries) {\n    const p = resolve(path, ent.name)\n    removedAll = rimrafMoveRemoveDirSync(p, opt, ent) && removedAll\n  }\n  if (!removedAll) {\n    return false\n  }\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n  if (opt.filter && !opt.filter(path, ent)) {\n    return false\n  }\n  ignoreENOENTSync(() => tmpUnlinkSync(path, tmp, rmdirSync))\n  return true\n}\n\nconst tmpUnlinkSync = (\n  path: string,\n  tmp: string,\n  rmSync: (p: string) => void,\n) => {\n  const tmpFile = resolve(tmp, uniqueFilename(path))\n  renameSync(path, tmpFile)\n  return rmSync(tmpFile)\n}\n","// The default temporary folder location for use in the windows algorithm.\n// It's TEMPting to use dirname(path), since that's guaranteed to be on the\n// same device.  However, this means that:\n// rimraf(path).then(() => rimraf(dirname(path)))\n// will often fail with EBUSY, because the parent dir contains\n// marked-for-deletion directory entries (which do not show up in readdir).\n// The approach here is to use os.tmpdir() if it's on the same drive letter,\n// or resolve(path, '\\\\temp') if it exists, or the root of the drive if not.\n// On Posix (not that you'd be likely to use the windows algorithm there),\n// it uses os.tmpdir() always.\nimport { tmpdir } from 'os'\nimport { parse, resolve } from 'path'\nimport { promises, statSync } from './fs.js'\nimport platform from './platform.js'\nconst { stat } = promises\n\nconst isDirSync = (path: string) => {\n  try {\n    return statSync(path).isDirectory()\n  } catch (er) {\n    return false\n  }\n}\n\nconst isDir = (path: string) =>\n  stat(path).then(\n    st => st.isDirectory(),\n    () => false,\n  )\n\nconst win32DefaultTmp = async (path: string) => {\n  const { root } = parse(path)\n  const tmp = tmpdir()\n  const { root: tmpRoot } = parse(tmp)\n  if (root.toLowerCase() === tmpRoot.toLowerCase()) {\n    return tmp\n  }\n\n  const driveTmp = resolve(root, '/temp')\n  if (await isDir(driveTmp)) {\n    return driveTmp\n  }\n\n  return root\n}\n\nconst win32DefaultTmpSync = (path: string) => {\n  const { root } = parse(path)\n  const tmp = tmpdir()\n  const { root: tmpRoot } = parse(tmp)\n  if (root.toLowerCase() === tmpRoot.toLowerCase()) {\n    return tmp\n  }\n\n  const driveTmp = resolve(root, '/temp')\n  if (isDirSync(driveTmp)) {\n    return driveTmp\n  }\n\n  return root\n}\n\nconst posixDefaultTmp = async () => tmpdir()\nconst posixDefaultTmpSync = () => tmpdir()\n\nexport const defaultTmp =\n  platform === 'win32' ? win32DefaultTmp : posixDefaultTmp\nexport const defaultTmpSync =\n  platform === 'win32' ? win32DefaultTmpSync : posixDefaultTmpSync\n","import platform from './platform.js'\n\nimport { rimrafPosix, rimrafPosixSync } from './rimraf-posix.js'\nimport { rimrafWindows, rimrafWindowsSync } from './rimraf-windows.js'\n\nexport const rimrafManual = platform === 'win32' ? rimrafWindows : rimrafPosix\nexport const rimrafManualSync =\n  platform === 'win32' ? rimrafWindowsSync : rimrafPosixSync\n","import { RimrafAsyncOptions, RimrafSyncOptions } from './index.js'\nimport { promises, rmSync } from './fs.js'\nconst { rm } = promises\n\nexport const rimrafNative = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n): Promise<boolean> => {\n  await rm(path, {\n    ...opt,\n    force: true,\n    recursive: true,\n  })\n  return true\n}\n\nexport const rimrafNativeSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n): boolean => {\n  rmSync(path, {\n    ...opt,\n    force: true,\n    recursive: true,\n  })\n  return true\n}\n","import { RimrafAsyncOptions, RimrafOptions } from './index.js'\nimport platform from './platform.js'\n\nconst version = process.env.__TESTING_RIMRAF_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\n\n/* c8 ignore start */\nconst [major = 0, minor = 0] = versArr.map(v => parseInt(v, 10))\n/* c8 ignore stop */\nconst hasNative = major > 14 || (major === 14 && minor >= 14)\n\n// we do NOT use native by default on Windows, because Node's native\n// rm implementation is less advanced.  Change this code if that changes.\nexport const useNative: (opt?: RimrafAsyncOptions) => boolean =\n  !hasNative || platform === 'win32' ?\n    () => false\n  : opt => !opt?.signal && !opt?.filter\nexport const useNativeSync: (opt?: RimrafOptions) => boolean =\n  !hasNative || platform === 'win32' ?\n    () => false\n  : opt => !opt?.signal && !opt?.filter\n","import { glob, globSync } from 'glob'\nimport {\n  optArg,\n  optArgSync,\n  RimrafAsyncOptions,\n  RimrafSyncOptions,\n} from './opt-arg.js'\nimport pathArg from './path-arg.js'\nimport { rimrafManual, rimrafManualSync } from './rimraf-manual.js'\nimport { rimrafMoveRemove, rimrafMoveRemoveSync } from './rimraf-move-remove.js'\nimport { rimrafNative, rimrafNativeSync } from './rimraf-native.js'\nimport { rimrafPosix, rimrafPosixSync } from './rimraf-posix.js'\nimport { rimrafWindows, rimrafWindowsSync } from './rimraf-windows.js'\nimport { useNative, useNativeSync } from './use-native.js'\n\nexport {\n  assertRimrafOptions,\n  isRimrafOptions,\n  type RimrafAsyncOptions,\n  type RimrafOptions,\n  type RimrafSyncOptions,\n} from './opt-arg.js'\n\nconst wrap =\n  (fn: (p: string, o: RimrafAsyncOptions) => Promise<boolean>) =>\n  async (\n    path: string | string[],\n    opt?: RimrafAsyncOptions,\n  ): Promise<boolean> => {\n    const options = optArg(opt)\n    if (options.glob) {\n      path = await glob(path, options.glob)\n    }\n    if (Array.isArray(path)) {\n      return !!(\n        await Promise.all(path.map(p => fn(pathArg(p, options), options)))\n      ).reduce((a, b) => a && b, true)\n    } else {\n      return !!(await fn(pathArg(path, options), options))\n    }\n  }\n\nconst wrapSync =\n  (fn: (p: string, o: RimrafSyncOptions) => boolean) =>\n  (path: string | string[], opt?: RimrafSyncOptions): boolean => {\n    const options = optArgSync(opt)\n    if (options.glob) {\n      path = globSync(path, options.glob)\n    }\n    if (Array.isArray(path)) {\n      return !!path\n        .map(p => fn(pathArg(p, options), options))\n        .reduce((a, b) => a && b, true)\n    } else {\n      return !!fn(pathArg(path, options), options)\n    }\n  }\n\nexport const nativeSync = wrapSync(rimrafNativeSync)\nexport const native = Object.assign(wrap(rimrafNative), { sync: nativeSync })\n\nexport const manualSync = wrapSync(rimrafManualSync)\nexport const manual = Object.assign(wrap(rimrafManual), { sync: manualSync })\n\nexport const windowsSync = wrapSync(rimrafWindowsSync)\nexport const windows = Object.assign(wrap(rimrafWindows), { sync: windowsSync })\n\nexport const posixSync = wrapSync(rimrafPosixSync)\nexport const posix = Object.assign(wrap(rimrafPosix), { sync: posixSync })\n\nexport const moveRemoveSync = wrapSync(rimrafMoveRemoveSync)\nexport const moveRemove = Object.assign(wrap(rimrafMoveRemove), {\n  sync: moveRemoveSync,\n})\n\nexport const rimrafSync = wrapSync((path, opt) =>\n  useNativeSync(opt) ?\n    rimrafNativeSync(path, opt)\n  : rimrafManualSync(path, opt),\n)\nexport const sync = rimrafSync\n\nconst rimraf_ = wrap((path, opt) =>\n  useNative(opt) ? rimrafNative(path, opt) : rimrafManual(path, opt),\n)\nexport const rimraf = Object.assign(rimraf_, {\n  rimraf: rimraf_,\n  sync: rimrafSync,\n  rimrafSync: rimrafSync,\n  manual,\n  manualSync,\n  native,\n  nativeSync,\n  posix,\n  posixSync,\n  windows,\n  windowsSync,\n  moveRemove,\n  moveRemoveSync,\n})\nrimraf.rimraf = rimraf\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport BnJs from 'bn.js';\n\nimport { DEFAULT_DECIMAL_UNITS, DEFAULT_MIN_PRECISION, DEFAULT_PRECISION } from './configs';\nimport type { FormatConfig } from './types';\n\ntype CompareResult = -1 | 0 | 1;\nexport type BNInput = number | string | number[] | Uint8Array | Buffer | BnJs;\n\ninterface BNHelper {\n  caller(v: BNInput, methodName: string): BN | boolean | CompareResult;\n  toHex: (bytesPadding?: number) => string;\n  toBytes: (bytesPadding?: number) => Uint8Array;\n  toJSON: () => string;\n}\ninterface BNInputOverrides {\n  add: (v: BNInput) => BN;\n  pow: (v: BNInput) => BN;\n  sub: (v: BNInput) => BN;\n  div: (v: BNInput) => BN;\n  mul: (v: BNInput) => BN;\n  mod: (v: BNInput) => BN;\n  divRound: (v: BNInput) => BN;\n  lt: (v: BNInput) => boolean;\n  lte: (v: BNInput) => boolean;\n  gt: (v: BNInput) => boolean;\n  gte: (v: BNInput) => boolean;\n  eq: (v: BNInput) => boolean;\n  cmp: (v: BNInput) => CompareResult;\n}\ninterface BNOverrides {\n  sqr: () => BN;\n  neg: () => BN;\n  abs: () => BN;\n  toTwos: (width: number) => BN;\n  fromTwos: (width: number) => BN;\n}\ninterface BNHiddenTypes {\n  mulTo: (num: BN, out: BN) => BN;\n  divmod: (num: BNInput, mode?: string, positive?: boolean) => { mod: BN; div: BN };\n}\ntype BNInputOverridesKeys = keyof BNInputOverrides;\n\nexport class BN extends BnJs implements BNInputOverrides, BNHiddenTypes, BNHelper, BNOverrides {\n  MAX_U64 = '0xFFFFFFFFFFFFFFFF';\n\n  constructor(value?: BNInput | null, base?: number | 'hex', endian?: BnJs.Endianness) {\n    let bnValue = value;\n    let bnBase = base;\n\n    if (BN.isBN(value)) {\n      bnValue = value.toArray();\n    }\n    // trim '0x' from hex strings as BN doesn't support it - https://github.com/ChainSafe/web3.js/issues/3847\n    else if (typeof value === 'string' && value.slice(0, 2) === '0x') {\n      bnValue = value.substring(2);\n      bnBase = base || 'hex';\n    }\n\n    super(bnValue == null ? 0 : bnValue, bnBase, endian);\n  }\n\n  // ANCHOR: HELPERS\n  // make sure we always include `0x` in hex strings\n  override toString(base?: number | 'hex', length?: number) {\n    const output = super.toString(base, length);\n\n    if (base === 16 || base === 'hex') {\n      return `0x${output}`;\n    }\n\n    return output;\n  }\n\n  toHex(bytesPadding?: number): string {\n    const bytes = bytesPadding || 0;\n    const bytesLength = bytes * 2;\n\n    if (this.isNeg()) {\n      throw new FuelError(ErrorCode.CONVERTING_FAILED, 'Cannot convert negative value to hex.');\n    }\n    if (bytesPadding && this.byteLength() > bytesPadding) {\n      throw new FuelError(\n        ErrorCode.CONVERTING_FAILED,\n        `Provided value ${this} is too large. It should fit within ${bytesPadding} bytes.`\n      );\n    }\n\n    return this.toString(16, bytesLength);\n  }\n\n  toBytes(bytesPadding?: number): Uint8Array {\n    if (this.isNeg()) {\n      throw new FuelError(ErrorCode.CONVERTING_FAILED, 'Cannot convert negative value to bytes.');\n    }\n\n    return Uint8Array.from(this.toArray(undefined, bytesPadding));\n  }\n\n  override toJSON(): string {\n    return this.toString(16);\n  }\n\n  override valueOf(): string {\n    return this.toString();\n  }\n\n  format(options?: FormatConfig): string {\n    const {\n      units = DEFAULT_DECIMAL_UNITS,\n      precision: initialPrecision = DEFAULT_PRECISION,\n      minPrecision: initialMinPrecision = DEFAULT_MIN_PRECISION,\n    } = options || {};\n\n    // If units is 0, return the whole number formatted with commas\n    if (units === 0) {\n      return this.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    // Adjust precision and minPrecision\n    // TODO: This really should throw an error because you can't have a precision less than the minPrecision but this would be a breaking change\n    const minPrecision =\n      initialMinPrecision > initialPrecision ? initialPrecision : initialMinPrecision;\n    const precision =\n      initialPrecision > initialMinPrecision ? initialPrecision : initialMinPrecision;\n\n    const formattedUnits = this.formatUnits(units);\n    const [integerPart, fractionalPart = ''] = formattedUnits.split('.');\n\n    const formattedInteger = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // If precision is 0, return only the integer part\n    if (precision === 0) {\n      return formattedInteger;\n    }\n\n    // Remove trailing zeros and apply precision\n    let formattedFractional = fractionalPart.replace(/0+$/, '');\n\n    // Always return the first non-zero number if it exceeds the precision and the integer part is zero\n    if (formattedFractional.length > precision) {\n      if (integerPart === '0') {\n        const firstNonZeroIndex = formattedFractional.search(/[1-9]/);\n        if (firstNonZeroIndex >= 0 && firstNonZeroIndex < precision) {\n          formattedFractional = formattedFractional.slice(0, precision);\n        } else {\n          formattedFractional = formattedFractional.slice(0, firstNonZeroIndex + 1);\n        }\n      } else {\n        formattedFractional = formattedFractional.slice(0, precision);\n      }\n    } else {\n      formattedFractional = formattedFractional.slice(0, precision);\n    }\n\n    // Ensure we meet the minimum precision\n    if (formattedFractional.length < minPrecision) {\n      formattedFractional = formattedFractional.padEnd(minPrecision, '0');\n    }\n\n    // If after removing trailing zeros, the fractional part is empty and minPrecision is 0, return only the integer part\n    if (formattedFractional === '' && minPrecision === 0) {\n      return formattedInteger;\n    }\n\n    // Only add the decimal point and fractional part if there's a fractional part\n    return formattedFractional ? `${formattedInteger}.${formattedFractional}` : formattedInteger;\n  }\n\n  formatUnits(units: number = DEFAULT_DECIMAL_UNITS): string {\n    const valueString = this.toString();\n    const valueLength = valueString.length;\n\n    if (valueLength <= units) {\n      const paddedZeros = '0'.repeat(units - valueLength);\n      return `0.${paddedZeros}${valueString}`;\n    }\n\n    const integerPart = valueString.slice(0, valueLength - units);\n    const fractionalPart = valueString.slice(valueLength - units);\n\n    return `${integerPart}.${fractionalPart}`;\n  }\n  // END ANCHOR: HELPERS\n\n  // ANCHOR: OVERRIDES to accept better inputs\n  override add(v: BNInput): BN {\n    return this.caller(v, 'add') as BN;\n  }\n\n  override pow(v: BNInput): BN {\n    return this.caller(v, 'pow') as BN;\n  }\n\n  override sub(v: BNInput): BN {\n    return this.caller(v, 'sub') as BN;\n  }\n\n  override div(v: BNInput): BN {\n    return this.caller(v, 'div') as BN;\n  }\n\n  override mul(v: BNInput): BN {\n    return this.caller(v, 'mul') as BN;\n  }\n\n  override mod(v: BNInput): BN {\n    return this.caller(v, 'mod') as BN;\n  }\n\n  override divRound(v: BNInput): BN {\n    return this.caller(v, 'divRound') as BN;\n  }\n\n  override lt(v: BNInput): boolean {\n    return this.caller(v, 'lt') as boolean;\n  }\n\n  override lte(v: BNInput): boolean {\n    return this.caller(v, 'lte') as boolean;\n  }\n\n  override gt(v: BNInput): boolean {\n    return this.caller(v, 'gt') as boolean;\n  }\n\n  override gte(v: BNInput): boolean {\n    return this.caller(v, 'gte') as boolean;\n  }\n\n  override eq(v: BNInput): boolean {\n    return this.caller(v, 'eq') as boolean;\n  }\n\n  override cmp(v: BNInput): CompareResult {\n    return this.caller(v, 'cmp') as CompareResult;\n  }\n  // END ANCHOR: OVERRIDES to accept better inputs\n\n  // ANCHOR: OVERRIDES to output our BN type\n  override sqr(): BN {\n    return new BN(super.sqr().toArray());\n  }\n\n  override neg(): BN {\n    return new BN(super.neg().toArray());\n  }\n\n  override abs(): BN {\n    return new BN(super.abs().toArray());\n  }\n\n  override toTwos(width: number): BN {\n    return new BN(super.toTwos(width).toArray());\n  }\n\n  override fromTwos(width: number): BN {\n    return new BN(super.fromTwos(width).toArray());\n  }\n  // END ANCHOR: OVERRIDES to output our BN type\n\n  // ANCHOR: OVERRIDES to avoid losing references\n  caller(v: BNInput, methodName: BNInputOverridesKeys): BN | boolean | CompareResult {\n    const output = super[methodName](new BN(v));\n\n    if (BN.isBN(output)) {\n      return new BN(output.toArray());\n    }\n\n    if (typeof output === 'boolean') {\n      return output as boolean;\n    }\n\n    return output as CompareResult;\n  }\n\n  override clone() {\n    return new BN(this.toArray());\n  }\n\n  mulTo(num: BN, out: BN) {\n    const output: BnJs = (new BnJs(this.toArray()) as BN).mulTo(num, out);\n\n    return new BN(output.toArray());\n  }\n\n  override egcd(p: BnJs) {\n    const { a, b, gcd } = new BnJs(this.toArray()).egcd(p);\n\n    return {\n      a: new BN(a.toArray()),\n      b: new BN(b.toArray()),\n      gcd: new BN(gcd.toArray()),\n    };\n  }\n\n  override divmod(num: BNInput, mode?: string, positive?: boolean): { mod: BN; div: BN } {\n    const { div, mod } = (new BnJs(this.toArray()) as BN).divmod(new BN(num), mode, positive);\n\n    return {\n      div: new BN(div?.toArray()),\n      mod: new BN(mod?.toArray()),\n    };\n  }\n\n  maxU64(): BN {\n    return this.gte(this.MAX_U64) ? new BN(this.MAX_U64) : this;\n  }\n\n  max(num: BNInput): BN {\n    return this.gte(num) ? new BN(num) : this;\n  }\n\n  normalizeZeroToOne(): BN {\n    return this.isZero() ? new BN(1) : this;\n  }\n  // END ANCHOR: OVERRIDES to avoid losing references\n}\n\n// functional shortcut to create BN\nexport const bn = (value?: BNInput | null, base?: number | 'hex', endian?: BnJs.Endianness) =>\n  new BN(value, base, endian);\n\nbn.parseUnits = (value: string, units: number = DEFAULT_DECIMAL_UNITS): BN => {\n  const valueToParse = value === '.' ? '0.' : value;\n  const [valueUnits = '0', valueDecimals = '0'] = valueToParse.split('.');\n  const length = valueDecimals.length;\n\n  if (units === 0) {\n    const valueWithoutDecimals = valueToParse.replace(',', '').split('.')[0];\n    return bn(valueWithoutDecimals);\n  }\n\n  if (length > units) {\n    throw new FuelError(\n      ErrorCode.CONVERTING_FAILED,\n      `Decimal can't have more than ${units} digits.`\n    );\n  }\n\n  const decimals = Array.from({ length: units }).fill('0');\n  decimals.splice(0, length, valueDecimals);\n  const amount = `${valueUnits.replaceAll(',', '')}${decimals.join('')}`;\n  return bn(amount);\n};\n","export const DEFAULT_PRECISION = 9;\nexport const DEFAULT_MIN_PRECISION = 3;\nexport const DEFAULT_DECIMAL_UNITS = 9;\n\n// Decimal units on the Fuel Network\nexport const DECIMAL_FUEL = 9;\n\n// Decimal units on the Ethereum network\nexport const DECIMAL_WEI = 18;\nexport const DECIMAL_KWEI = 15;\nexport const DECIMAL_MWEI = 12;\nexport const DECIMAL_GWEI = 9;\n","import { DEFAULT_PRECISION, DEFAULT_MIN_PRECISION } from './configs';\nimport type { ToFixedConfig } from './types';\n\nexport function toFixed(value?: string | number, options?: ToFixedConfig) {\n  const { precision = DEFAULT_PRECISION, minPrecision = DEFAULT_MIN_PRECISION } = options || {};\n\n  const [valueUnits = '0', valueDecimals = '0'] = String(value || '0.0').split('.');\n  const groupRegex = /(\\d)(?=(\\d{3})+\\b)/g;\n  const units = valueUnits.replace(groupRegex, '$1,');\n  let decimals = valueDecimals.slice(0, precision);\n\n  // strip traling zeros limited by minPrecision\n  if (minPrecision < precision) {\n    const trimmedDecimal = decimals.match(/.*[1-9]{1}/);\n    const lastNonZeroIndex = trimmedDecimal?.[0].length || 0;\n    const keepChars = Math.max(minPrecision, lastNonZeroIndex);\n    decimals = decimals.slice(0, keepChars);\n  }\n\n  const decimalPortion = decimals ? `.${decimals}` : '';\n  return `${units}${decimalPortion}`;\n}\n","import type { BNInput } from './bn';\nimport { bn } from './bn';\nimport type { FormatConfig } from './types';\n\n/**\n * Functional shortcuts\n */\n\n// Shortcut to bn(value).toNumber\nexport function toNumber(value: BNInput): number {\n  return bn(value).toNumber();\n}\n\n// Shortcut to bn(value).toHex\nexport function toHex(value: BNInput, bytesPadding?: number): string {\n  return bn(value).toHex(bytesPadding);\n}\n\n// Shortcut to bn(value).toBytes\nexport function toBytes(value: BNInput, bytesPadding?: number): Uint8Array {\n  return bn(value).toBytes(bytesPadding);\n}\n\n// Shortcut to bn.(value).formatUnits\nexport function formatUnits(value: BNInput, units?: number): string {\n  return bn(value).formatUnits(units);\n}\n\n// Shortcut to bn.(value).format\nexport function format(value: BNInput, options?: FormatConfig): string {\n  return bn(value).format(options);\n}\n","import type { BN } from './bn';\nimport { bn } from './bn';\nimport type { BigNumberish } from './types';\n\nexport function max(...numbers: Array<BigNumberish>): BN {\n  return numbers.reduce<BN>((prev, cur) => (bn(cur).gt(prev) ? bn(cur) : prev), bn(0));\n}\n\nexport function multiply(...numbers: Array<BigNumberish>): BN {\n  return bn(Math.ceil(numbers.reduce<BN>((a, b) => bn(a).mul(b), bn(1)).toNumber()));\n}\n","import { createRequire } from 'module';\nvar require = createRequire('/');\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\n// Mediocre shim\nvar Worker;\nvar workerAdd = \";var __w=require('worker_threads');__w.parentPort.on('message',function(m){onmessage({data:m})}),postMessage=function(m,t){__w.parentPort.postMessage(m,t)},close=process.exit;self=global\";\ntry {\n    Worker = require('worker_threads').Worker;\n}\ncatch (e) {\n}\nvar wk = Worker ? function (c, _, msg, transfer, cb) {\n    var done = false;\n    var w = new Worker(c + workerAdd, { eval: true })\n        .on('error', function (e) { return cb(e, null); })\n        .on('message', function (m) { return cb(null, m); })\n        .on('exit', function (c) {\n        if (c && !done)\n            cb(new Error('exited with code ' + c), null);\n    });\n    w.postMessage(msg, transfer);\n    w.terminate = function () {\n        done = true;\n        return Worker.prototype.terminate.call(w);\n    };\n    return w;\n} : function (_, __, ___, ____, cb) {\n    setImmediate(function () { return cb(new Error('async operations unsupported - update to Node 12+ (or Node 10-11 with the --experimental-worker CLI flag)'), null); });\n    var NOP = function () { };\n    return {\n        terminate: NOP,\n        postMessage: NOP\n    };\n};\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","export const capitalizeString = (str: string) => {\n  if (!str.length) {\n    return str;\n  }\n  return str[0].toUpperCase() + str.slice(1);\n};\n","/**\n * Function to take a byte array and split into chunks of a given size\n *\n * @param bytes - The byte array to chunk\n * @param chunkSize - The size of each chunk\n * @returns An array of byte arrays of a specified size\n */\nexport const chunkAndPadBytes = (bytes: Uint8Array, chunkSize: number): Uint8Array[] => {\n  const chunks: Uint8Array[] = [];\n\n  for (let offset = 0; offset < bytes.length; offset += chunkSize) {\n    const chunk = new Uint8Array(chunkSize);\n    chunk.set(bytes.slice(offset, offset + chunkSize));\n    chunks.push(chunk);\n  }\n\n  const lastChunk = chunks[chunks.length - 1];\n  const remainingBytes = bytes.length % chunkSize;\n  const paddedChunkLength = remainingBytes + ((8 - (remainingBytes % 8)) % 8);\n  const newChunk = lastChunk.slice(0, paddedChunkLength);\n  chunks[chunks.length - 1] = newChunk;\n\n  return chunks;\n};\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\n\nexport type BytesLike = Uint8Array | string;\n\n/**\n * Get a typed Uint8Array from a BytesLike object.\n *\n * @param value - the BytesLike data.\n * @param name - a display name for the error result.\n * @param copy - create a copy of the original data (if applicable).\n * @returns - a typed Uint8Array.\n */\nexport const arrayify = (value: BytesLike, name?: string, copy: boolean = true): Uint8Array => {\n  if (value instanceof Uint8Array) {\n    if (copy) {\n      return new Uint8Array(value);\n    }\n    return value;\n  }\n\n  if (typeof value === 'string' && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n    const result = new Uint8Array((value.length - 2) / 2);\n    let offset = 2;\n    for (let i = 0; i < result.length; i++) {\n      result[i] = parseInt(value.substring(offset, offset + 2), 16);\n      offset += 2;\n    }\n    return result;\n  }\n\n  const nameMessage = name ? ` ${name} -` : '';\n  const message = `invalid data:${nameMessage} ${value}\\nIf you are attempting to transform a hex value, please make sure it is being passed as a string and wrapped in quotes.`;\n  throw new FuelError(ErrorCode.INVALID_DATA, message);\n};\n","import { arrayify } from './arrayify';\nimport type { BytesLike } from './arrayify';\n\n/**\n * Concatenates multiple Uint8Arrays into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concatBytes = (\n  arrays: ReadonlyArray<Uint8Array> | ReadonlyArray<number[]>\n): Uint8Array => {\n  const byteArrays = arrays.map((array) => {\n    if (array instanceof Uint8Array) {\n      return array;\n    }\n    return Uint8Array.from(array);\n  });\n\n  const totalSize = byteArrays.reduce((accum, item) => accum + item.length, 0);\n  const concatenated = new Uint8Array(totalSize);\n\n  byteArrays.reduce((offset, object) => {\n    concatenated.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  return concatenated;\n};\n\n/**\n * Concatenates multiple BytesLike into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concat = (arrays: ReadonlyArray<BytesLike>): Uint8Array => {\n  const bytes = arrays.map((v) => arrayify(v));\n\n  return concatBytes(bytes);\n};\n","import { arrayify } from './arrayify';\nimport type { BytesLike } from './arrayify';\n\nconst HexCharacters: string = '0123456789abcdef';\n\n/**\n *  Returns a hex representation of the inputted bytes.\n */\nexport function hexlify(data: BytesLike): string {\n  const bytes = arrayify(data);\n\n  let result = '0x';\n  for (let i = 0; i < bytes.length; i++) {\n    const v = bytes[i];\n    result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n  }\n  return result;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\n/**\n * Converts `some.string-value` into `SomeStringValue`.\n *\n * Examples:\n *  my-simple.test —— MySimpleTest\n *  myFile.ts —— MyFileTs\n *  my-abi.json —— MyAbiJson\n */\nexport const normalizeString = (str: string): string => {\n  const transformations: ((s: string) => string)[] = [\n    (s) => s.replace(/\\s+/g, '-'), // spaces to -\n    (s) => s.replace(/\\./g, '-'), // dots to -\n    (s) => s.replace(/_/g, '-'), // underscore to -\n    (s) => s.replace(/-[a-z]/g, (match) => match.slice(-1).toUpperCase()), // delete '-' and capitalize the letter after them\n    (s) => s.replace(/-/g, ''), // delete any '-' left\n    (s) => s.replace(/^\\d+/, ''), // removes leading digits\n    (s) => s[0].toUpperCase() + s.slice(1), // capitalize first letter\n  ];\n\n  const output = transformations.reduce((s, t) => t(s), str);\n\n  if (output === '') {\n    const errMsg = `The provided string '${str}' results in an empty output after`.concat(\n      ` normalization, therefore, it can't normalize string.`\n    );\n    throw new FuelError(ErrorCode.PARSE_FAILED, errMsg);\n  }\n\n  return output;\n};\n","/**\n * Tai64 timestamp.\n */\ntype Tai64Timestamp = string;\n\n/**\n * This constant is used to calculate the offset between the Unix epoch and the TAI64 epoch.\n * It allows for a **rough** conversion between the two time formats.\n *\n * // Value expires on:  28 June 2024\n * {@link https://data.iana.org/time-zones/data/leap-seconds.list}\n * {@link https://github.com/hl2/tai64/blob/master/src/leapSeconds.ts}\n */\nconst TAI64_LEAP_SECONDS: number = 37;\n\n/**\n * Tai64 (Temps Atomique International) is a time format\n *\n * The offset between the Unix epoch and the TAI64 epoch.\n * The TAI64 epoch is 2^62 nanoseconds after the Unix epoch (+ the offset of \"leap seconds\" relevant to the date).\n *\n * {@link https://cr.yp.to/libtai/tai64.html}\n * {@link https://cr.yp.to/proto/tai64.txt}\n */\nconst TAI64_UNIX_OFFSET: bigint = BigInt(2 ** 62) + BigInt(TAI64_LEAP_SECONDS);\n\n/**\n * Converts milliseconds to seconds and vice versa.\n *\n * @param ms - milliseconds to convert\n * @returns seconds\n */\nconst msToSeconds = (ms: number): number => Math.floor(ms / 1000);\n\n/**\n * Converts seconds to milliseconds and vice versa.\n *\n * @param seconds - seconds to convert\n * @returns milliseconds\n */\nconst secondsToMs = (seconds: number): number => seconds * 1000;\n\n/**\n * Converts Tai64 (seconds) time units to UNIX (seconds) time units.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix seconds timestamp\n */\nconst tai64ToUnixSeconds = (tai64: Tai64Timestamp): number =>\n  Number(BigInt(tai64) - TAI64_UNIX_OFFSET);\n\n/**\n * Converts Unix (seconds) to Tai64 (seconds).\n *\n * @param unixSeconds - unix seconds timestamp\n * @returns Tai64 timestamp\n */\nconst unixSecondsToTai64 = (unixSeconds: number): string =>\n  String(BigInt(unixSeconds) + TAI64_UNIX_OFFSET);\n\n/**\n * Helper to convert Tai64 (seconds) time units to UNIX (milliseconds) time units and vice.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix milliseconds timestamp\n */\nconst tai64ToUnixMilliseconds = (tai64: Tai64Timestamp): number =>\n  secondsToMs(tai64ToUnixSeconds(tai64));\n\n/**\n * This class is used to represent a date and time in the Tai64 format.\n *\n * ```typescript\n * import { DateTime } from 'fuels';\n *\n * // Constants\n * const tai64 = '4611686020108779340';\n * const unixMilliseconds = 1681391398000;\n * const seconds = 1681391398;\n *\n * // Instantiation\n * let date: DateTime = DateTime.now();\n * date = DateTime.fromTai64(tai64);\n * date = DateTime.fromUnixMilliseconds(unixMilliseconds);\n * date = DateTime.fromUnixSeconds(seconds);\n *\n * // Utility functions\n * tai64.toTai64() // '4611686020108779340'\n * milliseconds.toUnixMilliseconds() // 1681391398000\n * seconds.toUnixSeconds() // 1681391398\n *\n * // All date methods are available\n * const now: Date = DateTime.now();\n * now.toISOString(); // '2023-04-13T13:09:58.000Z'\n * now.getTime(); // 1681391398000\n * ```\n */\nexport class DateTime extends Date implements Date {\n  static TAI64_NULL: Tai64Timestamp = '';\n\n  /**\n   * Generates a new DateTime instance from a Tai64 timestamp.\n   *\n   * @param tai64 - Tai64 timestamp\n   * @returns a new DateTime instance\n   */\n  static fromTai64(tai64: Tai64Timestamp): DateTime {\n    return new DateTime(tai64ToUnixMilliseconds(tai64));\n  }\n\n  /**\n   * @param unixMilliseconds - unix milliseconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixMilliseconds(unixMilliseconds: number): DateTime {\n    return new DateTime(unixMilliseconds);\n  }\n\n  /**\n   * @param unixSeconds - unix seconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixSeconds(unixSeconds: number): DateTime {\n    return new DateTime(secondsToMs(unixSeconds));\n  }\n\n  /**\n   * Hide the constructor to prevent direct instantiation.\n   */\n  private constructor(date: Date | number | string) {\n    super(date);\n  }\n\n  /**\n   * Returns the Tai64 timestamp.\n   *\n   * @returns the Tai64 timestamp\n   */\n  toTai64(): Tai64Timestamp {\n    return unixSecondsToTai64(this.toUnixSeconds());\n  }\n\n  /**\n   * @returns the unix milliseconds timestamp\n   */\n  toUnixMilliseconds(): number {\n    return this.getTime();\n  }\n\n  /**\n   * @returns the unix seconds timestamp\n   */\n  toUnixSeconds(): number {\n    return msToSeconds(this.getTime());\n  }\n}\n","export function sleep(time: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, time);\n  });\n}\n","{\n  \"chain_name\": \"local_testnet\",\n  \"consensus_parameters\": {\n    \"V2\": {\n      \"tx_params\": {\n        \"V1\": {\n          \"max_inputs\": 255,\n          \"max_outputs\": 255,\n          \"max_witnesses\": 255,\n          \"max_gas_per_tx\": 30000000,\n          \"max_size\": 112640,\n          \"max_bytecode_subsections\": 256\n        }\n      },\n      \"predicate_params\": {\n        \"V1\": {\n          \"max_predicate_length\": 24576,\n          \"max_predicate_data_length\": 24576,\n          \"max_message_data_length\": 102400,\n          \"max_gas_per_predicate\": 1000000\n        }\n      },\n      \"script_params\": {\n        \"V1\": {\n          \"max_script_length\": 102400,\n          \"max_script_data_length\": 102400\n        }\n      },\n      \"contract_params\": {\n        \"V1\": {\n          \"contract_max_size\": 112640,\n          \"max_storage_slots\": 1760\n        }\n      },\n      \"fee_params\": {\n        \"V1\": {\n          \"gas_price_factor\": 1150000,\n          \"gas_per_byte\": 63\n        }\n      },\n      \"chain_id\": 0,\n      \"gas_costs\": {\n        \"V4\": {\n          \"add\": 2,\n          \"addi\": 2,\n          \"and\": 2,\n          \"andi\": 2,\n          \"bal\": 274,\n          \"bhei\": 2,\n          \"bhsh\": 2,\n          \"burn\": 7566,\n          \"cb\": 2,\n          \"cfsi\": 2,\n          \"div\": 2,\n          \"divi\": 2,\n          \"eck1\": 1489,\n          \"ecr1\": 20513,\n          \"eq\": 2,\n          \"exp\": 2,\n          \"expi\": 2,\n          \"flag\": 2,\n          \"gm\": 2,\n          \"gt\": 2,\n          \"gtf\": 3,\n          \"ji\": 2,\n          \"jmp\": 2,\n          \"jne\": 2,\n          \"jnei\": 2,\n          \"jnzi\": 2,\n          \"jmpf\": 2,\n          \"jmpb\": 2,\n          \"jnzf\": 2,\n          \"jnzb\": 2,\n          \"jnef\": 2,\n          \"jneb\": 2,\n          \"lb\": 2,\n          \"log\": 80,\n          \"lt\": 2,\n          \"lw\": 2,\n          \"mint\": 6566,\n          \"mlog\": 2,\n          \"mod\": 2,\n          \"modi\": 2,\n          \"move\": 2,\n          \"movi\": 1,\n          \"mroo\": 3,\n          \"mul\": 2,\n          \"muli\": 2,\n          \"mldv\": 3,\n          \"noop\": 1,\n          \"not\": 2,\n          \"or\": 1,\n          \"ori\": 2,\n          \"poph\": 2,\n          \"popl\": 2,\n          \"pshh\": 5,\n          \"pshl\": 5,\n          \"ret_contract\": 43,\n          \"rvrt_contract\": 39,\n          \"sb\": 2,\n          \"sll\": 2,\n          \"slli\": 2,\n          \"srl\": 2,\n          \"srli\": 2,\n          \"srw\": 237,\n          \"sub\": 2,\n          \"subi\": 2,\n          \"sw\": 2,\n          \"sww\": 5708,\n          \"time\": 106,\n          \"tr\": 9253,\n          \"tro\": 7199,\n          \"wdcm\": 2,\n          \"wqcm\": 2,\n          \"wdop\": 2,\n          \"wqop\": 3,\n          \"wdml\": 3,\n          \"wqml\": 3,\n          \"wddv\": 3,\n          \"wqdv\": 4,\n          \"wdmd\": 6,\n          \"wqmd\": 9,\n          \"wdam\": 6,\n          \"wqam\": 6,\n          \"wdmm\": 6,\n          \"wqmm\": 6,\n          \"xor\": 2,\n          \"xori\": 2,\n          \"aloc\": {\n            \"LightOperation\": {\n              \"base\": 2,\n              \"units_per_gas\": 35\n            }\n          },\n          \"bsiz\": {\n            \"LightOperation\": {\n              \"base\": 25,\n              \"units_per_gas\": 564\n            }\n          },\n          \"bldd\": {\n            \"LightOperation\": {\n              \"base\": 33,\n              \"units_per_gas\": 130\n            }\n          },\n          \"cfe\": {\n            \"LightOperation\": {\n              \"base\": 10,\n              \"units_per_gas\": 62\n            }\n          },\n          \"cfei\": {\n            \"LightOperation\": {\n              \"base\": 10,\n              \"units_per_gas\": 66\n            }\n          },\n          \"call\": {\n            \"LightOperation\": {\n              \"base\": 6934,\n              \"units_per_gas\": 14\n            }\n          },\n          \"ccp\": {\n            \"LightOperation\": {\n              \"base\": 21,\n              \"units_per_gas\": 155\n            }\n          },\n          \"croo\": {\n            \"LightOperation\": {\n              \"base\": 69,\n              \"units_per_gas\": 4\n            }\n          },\n          \"csiz\": {\n            \"LightOperation\": {\n              \"base\": 25,\n              \"units_per_gas\": 580\n            }\n          },\n          \"ed19\": {\n            \"LightOperation\": {\n              \"base\": 3232,\n              \"units_per_gas\": 7\n            }\n          },\n          \"k256\": {\n            \"LightOperation\": {\n              \"base\": 21,\n              \"units_per_gas\": 6\n            }\n          },\n          \"ldc\": {\n            \"LightOperation\": {\n              \"base\": 84,\n              \"units_per_gas\": 113\n            }\n          },\n          \"logd\": {\n            \"LightOperation\": {\n              \"base\": 278,\n              \"units_per_gas\": 5\n            }\n          },\n          \"mcl\": {\n            \"LightOperation\": {\n              \"base\": 2,\n              \"units_per_gas\": 1282\n            }\n          },\n          \"mcli\": {\n            \"LightOperation\": {\n              \"base\": 2,\n              \"units_per_gas\": 1250\n            }\n          },\n          \"mcp\": {\n            \"LightOperation\": {\n              \"base\": 3,\n              \"units_per_gas\": 385\n            }\n          },\n          \"mcpi\": {\n            \"LightOperation\": {\n              \"base\": 7,\n              \"units_per_gas\": 585\n            }\n          },\n          \"meq\": {\n            \"LightOperation\": {\n              \"base\": 2,\n              \"units_per_gas\": 1234\n            }\n          },\n          \"retd_contract\": {\n            \"LightOperation\": {\n              \"base\": 227,\n              \"units_per_gas\": 5\n            }\n          },\n          \"s256\": {\n            \"LightOperation\": {\n              \"base\": 25,\n              \"units_per_gas\": 5\n            }\n          },\n          \"scwq\": {\n            \"HeavyOperation\": {\n              \"base\": 5666,\n              \"gas_per_unit\": 6628\n            }\n          },\n          \"smo\": {\n            \"LightOperation\": {\n              \"base\": 14635,\n              \"units_per_gas\": 3\n            }\n          },\n          \"srwq\": {\n            \"HeavyOperation\": {\n              \"base\": 245,\n              \"gas_per_unit\": 243\n            }\n          },\n          \"swwq\": {\n            \"HeavyOperation\": {\n              \"base\": 5661,\n              \"gas_per_unit\": 5776\n            }\n          },\n          \"contract_root\": {\n            \"LightOperation\": {\n              \"base\": 24,\n              \"units_per_gas\": 3\n            }\n          },\n          \"state_root\": {\n            \"HeavyOperation\": {\n              \"base\": 189,\n              \"gas_per_unit\": 96\n            }\n          },\n          \"new_storage_per_byte\": 63,\n          \"vm_initialization\": {\n            \"LightOperation\": {\n              \"base\": 3127,\n              \"units_per_gas\": 61\n            }\n          }\n        }\n      },\n      \"base_asset_id\": \"0xf8f8b6283d7fa5b672b530cbb84fcccb4ff8dc40f8176ef4544ddb1f1952ad07\",\n      \"block_gas_limit\": 30000000,\n      \"block_transaction_size_limit\": 260096,\n      \"privileged_address\": \"0000000000000000000000000000000000000000000000000000000000000000\"\n    }\n  },\n  \"consensus\": {\n    \"PoA\": {\n      \"signing_key\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\"\n    }\n  }\n}\n","{\n  \"chain_config\": \"chainConfig.json\",\n  \"table_encoding\": {\n    \"Json\": {\n      \"filepath\": \"stateConfig.json\"\n    }\n  }\n}\n","{\n  \"coins\": [],\n  \"messages\": [],\n  \"contracts\": [],\n  \"blobs\": [],\n  \"block_height\": 0,\n  \"da_block_height\": 0\n}\n","import chainConfigJson from './defaultSnapshots/chainConfig.json';\nimport metadataJson from './defaultSnapshots/metadata.json';\nimport stateConfigJson from './defaultSnapshots/stateConfig.json';\nimport type { SnapshotConfigs } from './types';\n\nexport const defaultSnapshotConfigs: SnapshotConfigs = {\n  chainConfig: chainConfigJson,\n  metadata: metadataJson,\n  stateConfig: stateConfigJson,\n};\n\nexport const defaultConsensusKey =\n  '0xa449b1ffee0e2205fa924c6740cc48b3b473aa28587df6dab12abc245d1f5298';\n","export function isDefined<T>(value: T | undefined): value is T {\n  return value !== undefined;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\n\nimport { arrayify } from './arrayify';\nimport type { BytesLike } from './arrayify';\n\nconst BN_0 = bn(0);\nconst BN_58 = bn(58);\nconst Alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nlet Lookup: null | Record<string, BN> = null;\n\nfunction getAlpha(letter: string): BN {\n  if (Lookup == null) {\n    Lookup = {};\n    for (let i = 0; i < Alphabet.length; i++) {\n      Lookup[Alphabet[i]] = bn(i);\n    }\n  }\n  const result = Lookup[letter];\n  if (result == null) {\n    throw new FuelError(ErrorCode.INVALID_DATA, `invalid base58 value ${letter}`);\n  }\n  return bn(result);\n}\n\n/**\n *  Encode value as a Base58-encoded string.\n */\nexport function encodeBase58(_value: BytesLike): string {\n  const bytes = arrayify(_value);\n\n  let value = bn(bytes);\n  let result = '';\n  while (value.gt(BN_0)) {\n    result = Alphabet[Number(value.mod(BN_58))] + result;\n    value = value.div(BN_58);\n  }\n\n  // Account for leading padding zeros\n  for (let i = 0; i < bytes.length; i++) {\n    if (bytes[i]) {\n      break;\n    }\n    result = Alphabet[0] + result;\n  }\n\n  return result;\n}\n\nexport function decodeBase58(value: string): BN {\n  let result = BN_0;\n  for (let i = 0; i < value.length; i++) {\n    result = result.mul(BN_58);\n    result = result.add(getAlpha(value[i].toString()));\n  }\n  return result;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { arrayify } from './arrayify';\nimport type { BytesLike } from './arrayify';\nimport { hexlify } from './hexlify';\n\n/**\n *  Returns a hex string by slicing data from the start offset to the end offset.\n *\n * @param data - the data to be sliced.\n * @param start - the start offset (default: 0).\n * @param end - the end offset (default: length of data).\n * @returns - a sliced hex string from start to end.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n  const bytes = arrayify(data);\n  if (end != null && end > bytes.length) {\n    throw new FuelError(ErrorCode.INVALID_DATA, 'cannot slice beyond data bounds');\n  }\n  return hexlify(bytes.slice(start == null ? 0 : start, end == null ? bytes.length : end));\n}\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\n\n/**\n *  Returns the UTF-8 byte representation of str.\n *\n *  If form is disabled, the string is not normalized.\n * @param stri - the string to convert to UTF-8 bytes.\n * @param form - whether to normalize the string.\n * @returns - the UTF-8 byte representation of str.\n */\nexport function toUtf8Bytes(stri: string, form = true): Uint8Array {\n  let str = stri;\n\n  if (form) {\n    str = stri.normalize('NFC');\n  }\n\n  const result: Array<number> = [];\n\n  for (let i = 0; i < str.length; i += 1) {\n    const c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push((c >> 6) | 0xc0);\n      result.push((c & 0x3f) | 0x80);\n    } else if ((c & 0xfc00) === 0xd800) {\n      i += 1;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new FuelError(\n          ErrorCode.INVALID_INPUT_PARAMETERS,\n          'Invalid UTF-8 in the input string.'\n        );\n      }\n\n      // Surrogate Pair\n      const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push((pair >> 18) | 0xf0);\n      result.push(((pair >> 12) & 0x3f) | 0x80);\n      result.push(((pair >> 6) & 0x3f) | 0x80);\n      result.push((pair & 0x3f) | 0x80);\n    } else {\n      result.push((c >> 12) | 0xe0);\n      result.push(((c >> 6) & 0x3f) | 0x80);\n      result.push((c & 0x3f) | 0x80);\n    }\n  }\n\n  return new Uint8Array(result);\n}\n","import { arrayify } from './arrayify';\nimport type { BytesLike } from './arrayify';\n\n/**\n *  These errors are logged when decoding a UTF-8 string fails.\n *\n *  `\"UNEXPECTED_CONTINUE\"` - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  `\"BAD_PREFIX\"` - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  `\"OVERRUN\"` - the string is too short to process the expected\n *  codepoint length.\n *\n *  `\"MISSING_CONTINUE\"` - a missing continuation byte was expected but\n *  not found. The offset indicates the index the continuation byte\n *  was expected at.\n *\n *  `\"OUT_OF_RANGE\"` - the computed code point is outside the range\n *  for UTF-8. The badCodepoint indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  `\"UTF16_SURROGATE\"` - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The badCodepoint is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  `\"OVERLONG\"` - the string is an overlong representation. The\n *   badCodepoint indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\ntype Utf8ErrorReason =\n  | 'UNEXPECTED_CONTINUE'\n  | 'BAD_PREFIX'\n  | 'OVERRUN'\n  | 'MISSING_CONTINUE'\n  | 'OUT_OF_RANGE'\n  | 'UTF16_SURROGATE'\n  | 'OVERLONG';\n\nfunction onError(\n  reason: Utf8ErrorReason,\n  offset: number,\n  bytes: Uint8Array,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  output: Array<number>,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  badCodepoint?: number\n): number {\n  // #TODO: Log these as warnings after https://github.com/FuelLabs/fuels-ts/issues/2298 is implemented.\n  // eslint-disable-next-line no-console\n  console.log(`invalid codepoint at offset ${offset}; ${reason}, bytes: ${bytes}`);\n  return offset;\n}\n\nfunction helper(codePoints: Array<number>): string {\n  return codePoints\n    .map((codePoint) => {\n      if (codePoint <= 0xffff) {\n        return String.fromCharCode(codePoint);\n      }\n      // eslint-disable-next-line no-param-reassign\n      codePoint -= 0x10000;\n      return String.fromCharCode(\n        ((codePoint >> 10) & 0x3ff) + 0xd800,\n        (codePoint & 0x3ff) + 0xdc00\n      );\n    })\n    .join('');\n}\n\nfunction getUtf8CodePoints(_bytes: BytesLike): Array<number> {\n  const bytes = arrayify(_bytes, 'bytes');\n\n  const result: Array<number> = [];\n  let i = 0;\n\n  // Invalid bytes are ignored\n  while (i < bytes.length) {\n    const c = bytes[i++];\n\n    // 0xxx xxxx\n    if (c >> 7 === 0) {\n      result.push(c);\n      continue;\n    }\n\n    // Multibyte; how many bytes left for this character?\n    let extraLength: null | number = null;\n    let overlongMask: null | number = null;\n\n    // 110x xxxx 10xx xxxx\n    if ((c & 0xe0) === 0xc0) {\n      extraLength = 1;\n      overlongMask = 0x7f;\n\n      // 1110 xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf0) === 0xe0) {\n      extraLength = 2;\n      overlongMask = 0x7ff;\n\n      // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf8) === 0xf0) {\n      extraLength = 3;\n      overlongMask = 0xffff;\n    } else {\n      if ((c & 0xc0) === 0x80) {\n        i += onError('UNEXPECTED_CONTINUE', i - 1, bytes, result);\n      } else {\n        i += onError('BAD_PREFIX', i - 1, bytes, result);\n      }\n      continue;\n    }\n\n    // Do we have enough bytes in our data?\n    if (i - 1 + extraLength >= bytes.length) {\n      i += onError('OVERRUN', i - 1, bytes, result);\n      continue;\n    }\n\n    // Remove the length prefix from the char\n    let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n    for (let j = 0; j < extraLength; j++) {\n      const nextChar = bytes[i];\n\n      // Invalid continuation byte\n      if ((nextChar & 0xc0) !== 0x80) {\n        i += onError('MISSING_CONTINUE', i, bytes, result);\n        res = null;\n        break;\n      }\n\n      res = (res << 6) | (nextChar & 0x3f);\n      i++;\n    }\n\n    // See above loop for invalid continuation byte\n    if (res === null) {\n      continue;\n    }\n\n    // Maximum code point\n    if (res > 0x10ffff) {\n      i += onError('OUT_OF_RANGE', i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    // Reserved for UTF-16 surrogate halves\n    if (res >= 0xd800 && res <= 0xdfff) {\n      i += onError('UTF16_SURROGATE', i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    // Check for overlong sequences (more bytes than needed)\n    if (res <= overlongMask) {\n      i += onError('OVERLONG', i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    result.push(res);\n  }\n\n  return result;\n}\n\n/**\n *  Returns the string represented by the UTF-8 data bytes.\n *\n * @param bytes - the UTF-8 data bytes\n * @returns the string represented by the UTF-8 data bytes\n */\n\nexport function toUtf8String(bytes: BytesLike): string {\n  return helper(getUtf8CodePoints(bytes));\n}\n","import { gzipSync, gunzipSync } from 'fflate';\n\nimport { arrayify } from './arrayify';\nimport type { BytesLike } from './arrayify';\n\nexport const compressBytecode = (bytecodeAsBinary?: BytesLike) => {\n  if (!bytecodeAsBinary) {\n    return '';\n  }\n\n  const bytecodeCompressBytes = arrayify(bytecodeAsBinary);\n  const bytecodeCompressGzipped = gzipSync(bytecodeCompressBytes, { mtime: 0 });\n  const bytecodeCompressBinary = String.fromCharCode.apply(\n    null,\n    new Uint8Array(bytecodeCompressGzipped) as unknown as number[]\n  );\n  const bytecodeCompressEncoded = btoa(bytecodeCompressBinary);\n\n  return bytecodeCompressEncoded;\n};\n\nexport const decompressBytecode = (bytecodeAsBase64: string) => {\n  const bytecodeDecompressBinary = atob(bytecodeAsBase64);\n  const bytecodeDecompressDecoded = new Uint8Array(bytecodeDecompressBinary.length).map((_, i) =>\n    bytecodeDecompressBinary.charCodeAt(i)\n  );\n  const bytecodeDecompressBytes = gunzipSync(bytecodeDecompressDecoded);\n\n  return bytecodeDecompressBytes;\n};\n","export * from './utils/capitalizeString';\nexport * from './utils/chunkAndPadBytes';\nexport * from './utils/concat';\nexport * from './utils/arrayify';\nexport * from './utils/hexlify';\nexport * from './utils/normalizeString';\nexport * from './utils/date-time';\nexport * from './utils/types';\nexport * from './utils/sleep';\nexport * from './utils/defaultSnapshotConfigs';\nexport * from './utils/isDefined';\nexport * from './utils/base58';\nexport * from './utils/dataSlice';\nexport * from './utils/toUtf8Bytes';\nexport * from './utils/toUtf8String';\nexport * from './utils/bytecode';\n\n/**\n * Used to verify that a switch statement exhausts all variants.\n */\nexport function assertUnreachable(_x: never): never {\n  throw new Error(\"Didn't expect to get here\");\n}\n","import type { ITypeAttributes } from '../../types/interfaces/IType';\nimport type { JsonAbiType } from '../../types/interfaces/JsonAbi';\n\nexport class AType {\n  public rawAbiType: JsonAbiType;\n  public attributes: ITypeAttributes;\n  public requiredFuelsMembersImports: string[];\n\n  constructor(params: { rawAbiType: JsonAbiType }) {\n    this.rawAbiType = params.rawAbiType;\n    this.attributes = {\n      inputLabel: 'unknown',\n      outputLabel: 'unknown',\n    };\n    this.requiredFuelsMembersImports = [];\n  }\n}\n","import type { JsonAbiType } from '../..';\nimport type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class EmptyType extends AType implements IType {\n  public static swayType = '()';\n\n  public name = 'empty';\n\n  static MATCH_REGEX: RegExp = /^\\(\\)$/m;\n\n  constructor(params: { rawAbiType: JsonAbiType }) {\n    super(params);\n    this.attributes = {\n      inputLabel: 'undefined',\n      outputLabel: 'void',\n    };\n  }\n\n  static isSuitableFor(params: { type: string }) {\n    return EmptyType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class OptionType extends AType implements IType {\n  public static swayType = 'enum Option';\n\n  public name = 'option';\n\n  static MATCH_REGEX: RegExp = /^enum (std::option::)?Option$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return OptionType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: `Option`,\n      outputLabel: `Option`,\n    };\n    return this.attributes;\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { IType } from '../types/interfaces/IType';\n\nexport function findType(params: { types: IType[]; typeId: number }) {\n  const { types, typeId } = params;\n\n  const foundType = types.find(({ rawAbiType: { typeId: tid } }) => tid === typeId);\n\n  if (!foundType) {\n    throw new FuelError(ErrorCode.TYPE_ID_NOT_FOUND, `Type ID not found: ${typeId}.`);\n  }\n\n  // ensure type attributes is always parsed\n  foundType.parseComponentsAttributes({ types });\n\n  return foundType;\n}\n","import { EmptyType } from '../abi/types/EmptyType';\nimport { OptionType } from '../abi/types/OptionType';\nimport type { IType } from '../types/interfaces/IType';\nimport type { JsonAbiArgument } from '../types/interfaces/JsonAbi';\n\nimport { findType } from './findType';\n\nexport type FunctionInput<TArg extends JsonAbiArgument = JsonAbiArgument> = TArg & {\n  isOptional: boolean;\n};\n\nexport const getFunctionInputs = (params: {\n  types: IType[];\n  inputs: readonly JsonAbiArgument[];\n}): Array<FunctionInput> => {\n  const { types, inputs } = params;\n  let isMandatory = false;\n\n  return inputs.reduceRight((result, input) => {\n    const type = findType({ types, typeId: input.type });\n    const isTypeMandatory =\n      !EmptyType.isSuitableFor({ type: type.rawAbiType.type }) &&\n      !OptionType.isSuitableFor({ type: type.rawAbiType.type });\n\n    isMandatory = isMandatory || isTypeMandatory;\n    return [{ ...input, isOptional: !isMandatory }, ...result];\n  }, [] as FunctionInput[]);\n};\n","import type { TargetEnum } from '../types/enums/TargetEnum';\nimport type { IType } from '../types/interfaces/IType';\nimport type { JsonAbiArgument } from '../types/interfaces/JsonAbi';\n\nimport { findType } from './findType';\n\n/*\n  Recursively parses the given `typeArguments` node\n*/\nexport function parseTypeArguments(params: {\n  types: IType[];\n  target: TargetEnum;\n  typeArguments: readonly JsonAbiArgument[];\n  parentTypeId?: number;\n}): string {\n  const { types, typeArguments, parentTypeId, target } = params;\n\n  const attributeKey: 'inputLabel' | 'outputLabel' = `${target}Label`;\n\n  const buffer: string[] = [];\n\n  let parentType: IType | undefined;\n  let parentLabel: string | undefined;\n\n  if (parentTypeId !== undefined) {\n    parentType = findType({ types, typeId: parentTypeId });\n    parentLabel = parentType.attributes[attributeKey];\n  }\n\n  // loop through all `typeArgument` items\n  typeArguments.forEach((typeArgument) => {\n    const currentTypeId = typeArgument.type;\n\n    const currentType = findType({ types, typeId: currentTypeId });\n    const currentLabel = currentType.attributes[attributeKey];\n\n    if (typeArgument.typeArguments) {\n      // recursively process nested `typeArguments`\n      const nestedParsed = parseTypeArguments({\n        types,\n        target,\n        parentTypeId: typeArgument.type,\n        typeArguments: typeArgument.typeArguments as JsonAbiArgument[],\n      });\n\n      buffer.push(nestedParsed);\n    } else {\n      buffer.push(`${currentLabel}`);\n    }\n  });\n\n  let output = buffer.join(', ');\n\n  if (parentLabel) {\n    output = `${parentLabel}<${output}>`;\n  }\n\n  return output;\n}\n","import { TargetEnum } from '../types/enums/TargetEnum';\nimport type { IType } from '../types/interfaces/IType';\nimport type { JsonAbiArgument } from '../types/interfaces/JsonAbi';\n\nimport { findType } from './findType';\nimport { parseTypeArguments } from './parseTypeArguments';\n\nexport function resolveInputLabel(\n  types: IType[],\n  typeId: number,\n  typeArguments: JsonAbiArgument['typeArguments']\n) {\n  const type = findType({ types, typeId });\n\n  let typeDecl: string;\n\n  if (typeArguments?.length) {\n    // recursively process child `typeArguments`\n    typeDecl = parseTypeArguments({\n      types,\n      target: TargetEnum.INPUT,\n      parentTypeId: typeId,\n      typeArguments,\n    });\n  } else {\n    // or just collect type declaration\n    typeDecl = type.attributes.inputLabel;\n  }\n\n  return typeDecl;\n}\n","import type { IFunction, JsonAbiFunction, IFunctionAttributes } from '../../index';\nimport { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { getFunctionInputs } from '../../utils/getFunctionInputs';\nimport { resolveInputLabel } from '../../utils/getTypeDeclaration';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nexport class Function implements IFunction {\n  public name: string;\n  public types: IType[];\n  public rawAbiFunction: JsonAbiFunction;\n  public attributes: IFunctionAttributes;\n\n  constructor(params: { types: IType[]; rawAbiFunction: JsonAbiFunction }) {\n    this.rawAbiFunction = params.rawAbiFunction;\n    this.types = params.types;\n    this.name = params.rawAbiFunction.name;\n\n    this.attributes = {\n      inputs: this.bundleInputTypes(),\n      output: this.bundleOutputTypes(),\n      prefixedInputs: this.bundleInputTypes(true),\n    };\n  }\n\n  bundleInputTypes(shouldPrefixParams: boolean = false) {\n    const { types } = this;\n\n    // loop through all mandatory inputs\n    const inputs = getFunctionInputs({ types, inputs: this.rawAbiFunction.inputs }).map(\n      ({ isOptional, ...input }) => {\n        const { name, type: typeId, typeArguments } = input;\n\n        const typeDecl = resolveInputLabel(types, typeId, typeArguments);\n\n        // assemble it in `[key: string]: <Type>` fashion\n        if (shouldPrefixParams) {\n          const optionalSuffix = isOptional ? '?' : '';\n          return `${name}${optionalSuffix}: ${typeDecl}`;\n        }\n\n        return typeDecl;\n      }\n    );\n\n    return inputs.join(', ');\n  }\n\n  bundleOutputTypes() {\n    return parseTypeArguments({\n      types: this.types,\n      target: TargetEnum.OUTPUT,\n      typeArguments: [this.rawAbiFunction.output],\n    });\n  }\n\n  getDeclaration() {\n    const { name } = this;\n    const { prefixedInputs, output } = this.attributes;\n    const decl = `${name}: InvokeFunction<[${prefixedInputs}], ${output}>`;\n    return decl;\n  }\n}\n","import { Function } from '../abi/functions/Function';\nimport type { IType } from '../types/interfaces/IType';\nimport type { JsonAbiFunction } from '../types/interfaces/JsonAbi';\n\nexport function makeFunction(params: { types: IType[]; rawAbiFunction: JsonAbiFunction }) {\n  const { types, rawAbiFunction } = params;\n  return new Function({ types, rawAbiFunction });\n}\n","import type { IFunction } from '../types/interfaces/IFunction';\nimport type { IType } from '../types/interfaces/IType';\nimport type { JsonAbiFunction } from '../types/interfaces/JsonAbi';\n\nimport { makeFunction } from './makeFunction';\n\nexport function parseFunctions(params: {\n  types: IType[];\n  rawAbiFunctions: readonly JsonAbiFunction[];\n}) {\n  const { types, rawAbiFunctions } = params;\n  const functions: IFunction[] = rawAbiFunctions.map((rawAbiFunction) =>\n    makeFunction({ types, rawAbiFunction })\n  );\n  return functions;\n}\n","import { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { findType } from '../../utils/findType';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nimport { AType } from './AType';\n\nexport class ArrayType extends AType implements IType {\n  // Note: the array length expressed in '; 2]' could be any length\n  public static swayType = '[_; 2]';\n\n  public name = 'array';\n\n  static MATCH_REGEX: RegExp = /^\\[_; ([0-9]+)\\]$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return ArrayType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(params: { types: IType[] }) {\n    const { types } = params;\n    const { type } = this.rawAbiType;\n\n    // array length will be used to generated a fixed-length array type\n    const arrayLen = Number(type.match(ArrayType.MATCH_REGEX)?.[1]);\n\n    const inputs: string[] = [];\n    const outputs: string[] = [];\n\n    this.rawAbiType.components?.forEach((component) => {\n      const { type: typeId, typeArguments } = component;\n\n      if (!typeArguments) {\n        // if component has no type arguments, read its attributes and voilà\n        const { attributes } = findType({ types, typeId });\n\n        inputs.push(attributes.inputLabel);\n        outputs.push(attributes.outputLabel);\n      } else {\n        // otherwise process child `typeArguments` recursively\n        const inputLabel = parseTypeArguments({\n          types,\n          typeArguments,\n          parentTypeId: typeId,\n          target: TargetEnum.INPUT,\n        });\n\n        const outputLabel = parseTypeArguments({\n          types,\n          typeArguments,\n          parentTypeId: typeId,\n          target: TargetEnum.OUTPUT,\n        });\n\n        inputs.push(inputLabel);\n        outputs.push(outputLabel);\n      }\n    });\n\n    // fixed-length array, based on `arrayLen`\n    const inputTypes = Array(arrayLen).fill(inputs[0]).join(', ');\n    const outputTypes = Array(arrayLen).fill(outputs[0]).join(', ');\n\n    this.attributes = {\n      inputLabel: `[${inputTypes}]`,\n      outputLabel: `[${outputTypes}]`,\n    };\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class StrType extends AType implements IType {\n  // Note: the str length expressed in '[3]' could be any length\n  public static swayType = 'str[3]';\n\n  public name = 'str';\n\n  static MATCH_REGEX: RegExp = /^str\\[(.+)\\]$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return StrType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: 'string',\n      outputLabel: 'string',\n    };\n    return this.attributes;\n  }\n}\n","import { StrType } from './StrType';\n\nexport class B256Type extends StrType {\n  public static override swayType = 'b256';\n\n  public override name = 'b256';\n\n  static override MATCH_REGEX = /^b256$/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    return B256Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import { B256Type } from './B256Type';\n\nexport class B512Type extends B256Type {\n  public static override swayType = 'struct B512';\n\n  public override name = 'b512';\n\n  static override MATCH_REGEX = /^struct (std::b512::)?B512$/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    return B512Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class BoolType extends AType implements IType {\n  public static swayType = 'bool';\n\n  public name = 'bool';\n\n  static MATCH_REGEX: RegExp = /^bool$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return BoolType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: 'boolean',\n      outputLabel: 'boolean',\n    };\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { ArrayType } from './ArrayType';\n\nexport class BytesType extends ArrayType {\n  public static override swayType = 'struct Bytes';\n\n  public override name = 'bytes';\n\n  static override MATCH_REGEX: RegExp = /^struct (std::bytes::)?Bytes/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    return BytesType.MATCH_REGEX.test(params.type);\n  }\n\n  public override parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'Bytes';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { JsonAbiType } from '../types/interfaces/JsonAbi';\n\nexport function extractStructName(params: { rawAbiType: JsonAbiType; regex: RegExp }) {\n  const { rawAbiType, regex } = params;\n\n  const matches = rawAbiType.type.match(regex);\n  const match = matches?.[2] ?? matches?.[1];\n\n  if (!match) {\n    let errorMessage = `Couldn't extract struct name with: '${regex}'.\\n\\n`;\n    errorMessage += `Check your JSON ABI.\\n\\n[source]\\n`;\n    errorMessage += `${JSON.stringify(rawAbiType, null, 2)}`;\n\n    throw new FuelError(ErrorCode.JSON_ABI_ERROR, errorMessage);\n  }\n\n  return match;\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class ResultType extends AType implements IType {\n  public static swayType = 'enum Result';\n\n  public name = 'result';\n\n  static MATCH_REGEX: RegExp = /^enum (std::result::)?Result$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return ResultType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: `Result`,\n      outputLabel: `Result`,\n    };\n    return this.attributes;\n  }\n}\n","import type { JsonAbiArgument } from '../../index';\nimport type { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { extractStructName } from '../../utils/extractStructName';\nimport { findType } from '../../utils/findType';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nimport { AType } from './AType';\nimport { EmptyType } from './EmptyType';\nimport { OptionType } from './OptionType';\nimport { ResultType } from './ResultType';\n\nexport class EnumType extends AType implements IType {\n  public static swayType = 'enum MyEnumName';\n\n  public name = 'enum';\n\n  static MATCH_REGEX: RegExp = /^enum (.+::)?(.+)$/m;\n  static IGNORE_REGEXES: RegExp[] = [OptionType.MATCH_REGEX, ResultType.MATCH_REGEX];\n\n  static isSuitableFor(params: { type: string }) {\n    const isAMatch = EnumType.MATCH_REGEX.test(params.type);\n    const shouldBeIgnored = EnumType.IGNORE_REGEXES.some((r) => r.test(params.type));\n    return isAMatch && !shouldBeIgnored;\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const structName = this.getStructName();\n\n    this.attributes = {\n      structName,\n      inputLabel: `${structName}Input`,\n      outputLabel: `${structName}Output`,\n    };\n\n    return this.attributes;\n  }\n\n  public getStructName() {\n    const name = extractStructName({\n      rawAbiType: this.rawAbiType,\n      regex: EnumType.MATCH_REGEX,\n    });\n    return name;\n  }\n\n  public getNativeEnum(params: { types: IType[] }) {\n    const { types } = params;\n\n    const typeHash: { [key: number]: IType['rawAbiType']['type'] } = types.reduce(\n      (hash, row) => ({\n        ...hash,\n        [row.rawAbiType.typeId]: row.rawAbiType.type,\n      }),\n      {}\n    );\n\n    const { components } = this.rawAbiType;\n\n    // `components` array guaranteed to always exist for structs/enums\n    const enumComponents = components as JsonAbiArgument[];\n\n    if (!enumComponents.every(({ type }) => typeHash[type] === EmptyType.swayType)) {\n      return undefined;\n    }\n\n    return enumComponents.map(({ name }) => `${name} = '${name}'`).join(', ');\n  }\n\n  public getStructContents(params: { types: IType[]; target: TargetEnum }) {\n    const { types, target } = params;\n\n    const { components } = this.rawAbiType;\n\n    // `components` array guaranteed to always exist for structs/enums\n    const enumComponents = components as JsonAbiArgument[];\n\n    const attributeKey: 'inputLabel' | 'outputLabel' = `${target}Label`;\n\n    const contents = enumComponents.map((component) => {\n      const { name, type: typeId, typeArguments } = component;\n\n      if (typeId === 0) {\n        return `${name}: []`;\n      }\n\n      const type = findType({ types, typeId });\n      let typeDecl: string;\n\n      if (typeArguments) {\n        // recursively process child `typeArguments`\n        typeDecl = parseTypeArguments({\n          types,\n          target,\n          parentTypeId: typeId,\n          typeArguments,\n        });\n      } else {\n        // or just collect type declaration\n        typeDecl = type.attributes[attributeKey];\n      }\n\n      return `${name}: ${typeDecl}`;\n    });\n\n    return contents.join(', ');\n  }\n\n  public getStructDeclaration(params: { types: IType[] }) {\n    const { types } = params;\n    const { typeParameters } = this.rawAbiType;\n\n    if (typeParameters) {\n      const structs = typeParameters.map((typeId) => findType({ types, typeId }));\n\n      const labels = structs.map(({ attributes: { inputLabel } }) => inputLabel);\n\n      return `<${labels.join(', ')}>`;\n    }\n\n    return '';\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class EvmAddressType extends AType implements IType {\n  public static swayType = 'struct EvmAddress';\n\n  public name = 'evmAddress';\n\n  static MATCH_REGEX: RegExp = /^struct (std::vm::evm::evm_address::)?EvmAddress$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return EvmAddressType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'EvmAddress';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\nimport { extractStructName } from '../../utils/extractStructName';\n\nimport { AType } from './AType';\n\nexport class GenericType extends AType implements IType {\n  public static swayType = 'generic T';\n\n  public name = 'generic';\n\n  static MATCH_REGEX: RegExp = /^generic ([^\\s]+)$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return GenericType.MATCH_REGEX.test(params.type);\n  }\n\n  public getStructName() {\n    const name = extractStructName({\n      rawAbiType: this.rawAbiType,\n      regex: GenericType.MATCH_REGEX,\n    });\n    return name;\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const label = this.getStructName();\n\n    this.attributes = {\n      inputLabel: label,\n      outputLabel: label,\n    };\n\n    return this.attributes;\n  }\n}\n","import type { JsonAbiType } from '../../index';\nimport type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class U8Type extends AType implements IType {\n  public static swayType = 'u8';\n\n  public name = 'u8';\n\n  public static MATCH_REGEX: RegExp = /^u8$/m;\n\n  constructor(params: { rawAbiType: JsonAbiType }) {\n    super(params);\n    this.attributes = {\n      inputLabel: `BigNumberish`,\n      outputLabel: `number`,\n    };\n    this.requiredFuelsMembersImports = [this.attributes.inputLabel];\n  }\n\n  static isSuitableFor(params: { type: string }) {\n    return U8Type.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U8Type } from './U8Type';\n\nexport class U64Type extends U8Type implements IType {\n  public static override swayType = 'u64';\n\n  public override name = 'u64';\n\n  public static override MATCH_REGEX: RegExp = /^u64$/m;\n\n  public override parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: `BigNumberish`,\n      outputLabel: `BN`,\n    };\n    this.requiredFuelsMembersImports = Object.values(this.attributes);\n    return this.attributes;\n  }\n\n  static override isSuitableFor(params: { type: string }) {\n    return U64Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U64Type } from './U64Type';\n\nexport class RawUntypedPtr extends U64Type implements IType {\n  public static override swayType = 'raw untyped ptr';\n\n  public override name = 'rawUntypedPtr';\n\n  public static override MATCH_REGEX: RegExp = /^raw untyped ptr$/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    return RawUntypedPtr.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { ArrayType } from './ArrayType';\n\nexport class RawUntypedSlice extends ArrayType {\n  public static override swayType = 'raw untyped slice';\n\n  public override name = 'rawUntypedSlice';\n\n  public static override MATCH_REGEX: RegExp = /^raw untyped slice$/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    return RawUntypedSlice.MATCH_REGEX.test(params.type);\n  }\n\n  public override parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'RawSlice';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class StdStringType extends AType implements IType {\n  public static swayType = 'struct String';\n\n  public name = 'stdString';\n\n  static MATCH_REGEX: RegExp = /^struct (std::string::)?String/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return StdStringType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'StdString';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class StrSliceType extends AType implements IType {\n  public static swayType = 'str';\n\n  public name = 'strSlice';\n\n  static MATCH_REGEX: RegExp = /^str$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return StrSliceType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'StrSlice';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import type { JsonAbiArgument } from '../../index';\nimport type { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { extractStructName } from '../../utils/extractStructName';\nimport { findType } from '../../utils/findType';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nimport { AType } from './AType';\n\nexport class StructType extends AType implements IType {\n  public static swayType = 'struct MyStruct';\n\n  public name = 'struct';\n\n  static MATCH_REGEX: RegExp = /^struct (.+::)?(.+)$/m;\n  static IGNORE_REGEX: RegExp = /^struct (std::.*)?(Vec|RawVec|EvmAddress|Bytes|String|RawBytes)$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    const isAMatch = StructType.MATCH_REGEX.test(params.type);\n    const shouldBeIgnored = StructType.IGNORE_REGEX.test(params.type);\n    return isAMatch && !shouldBeIgnored;\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const structName = this.getStructName();\n\n    this.attributes = {\n      structName,\n      inputLabel: `${structName}Input`,\n      outputLabel: `${structName}Output`,\n    };\n\n    return this.attributes;\n  }\n\n  public getStructName() {\n    const name = extractStructName({\n      rawAbiType: this.rawAbiType,\n      regex: StructType.MATCH_REGEX,\n    });\n    return name;\n  }\n\n  public getStructContents(params: { types: IType[]; target: TargetEnum }) {\n    const { types, target } = params;\n    const { components } = this.rawAbiType;\n\n    // `components` array guaranteed to always exist for structs/enums\n    const structComponents = components as JsonAbiArgument[];\n\n    // loop through all components\n    const members = structComponents.map((component) => {\n      const { name, type: typeId, typeArguments } = component;\n\n      const type = findType({ types, typeId });\n\n      let typeDecl: string;\n\n      if (typeArguments) {\n        // recursively process child `typeArguments`\n        typeDecl = parseTypeArguments({\n          types,\n          target,\n          parentTypeId: typeId,\n          typeArguments,\n        });\n      } else {\n        // or just collect type declaration\n        const attributeKey: 'inputLabel' | 'outputLabel' = `${target}Label`;\n        typeDecl = type.attributes[attributeKey];\n      }\n\n      // assemble it in `[key: string]: <Type>` fashion\n      return `${name}: ${typeDecl}`;\n    });\n\n    return members.join(', ');\n  }\n\n  public getStructDeclaration(params: { types: IType[] }) {\n    const { types } = params;\n    const { typeParameters } = this.rawAbiType;\n\n    if (typeParameters) {\n      const structs = typeParameters.map((typeId) => findType({ types, typeId }));\n\n      const labels = structs.map(({ attributes: { inputLabel } }) => inputLabel);\n\n      return `<${labels.join(', ')}>`;\n    }\n\n    return '';\n  }\n}\n","import { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { findType } from '../../utils/findType';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nimport { AType } from './AType';\n\nexport class TupleType extends AType implements IType {\n  // Note: a tuple can have more/less than 3x items (like the one bellow)\n  public static swayType = '(_, _, _)';\n\n  public name = 'tupple';\n\n  static MATCH_REGEX: RegExp = /^\\([_,\\s]+\\)$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return TupleType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(params: { types: IType[] }) {\n    const { types } = params;\n\n    const inputs: string[] = [];\n    const outputs: string[] = [];\n\n    this.rawAbiType.components?.forEach((component) => {\n      const { type: typeId, typeArguments } = component;\n\n      if (!typeArguments) {\n        // if component has no type arguments, read its attributes and voilà\n        const { attributes } = findType({ types, typeId });\n\n        inputs.push(attributes.inputLabel);\n        outputs.push(attributes.outputLabel);\n      } else {\n        // otherwise process child `typeArguments` recursively\n        const inputLabel = parseTypeArguments({\n          types,\n          typeArguments,\n          parentTypeId: typeId,\n          target: TargetEnum.INPUT,\n        });\n\n        const outputLabel = parseTypeArguments({\n          types,\n          typeArguments,\n          parentTypeId: typeId,\n          target: TargetEnum.OUTPUT,\n        });\n\n        inputs.push(inputLabel);\n        outputs.push(outputLabel);\n      }\n    });\n\n    this.attributes = {\n      inputLabel: `[${inputs.join(', ')}]`,\n      outputLabel: `[${outputs.join(', ')}]`,\n    };\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U8Type } from './U8Type';\n\nexport class U16Type extends U8Type implements IType {\n  public static override swayType = 'u16';\n\n  public override name = 'u16';\n\n  public static override MATCH_REGEX: RegExp = /^u16$/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    return U16Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U64Type } from './U64Type';\n\nexport class U256Type extends U64Type implements IType {\n  public static override swayType = 'u256';\n\n  public override name = 'u256';\n\n  public static override MATCH_REGEX: RegExp = /^u256$/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    return U256Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U8Type } from './U8Type';\n\nexport class U32Type extends U8Type implements IType {\n  public static override swayType = 'u32';\n\n  public override name = 'u32';\n\n  public static override MATCH_REGEX: RegExp = /^u32$/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    return U32Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { ArrayType } from './ArrayType';\n\nexport class VectorType extends ArrayType {\n  public static override swayType = 'struct Vec';\n\n  public override name = 'vector';\n\n  static override MATCH_REGEX: RegExp = /^struct (std::vec::)?Vec/m;\n  static IGNORE_REGEX: RegExp = /^struct (std::vec::)?RawVec$/m;\n\n  static override isSuitableFor(params: { type: string }) {\n    const isAMatch = VectorType.MATCH_REGEX.test(params.type);\n    const shouldBeIgnored = VectorType.IGNORE_REGEX.test(params.type);\n    return isAMatch && !shouldBeIgnored;\n  }\n\n  public override parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: `Vec`,\n      outputLabel: `Vec`,\n    };\n    return this.attributes;\n  }\n}\n","import { ArrayType } from '../abi/types/ArrayType';\nimport { B256Type } from '../abi/types/B256Type';\nimport { B512Type } from '../abi/types/B512Type';\nimport { BoolType } from '../abi/types/BoolType';\nimport { BytesType } from '../abi/types/BytesType';\nimport { EmptyType } from '../abi/types/EmptyType';\nimport { EnumType } from '../abi/types/EnumType';\nimport { EvmAddressType } from '../abi/types/EvmAddressType';\nimport { GenericType } from '../abi/types/GenericType';\nimport { OptionType } from '../abi/types/OptionType';\nimport { RawUntypedPtr } from '../abi/types/RawUntypedPtr';\nimport { RawUntypedSlice } from '../abi/types/RawUntypedSlice';\nimport { ResultType } from '../abi/types/ResultType';\nimport { StdStringType } from '../abi/types/StdStringType';\nimport { StrSliceType } from '../abi/types/StrSliceType';\nimport { StrType } from '../abi/types/StrType';\nimport { StructType } from '../abi/types/StructType';\nimport { TupleType } from '../abi/types/TupleType';\nimport { U16Type } from '../abi/types/U16Type';\nimport { U256Type } from '../abi/types/U256Type';\nimport { U32Type } from '../abi/types/U32Type';\nimport { U64Type } from '../abi/types/U64Type';\nimport { U8Type } from '../abi/types/U8Type';\nimport { VectorType } from '../abi/types/VectorType';\n\nexport const supportedTypes = [\n  EmptyType,\n  ArrayType,\n  B256Type,\n  B512Type,\n  BoolType,\n  BytesType,\n  EnumType,\n  GenericType,\n  OptionType,\n  RawUntypedPtr,\n  RawUntypedSlice,\n  StdStringType,\n  StrType,\n  StrSliceType,\n  StructType,\n  TupleType,\n  U16Type,\n  U32Type,\n  U64Type,\n  U256Type,\n  U8Type,\n  VectorType,\n  EvmAddressType,\n  ResultType,\n];\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { JsonAbiType } from '../types/interfaces/JsonAbi';\n\nimport { supportedTypes } from './supportedTypes';\n\nexport function makeType(params: { rawAbiType: JsonAbiType }) {\n  const { rawAbiType } = params;\n  const { type } = rawAbiType;\n\n  const TypeClass = supportedTypes.find((tc) => tc.isSuitableFor({ type }));\n\n  if (!TypeClass) {\n    throw new FuelError(ErrorCode.TYPE_NOT_SUPPORTED, `Type not supported: ${type}`);\n  }\n\n  return new TypeClass(params);\n}\n","export function shouldSkipAbiType(params: { type: string }) {\n  const ignoreList = [\n    'struct RawVec',\n    'struct std::vec::RawVec',\n    'struct RawBytes',\n    'struct std::bytes::RawBytes',\n  ];\n  const shouldSkip = ignoreList.indexOf(params.type) >= 0;\n  return shouldSkip;\n}\n","import type { IType } from '../types/interfaces/IType';\nimport type { JsonAbiType } from '../types/interfaces/JsonAbi';\n\nimport { makeType } from './makeType';\nimport { shouldSkipAbiType } from './shouldSkipAbiType';\n\nexport function parseTypes(params: { rawAbiTypes: readonly JsonAbiType[] }) {\n  const types: IType[] = [];\n\n  // First we parse all ROOT nodes\n  params.rawAbiTypes.forEach((rawAbiType) => {\n    const { type } = rawAbiType;\n    const skip = shouldSkipAbiType({ type });\n    if (!skip) {\n      const parsedType = makeType({ rawAbiType });\n      types.push(parsedType);\n    }\n  });\n\n  // Then we parse all their components' [attributes]\n  types.forEach((type) => {\n    type.parseComponentsAttributes({ types });\n  });\n\n  return types;\n}\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\nconst findTypeByConcreteId = (types, id) => types.find((x) => x.concreteTypeId === id);\n\nconst findConcreteTypeById = (abi, id) => abi.concreteTypes.find((x) => x.concreteTypeId === id);\n\nfunction finsertTypeIdByConcreteTypeId(abi, types, id) {\n  const concreteType = findConcreteTypeById(abi, id);\n\n  if (concreteType.metadataTypeId !== undefined) {\n    return concreteType.metadataTypeId;\n  }\n\n  const type = findTypeByConcreteId(types, id);\n  if (type) {\n    return type.typeId;\n  }\n\n  types.push({\n    typeId: types.length,\n    type: concreteType.type,\n    components: parseComponents(concreteType.components),\n    concreteTypeId: id,\n    typeParameters: concreteType.typeParameters ?? null,\n    originalConcreteTypeId: concreteType?.concreteTypeId,\n  });\n\n  return types.length - 1;\n}\n\nfunction parseFunctionTypeArguments(abi, types, concreteType) {\n  return (\n    concreteType.typeArguments?.map((cTypeId) => {\n      const self = findConcreteTypeById(abi, cTypeId);\n      const type = !isNaN(cTypeId) ? cTypeId : finsertTypeIdByConcreteTypeId(abi, types, cTypeId);\n      return {\n        name: '',\n        type,\n        // originalTypeId: cTypeId,\n        typeArguments: parseFunctionTypeArguments(abi, types, self),\n      };\n    }) ?? null\n  );\n}\n\nexport function parseConcreteType(abi, types, concreteTypeId, name) {\n  const type = finsertTypeIdByConcreteTypeId(abi, types, concreteTypeId);\n  const concrete = findConcreteTypeById(abi, concreteTypeId);\n  return {\n    name: name ?? '',\n    type,\n    // concreteTypeId,\n    typeArguments: parseFunctionTypeArguments(abi, types, concrete),\n  };\n}\n\nfunction parseComponents(abi, types, components) {\n  return (\n    components?.map((component) => {\n      const { typeId, name, typeArguments } = component;\n      const type = !isNaN(typeId) ? typeId : finsertTypeIdByConcreteTypeId(abi, types, typeId);\n      return {\n        name,\n        type,\n        // originalTypeId: typeId,\n        typeArguments: parseComponents(abi, types, typeArguments),\n      };\n    }) ?? null\n  );\n}\n\n/**\n * This will transpile new ABIs (spec: \"1\") to the old format.\n *\n * The new format got these new props:\n *    - `specVersion`,\n *    - `concreteTypes`\n *    - `metadataTypes`\n *\n * The old format contains only:\n *    - `types`\n */\nexport function transpileAbi(abi) {\n  // do not transpile older versions\n  if (!abi.specVersion) {\n    return abi;\n  }\n\n  // 0. define empty types array\n  const types = [];\n\n  // 1. root level of metadata types\n  abi.metadataTypes.forEach((m) => {\n    const t = {\n      typeId: m.metadataTypeId,\n      type: m.type,\n      components: m.components ?? (m.type === '()' ? [] : null),\n      typeParameters: m.typeParameters ?? null,\n    };\n    types.push(t);\n  });\n\n  // 2. the metadata's components\n  types.forEach((t) => {\n    t.components = parseComponents(abi, types, t.components);\n  });\n\n  // 3. functions inputs/outputs\n  const functions = abi.functions.map((fn) => {\n    const inputs = fn.inputs.map(({ concreteTypeId, name }) =>\n      parseConcreteType(abi, types, concreteTypeId, name)\n    );\n    const output = parseConcreteType(abi, types, fn.output, '');\n    return { ...fn, inputs, output };\n  });\n\n  // 4. configurables\n  const configurables = abi.configurables.map((conf) => ({\n    name: conf.name,\n    configurableType: parseConcreteType(abi, types, conf.concreteTypeId),\n    offset: conf.offset,\n  }));\n\n  // 5. loggedTypes\n  const loggedTypes = abi.loggedTypes.map((log) => ({\n    logId: log.logId,\n    loggedType: parseConcreteType(abi, types, log.concreteTypeId),\n  }));\n\n  // transpiled ABI\n  const transpiled = {\n    encoding: abi.encodingVersion,\n    types,\n    functions,\n    loggedTypes,\n    messagesTypes: abi.messagesTypes,\n    configurables,\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return transpiled as any;\n}\n","import type { IConfigurable } from '../../types/interfaces/IConfigurable';\nimport type { IType } from '../../types/interfaces/IType';\nimport type { JsonAbiConfigurable } from '../../types/interfaces/JsonAbi';\nimport { resolveInputLabel } from '../../utils/getTypeDeclaration';\n\nexport class Configurable implements IConfigurable {\n  public name: string;\n  public inputLabel: string;\n\n  constructor(params: { types: IType[]; rawAbiConfigurable: JsonAbiConfigurable }) {\n    const {\n      types,\n      rawAbiConfigurable: {\n        name,\n        configurableType: { type, typeArguments },\n      },\n    } = params;\n\n    this.name = name;\n\n    this.inputLabel = resolveInputLabel(types, type, typeArguments);\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { normalizeString } from '@fuel-ts/utils';\n\nimport type { ProgramTypeEnum } from '../types/enums/ProgramTypeEnum';\nimport type { IConfigurable } from '../types/interfaces/IConfigurable';\nimport type { IFunction } from '../types/interfaces/IFunction';\nimport type { IType } from '../types/interfaces/IType';\nimport type { JsonAbiOld } from '../types/interfaces/JsonAbi';\nimport type { JsonAbi } from '../types/interfaces/JsonAbiNew';\nimport { parseFunctions } from '../utils/parseFunctions';\nimport { parseTypes } from '../utils/parseTypes';\nimport { transpileAbi } from '../utils/transpile-abi';\n\nimport { Configurable } from './configurable/Configurable';\n\n/*\n  Manages many instances of Types and Functions\n*/\nexport class Abi {\n  public capitalizedName: string;\n  public camelizedName: string;\n  public programType: ProgramTypeEnum;\n\n  public filepath: string;\n  public outputDir: string;\n\n  public commonTypesInUse: string[] = [];\n\n  public rawContents: JsonAbi;\n  public hexlifiedBinContents?: string;\n  public storageSlotsContents?: string;\n\n  public types: IType[];\n  public functions: IFunction[];\n  public configurables: IConfigurable[];\n\n  constructor(params: {\n    filepath: string;\n    programType: ProgramTypeEnum;\n    rawContents: JsonAbi;\n    hexlifiedBinContents?: string;\n    storageSlotsContents?: string;\n    outputDir: string;\n  }) {\n    const {\n      filepath,\n      outputDir,\n      rawContents,\n      hexlifiedBinContents,\n      programType,\n      storageSlotsContents,\n    } = params;\n\n    const abiNameRegex = /([^/]+)-abi\\.json$/m;\n    const abiName = filepath.match(abiNameRegex);\n\n    const couldNotParseName = !abiName || abiName.length === 0;\n\n    if (couldNotParseName) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Could not parse name from ABI file: ${filepath}.`\n      );\n    }\n\n    this.programType = programType;\n    this.capitalizedName = `${normalizeString(abiName[1])}`;\n    this.camelizedName = this.capitalizedName.replace(/^./m, (x) => x.toLowerCase());\n\n    this.filepath = filepath;\n    this.rawContents = rawContents;\n    this.hexlifiedBinContents = hexlifiedBinContents;\n    this.storageSlotsContents = storageSlotsContents;\n    this.outputDir = outputDir;\n\n    const { types, functions, configurables } = this.parse();\n\n    this.types = types;\n    this.functions = functions;\n    this.configurables = configurables;\n\n    this.computeCommonTypesInUse();\n  }\n\n  parse() {\n    const transpiled = transpileAbi(this.rawContents) as JsonAbiOld;\n    const {\n      types: rawAbiTypes,\n      functions: rawAbiFunctions,\n      configurables: rawAbiConfigurables,\n    } = transpiled;\n\n    const types = parseTypes({ rawAbiTypes });\n    const functions = parseFunctions({ rawAbiFunctions, types });\n    const configurables = rawAbiConfigurables.map(\n      (rawAbiConfigurable) => new Configurable({ types, rawAbiConfigurable })\n    );\n\n    return {\n      types,\n      functions,\n      configurables,\n    };\n  }\n\n  computeCommonTypesInUse() {\n    const customTypesTable: Record<string, string> = {\n      option: 'Option',\n      enum: 'Enum',\n      vector: 'Vec',\n      result: 'Result',\n    };\n\n    this.commonTypesInUse = [];\n\n    Object.keys(customTypesTable).forEach((typeName) => {\n      const isInUse = !!this.types.find((t) => t.name === typeName);\n\n      if (isInUse) {\n        const commonTypeLabel: string = customTypesTable[typeName];\n        this.commonTypesInUse.push(commonTypeLabel);\n      }\n    });\n  }\n}\n","export enum ProgramTypeEnum {\n  CONTRACT = 'contract',\n  SCRIPT = 'script',\n  PREDICATE = 'predicate',\n}\n","import type { BinaryVersions } from '@fuel-ts/versions';\nimport { join } from 'path';\n\nimport type { Abi } from '../abi/Abi';\nimport type { IFile } from '../index';\nimport { renderCommonTemplate } from '../templates/common/common';\nimport { renderIndexTemplate } from '../templates/common/index';\nimport { renderFactoryTemplate } from '../templates/contract/factory';\nimport { renderMainTemplate } from '../templates/contract/main';\n\n/**\n * Render all Contract-related templates and returns\n * an array of `IFile` with them all. For here on,\n * the only thing missing is to write them to disk.\n */\nexport function assembleContracts(params: {\n  abis: Abi[];\n  outputDir: string;\n  versions: BinaryVersions;\n}) {\n  const { abis, outputDir, versions } = params;\n\n  const files: IFile[] = [];\n  const usesCommonTypes = abis.find((a) => a.commonTypesInUse.length > 0);\n\n  abis.forEach((abi) => {\n    const { capitalizedName } = abi;\n\n    const mainFilepath = `${outputDir}/${capitalizedName}.ts`;\n    const factoryFilepath = `${outputDir}/${capitalizedName}Factory.ts`;\n\n    const main: IFile = {\n      path: mainFilepath,\n      contents: renderMainTemplate({ abi, versions }),\n    };\n\n    const factory: IFile = {\n      path: factoryFilepath,\n      contents: renderFactoryTemplate({ abi, versions }),\n    };\n\n    files.push(main);\n    files.push(factory);\n  });\n\n  // Includes index file\n  const indexFile: IFile = {\n    path: `${outputDir}/index.ts`,\n    contents: renderIndexTemplate({ files, versions }),\n  };\n\n  files.push(indexFile);\n\n  // Conditionally includes `common.d.ts` file if needed\n  if (usesCommonTypes) {\n    const commonsFilepath = join(outputDir, 'common.d.ts');\n    const file: IFile = {\n      path: commonsFilepath,\n      contents: renderCommonTemplate({ versions }),\n    };\n    files.push(file);\n  }\n\n  return files;\n}\n","import type { BinaryVersions } from '@fuel-ts/versions';\nimport Handlebars from 'handlebars';\n\nimport headerTemplate from './common/_header.hbs';\n\n/*\n  Renders the given template w/ the given data, while injecting common\n  header for disabling lint rules and annotating Fuel component's versions.\n*/\nexport function renderHbsTemplate(params: {\n  template: string;\n  versions: BinaryVersions;\n  data?: Record<string, unknown>;\n}) {\n  const { data, template, versions } = params;\n\n  const options = {\n    strict: true,\n    noEscape: true,\n  };\n\n  const renderTemplate = Handlebars.compile(template, options);\n  const renderHeaderTemplate = Handlebars.compile(headerTemplate, options);\n\n  const text = renderTemplate({\n    ...data,\n    header: renderHeaderTemplate(versions),\n  });\n\n  return text.replace(/[\\n]{3,}/gm, '\\n\\n');\n}\n","import type { BinaryVersions } from '@fuel-ts/versions';\n\nimport { renderHbsTemplate } from '../renderHbsTemplate';\n\nimport commonTemplate from './common.hbs';\n\nexport function renderCommonTemplate(params: { versions: BinaryVersions }) {\n  const { versions } = params;\n  const text = renderHbsTemplate({ template: commonTemplate, versions });\n  return text;\n}\n","import type { BinaryVersions } from '@fuel-ts/versions';\n\nimport type { IFile } from '../../types/interfaces/IFile';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\n\nimport indexTemplate from './index.hbs';\n\nexport function renderIndexTemplate(params: {\n  files: Pick<IFile, 'path'>[];\n  versions: BinaryVersions;\n}) {\n  const { files, versions } = params;\n\n  const members = files.map((f) => f.path.match(/([^/]+)\\.ts$/m)?.[1]);\n\n  const text = renderHbsTemplate({\n    template: indexTemplate,\n    versions,\n    data: {\n      members,\n    },\n  });\n\n  return text;\n}\n","import { compressBytecode } from '@fuel-ts/utils';\nimport type { BinaryVersions } from '@fuel-ts/versions';\n\nimport type { Abi } from '../../abi/Abi';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\n\nimport factoryTemplate from './factory.hbs';\n\nexport function renderFactoryTemplate(params: { abi: Abi; versions: BinaryVersions }) {\n  const { versions, abi } = params;\n  const {\n    camelizedName,\n    capitalizedName,\n    rawContents,\n    storageSlotsContents,\n    hexlifiedBinContents: hexlifiedBinString,\n  } = abi;\n\n  const abiJsonString = JSON.stringify(rawContents, null, 2);\n  const storageSlotsJsonString = storageSlotsContents ?? '[]';\n\n  const text = renderHbsTemplate({\n    template: factoryTemplate,\n    versions,\n    data: {\n      camelizedName,\n      capitalizedName,\n      abiJsonString,\n      storageSlotsJsonString,\n      compressedBytecode: compressBytecode(hexlifiedBinString),\n    },\n  });\n\n  return text;\n}\n","import type { EnumType } from '../../abi/types/EnumType';\nimport { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\n\nexport function formatEnums(params: { types: IType[] }) {\n  const { types } = params;\n\n  const enums = types\n    .filter((t) => t.name === 'enum')\n    .map((t) => {\n      const et = t as EnumType; // only enums here\n      const structName = et.getStructName();\n      const inputValues = et.getStructContents({ types, target: TargetEnum.INPUT });\n      const outputValues = et.getStructContents({ types, target: TargetEnum.OUTPUT });\n      const inputNativeValues = et.getNativeEnum({ types });\n      const outputNativeValues = et.getNativeEnum({ types });\n      const typeAnnotations = et.getStructDeclaration({ types });\n\n      return {\n        structName,\n        inputValues,\n        outputValues,\n        recycleRef: inputValues === outputValues, // reduces duplication\n        inputNativeValues,\n        outputNativeValues,\n        typeAnnotations,\n      };\n    })\n    .sort((a, b) => (a.structName < b.structName ? -1 : 1));\n\n  return { enums };\n}\n","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var obj = arguments[arguments.length - 1];\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\";\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nexport default keys;","import _curry1 from \"./internal/_curry1.js\";\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig * -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(async () => {}); //=> \"AsyncFunction\"\n *      R.type(undefined); //=> \"Undefined\"\n *      R.type(BigInt(123)); //=> \"BigInt\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparison of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n  var typeA = type(a);\n  if (typeA !== type(b)) {\n    return false;\n  }\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _identity(x) {\n  return x;\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _includes from \"./_includes.js\";\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _Set from \"./_Set.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar XUniqBy = /*#__PURE__*/function () {\n  function XUniqBy(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.set = new _Set();\n  }\n  XUniqBy.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqBy.prototype['@@transducer/result'] = _xfBase.result;\n  XUniqBy.prototype['@@transducer/step'] = function (result, input) {\n    return this.set.add(this.f(input)) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n  return XUniqBy;\n}();\nexport default function _xuniqBy(f) {\n  return function (xf) {\n    return new XUniqBy(f, xf);\n  };\n}","import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xuniqBy from \"./internal/_xuniqBy.js\";\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xuniqBy, function (fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n}));\nexport default uniqBy;","import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import { uniq } from 'ramda';\n\nimport type { IType } from '../../types/interfaces/IType';\n\nconst caseInsensitiveSort = (a: string, b: string) =>\n  a.toLowerCase().localeCompare(b.toLowerCase());\n\nexport function formatImports(params: { types: IType[]; baseMembers?: string[] }) {\n  const { types, baseMembers = [] } = params;\n\n  const members = types.flatMap((t) => t.requiredFuelsMembersImports);\n  const imports = uniq(baseMembers.concat(members).sort(caseInsensitiveSort));\n\n  return {\n    imports: imports.length ? imports : undefined,\n  };\n}\n","import type { StructType } from '../../abi/types/StructType';\nimport { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\n\nexport function formatStructs(params: { types: IType[] }) {\n  const { types } = params;\n\n  const structs = types\n    .filter((t) => t.name === 'struct')\n    .map((t) => {\n      const st = t as StructType; // only structs here\n      const structName = st.getStructName();\n      const inputValues = st.getStructContents({ types, target: TargetEnum.INPUT });\n      const outputValues = st.getStructContents({ types, target: TargetEnum.OUTPUT });\n      const typeAnnotations = st.getStructDeclaration({ types });\n      return {\n        structName,\n        typeAnnotations,\n        inputValues,\n        outputValues,\n        recycleRef: inputValues === outputValues, // reduces duplication\n      };\n    })\n    .sort((a, b) => (a.structName < b.structName ? -1 : 1));\n\n  return { structs };\n}\n","import type { BinaryVersions } from '@fuel-ts/versions';\n\nimport type { Abi } from '../../abi/Abi';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\nimport { formatEnums } from '../utils/formatEnums';\nimport { formatImports } from '../utils/formatImports';\nimport { formatStructs } from '../utils/formatStructs';\n\nimport mainTemplate from './main.hbs';\n\nexport function renderMainTemplate(params: { abi: Abi; versions: BinaryVersions }) {\n  const { versions, abi } = params;\n  const { camelizedName, capitalizedName, types, functions, commonTypesInUse, configurables } = abi;\n\n  /*\n    First we format all attributes\n  */\n  const functionsTypedefs = functions.map((f) => f.getDeclaration());\n\n  const functionsFragments = functions.map((f) => f.name);\n\n  const encoders = functions.map((f) => ({\n    functionName: f.name,\n    input: f.attributes.inputs,\n  }));\n\n  const decoders = functions.map((f) => ({\n    functionName: f.name,\n  }));\n\n  const { enums } = formatEnums({ types });\n  const { structs } = formatStructs({ types });\n  const { imports } = formatImports({\n    types,\n    baseMembers: ['FunctionFragment', 'InvokeFunction'],\n  });\n\n  const { rawContents, storageSlotsContents } = params.abi;\n  const abiJsonString = JSON.stringify(rawContents, null, 2);\n  const storageSlotsJsonString = storageSlotsContents ?? '[]';\n\n  /*\n    And finally render template\n  */\n  const text = renderHbsTemplate({\n    template: mainTemplate,\n    versions,\n    data: {\n      camelizedName,\n      capitalizedName,\n      commonTypesInUse: commonTypesInUse.join(', '),\n      functionsTypedefs,\n      functionsFragments,\n      encoders,\n      decoders,\n      structs,\n      enums,\n      imports,\n      abiJsonString,\n      storageSlotsJsonString,\n      configurables,\n    },\n  });\n\n  return text;\n}\n","import type { BinaryVersions } from '@fuel-ts/versions';\nimport { join } from 'path';\n\nimport type { Abi } from '../abi/Abi';\nimport type { IFile } from '../index';\nimport { renderCommonTemplate } from '../templates/common/common';\nimport { renderIndexTemplate } from '../templates/common/index';\nimport { renderMainTemplate } from '../templates/predicate/main';\n\n/**\n * Render all Predicate-related templates and returns\n * an array of `IFile` with them all. For here on,\n * the only thing missing is to write them to disk.\n */\nexport function assemblePredicates(params: {\n  abis: Abi[];\n  outputDir: string;\n  versions: BinaryVersions;\n}) {\n  const { abis, outputDir, versions } = params;\n\n  const files: IFile[] = [];\n  const usesCommonTypes = abis.find((a) => a.commonTypesInUse.length > 0);\n\n  abis.forEach((abi) => {\n    const { capitalizedName: name } = abi;\n\n    const factoryFilepath = `${outputDir}/${name}.ts`;\n\n    const factory: IFile = {\n      path: factoryFilepath,\n      contents: renderMainTemplate({ abi, versions }),\n    };\n\n    files.push(factory);\n  });\n\n  // Includes index file\n  const indexFile: IFile = {\n    path: `${outputDir}/index.ts`,\n    contents: renderIndexTemplate({ files, versions }),\n  };\n\n  files.push(indexFile);\n\n  // Conditionally includes `common.d.ts` file if needed\n  if (usesCommonTypes) {\n    const commonsFilepath = join(outputDir, 'common.d.ts');\n    const file: IFile = {\n      path: commonsFilepath,\n      contents: renderCommonTemplate({ versions }),\n    };\n    files.push(file);\n  }\n\n  return files;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { compressBytecode } from '@fuel-ts/utils';\nimport type { BinaryVersions } from '@fuel-ts/versions';\n\nimport type { Abi } from '../../abi/Abi';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\nimport { formatEnums } from '../utils/formatEnums';\nimport { formatImports } from '../utils/formatImports';\nimport { formatStructs } from '../utils/formatStructs';\n\nimport mainTemplate from './main.hbs';\n\nexport function renderMainTemplate(params: { abi: Abi; versions: BinaryVersions }) {\n  const { abi, versions } = params;\n\n  const { types, configurables } = abi;\n\n  const {\n    rawContents,\n    capitalizedName,\n    hexlifiedBinContents: hexlifiedBinString,\n    commonTypesInUse,\n  } = params.abi;\n\n  const abiJsonString = JSON.stringify(rawContents, null, 2);\n\n  const func = abi.functions.find((f) => f.name === 'main');\n\n  if (!func) {\n    throw new FuelError(ErrorCode.ABI_MAIN_METHOD_MISSING, `ABI doesn't have a 'main()' method.`);\n  }\n\n  const { enums } = formatEnums({ types });\n  const { structs } = formatStructs({ types });\n  const { imports } = formatImports({\n    types,\n    baseMembers: ['Predicate', 'Provider', 'InputValue', 'PredicateParams', 'decompressBytecode'],\n  });\n\n  const { prefixedInputs: inputs, output } = func.attributes;\n\n  const text = renderHbsTemplate({\n    template: mainTemplate,\n    versions,\n    data: {\n      inputs,\n      output,\n      structs,\n      enums,\n      abiJsonString,\n      compressedBytecode: compressBytecode(hexlifiedBinString),\n      capitalizedName,\n      imports,\n      configurables,\n      commonTypesInUse: commonTypesInUse.join(', '),\n    },\n  });\n\n  return text;\n}\n","import type { BinaryVersions } from '@fuel-ts/versions';\nimport { join } from 'path';\n\nimport type { Abi } from '../abi/Abi';\nimport type { IFile } from '../index';\nimport { renderCommonTemplate } from '../templates/common/common';\nimport { renderIndexTemplate } from '../templates/common/index';\nimport { renderMainTemplate } from '../templates/script/main';\n\n/**\n * Render all Script-related templates and returns\n * an array of `IFile` with them all. For here on,\n * the only thing missing is to write them to disk.\n */\nexport function assembleScripts(params: {\n  abis: Abi[];\n  outputDir: string;\n  versions: BinaryVersions;\n}) {\n  const { abis, outputDir, versions } = params;\n\n  const files: IFile[] = [];\n  const usesCommonTypes = abis.find((a) => a.commonTypesInUse.length > 0);\n\n  abis.forEach((abi) => {\n    const { capitalizedName } = abi;\n\n    const factoryFilepath = `${outputDir}/${capitalizedName}.ts`;\n\n    const factory: IFile = {\n      path: factoryFilepath,\n      contents: renderMainTemplate({ abi, versions }),\n    };\n\n    files.push(factory);\n  });\n\n  // Includes index file\n  const indexFile: IFile = {\n    path: `${outputDir}/index.ts`,\n    contents: renderIndexTemplate({ files, versions }),\n  };\n\n  files.push(indexFile);\n\n  // Conditionally includes `common.d.ts` file if needed\n  if (usesCommonTypes) {\n    const commonsFilepath = join(outputDir, 'common.d.ts');\n    const file: IFile = {\n      path: commonsFilepath,\n      contents: renderCommonTemplate({ versions }),\n    };\n    files.push(file);\n  }\n\n  return files;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { compressBytecode } from '@fuel-ts/utils';\nimport type { BinaryVersions } from '@fuel-ts/versions';\n\nimport type { Abi } from '../../abi/Abi';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\nimport { formatEnums } from '../utils/formatEnums';\nimport { formatImports } from '../utils/formatImports';\nimport { formatStructs } from '../utils/formatStructs';\n\nimport mainTemplate from './main.hbs';\n\nexport function renderMainTemplate(params: { abi: Abi; versions: BinaryVersions }) {\n  const { abi, versions } = params;\n\n  const { types, configurables } = abi;\n\n  const {\n    rawContents,\n    capitalizedName,\n    hexlifiedBinContents: hexlifiedBinString,\n    commonTypesInUse,\n  } = params.abi;\n\n  const abiJsonString = JSON.stringify(rawContents, null, 2);\n\n  const func = abi.functions.find((f) => f.name === 'main');\n\n  if (!func) {\n    throw new FuelError(ErrorCode.ABI_MAIN_METHOD_MISSING, `ABI doesn't have a 'main()' method.`);\n  }\n\n  const { enums } = formatEnums({ types });\n  const { structs } = formatStructs({ types });\n  const { imports } = formatImports({\n    types,\n    baseMembers: ['Script', 'Account', 'decompressBytecode'],\n  });\n\n  const { prefixedInputs: inputs, output } = func.attributes;\n\n  const text = renderHbsTemplate({\n    template: mainTemplate,\n    versions,\n    data: {\n      inputs,\n      output,\n      structs,\n      enums,\n      abiJsonString,\n      compressedBytecode: compressBytecode(hexlifiedBinString),\n      capitalizedName,\n      imports,\n      configurables,\n      commonTypesInUse: commonTypesInUse.join(', '),\n    },\n  });\n\n  return text;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { ProgramTypeEnum } from '../types/enums/ProgramTypeEnum';\n\nconst upperFirst = (s: string): string => s[0].toUpperCase() + s.slice(1);\n\nexport function validateBinFile(params: {\n  abiFilepath: string;\n  binFilepath: string;\n  binExists: boolean;\n  programType: ProgramTypeEnum;\n}) {\n  const { abiFilepath, binFilepath, binExists, programType } = params;\n\n  const isScript = programType === ProgramTypeEnum.SCRIPT;\n\n  if (!binExists && isScript) {\n    throw new FuelError(\n      ErrorCode.BIN_FILE_NOT_FOUND,\n      [\n        `Could not find BIN file for counterpart ${upperFirst(programType)} ABI.`,\n        `  - ABI: ${abiFilepath}`,\n        `  - BIN: ${binFilepath}`,\n        programType,\n      ].join('\\n')\n    );\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BinaryVersions } from '@fuel-ts/versions';\n\nimport { Abi } from './abi/Abi';\nimport { ProgramTypeEnum } from './types/enums/ProgramTypeEnum';\nimport type { IFile } from './types/interfaces/IFile';\nimport { assembleContracts } from './utils/assembleContracts';\nimport { assemblePredicates } from './utils/assemblePredicates';\nimport { assembleScripts } from './utils/assembleScripts';\nimport { validateBinFile } from './utils/validateBinFile';\n\n/*\n  Manages many instances of Abi\n*/\nexport class AbiTypeGen {\n  public readonly abis: Abi[];\n  public readonly abiFiles: IFile[];\n  public readonly binFiles: IFile[];\n  public readonly storageSlotsFiles: IFile[];\n  public readonly outputDir: string;\n  public readonly files: IFile[];\n  public readonly versions: BinaryVersions;\n\n  constructor(params: {\n    abiFiles: IFile[];\n    binFiles: IFile[];\n    storageSlotsFiles: IFile[];\n    outputDir: string;\n    programType: ProgramTypeEnum;\n    versions: BinaryVersions;\n  }) {\n    const { abiFiles, binFiles, outputDir, programType, storageSlotsFiles, versions } = params;\n\n    this.outputDir = outputDir;\n\n    this.abiFiles = abiFiles;\n    this.binFiles = binFiles;\n    this.storageSlotsFiles = storageSlotsFiles;\n    this.versions = versions;\n\n    // Creates a `Abi` for each abi file\n    this.abis = this.abiFiles.map((abiFile) => {\n      const binFilepath = abiFile.path.replace('-abi.json', '.bin');\n      const relatedBinFile = this.binFiles.find(({ path }) => path === binFilepath);\n\n      const storageSlotFilepath = abiFile.path.replace('-abi.json', '-storage_slots.json');\n      const relatedStorageSlotsFile = this.storageSlotsFiles.find(\n        ({ path }) => path === storageSlotFilepath\n      );\n\n      if (!relatedBinFile) {\n        validateBinFile({\n          abiFilepath: abiFile.path,\n          binExists: !!relatedBinFile,\n          binFilepath,\n          programType,\n        });\n      }\n\n      const abi = new Abi({\n        filepath: abiFile.path,\n        rawContents: JSON.parse(abiFile.contents as string),\n        hexlifiedBinContents: relatedBinFile?.contents,\n        storageSlotsContents: relatedStorageSlotsFile?.contents,\n        outputDir,\n        programType,\n      });\n\n      return abi;\n    });\n\n    // Assemble list of files to be written to disk\n    this.files = this.getAssembledFiles({ programType });\n  }\n\n  private getAssembledFiles(params: { programType: ProgramTypeEnum }): IFile[] {\n    const { abis, outputDir, versions } = this;\n    const { programType } = params;\n\n    switch (programType) {\n      case ProgramTypeEnum.CONTRACT:\n        return assembleContracts({ abis, outputDir, versions });\n      case ProgramTypeEnum.SCRIPT:\n        return assembleScripts({ abis, outputDir, versions });\n      case ProgramTypeEnum.PREDICATE:\n        return assemblePredicates({ abis, outputDir, versions });\n      default:\n        throw new FuelError(\n          ErrorCode.INVALID_INPUT_PARAMETERS,\n          `Invalid Typegen programType: ${programType}. Must be one of ${Object.values(\n            ProgramTypeEnum\n          )}`\n        );\n    }\n  }\n}\n","import { hexlify } from '@fuel-ts/utils';\nimport { existsSync, readFileSync } from 'fs';\n\nimport type { ProgramTypeEnum } from '../types/enums/ProgramTypeEnum';\nimport type { IFile } from '../types/interfaces/IFile';\n\nimport { validateBinFile } from './validateBinFile';\n\nexport const collectBinFilepaths = (params: {\n  filepaths: string[];\n  programType: ProgramTypeEnum;\n}) => {\n  const { filepaths, programType } = params;\n\n  // validate and collect bin filepaths for Scripts and/or Predicates\n  const binFiles = filepaths.map((abiFilepath) => {\n    const binFilepath = abiFilepath.replace('-abi.json', '.bin');\n    const binExists = existsSync(binFilepath);\n\n    validateBinFile({ abiFilepath, binFilepath, binExists, programType });\n\n    const bin: IFile = {\n      path: binFilepath,\n      contents: hexlify(readFileSync(binFilepath)),\n    };\n\n    return bin;\n  });\n\n  return binFiles;\n};\n","import { existsSync, readFileSync } from 'fs';\n\nimport { ProgramTypeEnum } from '../types/enums/ProgramTypeEnum';\nimport type { IFile } from '../types/interfaces/IFile';\n\nexport const collectStorageSlotsFilepaths = (params: {\n  filepaths: string[];\n  programType: ProgramTypeEnum;\n}) => {\n  const { filepaths, programType } = params;\n\n  // collect filepaths for storage slots JSON files\n  const storageSlotsFiles: IFile[] = [];\n\n  // abort unless we're dealing with contract types\n  if (programType !== ProgramTypeEnum.CONTRACT) {\n    return storageSlotsFiles;\n  }\n\n  filepaths.forEach((abiFilepath) => {\n    const storageSlotsFilepath = abiFilepath.replace('-abi.json', '-storage_slots.json');\n    const storageSlotsExists = existsSync(storageSlotsFilepath);\n\n    if (storageSlotsExists) {\n      const storageSlots: IFile = {\n        path: storageSlotsFilepath,\n        contents: readFileSync(storageSlotsFilepath, 'utf-8'),\n      };\n\n      storageSlotsFiles.push(storageSlots);\n    }\n  });\n\n  return storageSlotsFiles;\n};\n"],"mappings":"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","names":["expand","module","exports","BN","Buffer","inspect","toString","allocate","ArrayType","comb10MulTo","prime","escape","toString","isFunction","options","ret","wrapper","ret","context","options","Handlebars","AST","path","parse","EOF","lexer","match","path","parse","equals","compile","type","path","match","normalize","path","join","identity","sourceFile","version","needle","section","toString","wrap","type","versions","type","types","path","module","fs","ErrorCode","__publicField","import_fs","glob","type","_a","glob","hasMagic","start","final","_b","i","acc","ext","_hasMagic","ext","qmark","star","type","expand","regExpEscape","fd","fl","import_node_url","type","v","bf","Stream","p","ret","resolve","res","rps","readdirCB","type","path","p","resolve","sep","fs","filter","process","promises","sync","platform","defaultPlatform","platform","path","rest","path","abs","target","defaultPlatform","import_fs","path","path","made","import_path","import_path","path","path","import_path","path","import_fs","path","path","import_path","glob","import_path","pathArg","path","type","root","import_fs","readdirSync","path","rdSync","fs","mkdir","readdir","stat","lstat","import_path","readdir","path","readdirSync","lstat","rmdir","unlink","path","ent","import_path","chmod","path","path","import_path","import_path","stat","path","lstat","rename","unlink","rmdir","chmod","path","ent","rm","rmSync","unlink","rmdir","lstat","path","filter","ent","rm","path","version","versArr","hasNative","useNative","useNativeSync","path","posix","useNativeSync","path","useNative","posix","BnJs","require","require","_a","_b","i","match","FuelError","ErrorCode","__publicField","types","types","type","types","types","type","Function","types","types","Function","types","types","type","match","types","type","types","type","types","type","types","type","types","type","types","type","types","ProgramTypeEnum","import_path","versions","Handlebars","versions","versions","common_default","versions","types","et","_b","_a","match","_isArguments","contains","keys","type","_a","_b","b","equals","_Set","type","XUniqBy","types","types","versions","types","versions","import_path","renderMainTemplate","versions","types","main_default","versions","renderMainTemplate","import_path","renderMainTemplate","versions","types","main_default","versions","renderMainTemplate","versions","path","import_fs","import_fs","versions"]}