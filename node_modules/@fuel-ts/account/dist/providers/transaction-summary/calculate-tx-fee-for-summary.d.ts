import type { BN } from '@fuel-ts/math';
import type { GqlFeeParameters } from '../__generated__/operations';
import type { ConsensusParameters } from '../provider';
type FeeParams = Pick<GqlFeeParameters, 'gasPerByte' | 'gasPriceFactor'> | {
    gasPerByte: BN | number;
    gasPriceFactor: BN | number;
};
export type CalculateTXFeeForSummaryParams = {
    gasPrice: BN;
    rawPayload: string;
    tip: BN;
    consensusParameters: Pick<ConsensusParameters, 'gasCosts'> & {
        feeParams: FeeParams;
        maxGasPerTx: BN;
    };
};
export declare const calculateTXFeeForSummary: (params: CalculateTXFeeForSummaryParams) => BN;
export {};
//# sourceMappingURL=calculate-tx-fee-for-summary.d.ts.map