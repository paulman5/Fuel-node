import type { FuelsConfig } from '../types';
export type ForcToml = {
    project: {
        authors?: string[];
        entry: string;
        license: string;
        name: string;
    };
    workspace: {
        members: string[];
    };
    dependencies: {
        [key: string]: string;
    };
    proxy?: {
        enabled: boolean;
        address?: string;
    };
};
export declare enum SwayType {
    contract = "contract",
    script = "script",
    predicate = "predicate",
    library = "library"
}
export declare const swayFiles: Map<string, SwayType>;
export declare const getClosestForcTomlDir: (dir: string) => string;
export declare function readForcToml(contractPath: string): ForcToml;
export declare function setForcTomlProxyAddress(contractPath: string, address: string): string;
export declare function readSwayType(path: string): SwayType;
export declare function getContractName(contractPath: string): string;
export declare function getScriptName(scriptPath: string): string;
export declare function getPredicateName(predicatePath: string): string;
export declare function getContractCamelCase(contractPath: string): string;
export declare function getBinaryPath(contractPath: string, { buildMode }: FuelsConfig): string;
export declare function getABIPath(contractPath: string, { buildMode }: FuelsConfig): string;
export declare function getABIPaths(paths: string[], config: FuelsConfig): Promise<string[]>;
export declare const getStorageSlotsPath: (contractPath: string, { buildMode }: FuelsConfig) => string;
//# sourceMappingURL=forcUtils.d.ts.map